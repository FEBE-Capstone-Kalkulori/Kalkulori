{"version":3,"file":"app~c3e02e18.bundle.js","mappings":"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","sources":["webpack://kalkulori/./src/scripts/pages/home/index.js","webpack://kalkulori/./src/scripts/pages/home/home-view.js"],"sourcesContent":["import HomePresenter from './home-presenter';\r\n\r\nconst home = {\r\n  async render() {\r\n    return `\r\n      <div class=\"main-content\" id=\"home-container\">\r\n        <h1>Selamat Datang di kalkulori</h1>\r\n        <p>Loading content...</p>\r\n      </div>\r\n    `;\r\n  },\r\n\r\n  async afterRender() {\r\n    const container = document.getElementById('home-container');\r\n    const homePresenter = new HomePresenter({ container });\r\n    await homePresenter.init();\r\n  }\r\n};\r\n\r\nexport default home;","import { MEAL_CATEGORIES } from './meal-categories.js';\r\nimport { createMealPlanSection, attachMealPlanEventHandlers } from './meal-plan.js';\r\nimport Header from '../../components/header.js';\r\n\r\nconst createHomeTemplate = (data) => {\r\n  return `\r\n    <div class=\"page-outer-wrapper\">\r\n      <div class=\"page-inner-wrapper\">\r\n        <div class=\"content-layout\">\r\n          <div class=\"left-column\">\r\n            <div class=\"content-box daily-calories-box\">\r\n              <h2>Daily Calories</h2>\r\n              ${createCalorieTracker(data)}\r\n              ${createTodaysMeals(data)}\r\n            </div>\r\n            \r\n            <div class=\"content-box meal-plan-box\">\r\n              <h2>Meal Plan</h2>\r\n              ${createMealPlanSection(data.mealPlan)}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"right-column\">\r\n            <div class=\"content-box suggestion-box\">\r\n              <h2>Meal Preferences</h2>\r\n              ${createCategoriesGrid(data)}\r\n              ${createSelectedKeywords(data)}\r\n            </div>\r\n\r\n            <div class=\"content-box meal-suggestions-box\">\r\n              <h2>Meal Suggestions</h2>\r\n              ${createMealSuggestionsSection(data)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    ${createCategoryPopup(data)}\r\n  `;\r\n};\r\n\r\nconst createCategoriesGrid = (data) => {\r\n  return `\r\n    <div class=\"categories-container\">\r\n      <p class=\"categories-description\">Choose your meal preferences (max 6):</p>\r\n      <div class=\"categories-grid\">\r\n        ${Object.entries(MEAL_CATEGORIES).map(([key, category]) => `\r\n          <div class=\"category-card\" data-category=\"${key}\">\r\n            <div class=\"category-icon\">${category.icon}</div>\r\n            <div class=\"category-title\">${category.title}</div>\r\n            <div class=\"category-count\">${data.selectedKeywords ? data.selectedKeywords.filter(k => category.keywords.includes(k)).length : 0} selected</div>\r\n          </div>\r\n        `).join('')}\r\n      </div>\r\n      ${data.selectedKeywords && data.selectedKeywords.length > 0 ? `\r\n        <div class=\"action-buttons\">\r\n          <button class=\"find-meals-btn\" id=\"find-meals-button\" ${data.selectedKeywords.length > 6 ? 'disabled' : ''}>\r\n            ${data.mealSuggestions?.loading ? 'Finding Meals...' : 'Find Meals'}\r\n          </button>\r\n          <button class=\"clear-all-btn\" id=\"clear-all-button\">Clear All</button>\r\n        </div>\r\n        ${data.selectedKeywords.length > 6 ? `\r\n          <p class=\"keyword-limit-warning\">⚠️ Maximum 6 keywords allowed. Please remove some keywords.</p>\r\n        ` : ''}\r\n      ` : ''}\r\n    </div>\r\n  `;\r\n};\r\n\r\nconst createSelectedKeywords = (data) => {\r\n  if (!data.selectedKeywords || data.selectedKeywords.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  return `\r\n    <div class=\"selected-keywords-container\">\r\n      <h4>Selected Preferences (${data.selectedKeywords.length}/6):</h4>\r\n      <div class=\"selected-keywords\">\r\n        ${data.selectedKeywords.map(keyword => `\r\n          <span class=\"keyword-tag ${data.selectedKeywords.length > 6 ? 'over-limit' : ''}\">\r\n            ${keyword}\r\n            <button class=\"remove-keyword\" data-keyword=\"${keyword}\">&times;</button>\r\n          </span>\r\n        `).join('')}\r\n      </div>\r\n    </div>\r\n  `;\r\n};\r\n\r\nconst createMealSuggestionsSection = (data) => {\r\n  if (data.mealSuggestions?.loading) {\r\n    return `\r\n      <div class=\"meal-suggestions-loading\">\r\n        <div class=\"loading-spinner\"></div>\r\n        <p>Finding personalized meal suggestions...</p>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  if (data.mealSuggestions?.error) {\r\n    return `\r\n      <div class=\"meal-suggestions-error\">\r\n        <p class=\"error-message\">${data.mealSuggestions.error}</p>\r\n        <div class=\"suggestions-grid\">\r\n          ${createSuggestionsFoodCards(data.suggestedMeals || [])}\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  const suggestionsToShow = data.mealSuggestions?.data || data.suggestedMeals || [];\r\n  const hasKeywords = data.selectedKeywords && data.selectedKeywords.length > 0;\r\n  const isFromAPI = data.mealSuggestions?.isFromAPI;\r\n\r\n  return `\r\n    <div class=\"meal-suggestions-content\">\r\n      ${hasKeywords && isFromAPI ? `\r\n        <p class=\"suggestions-info\">✨ Personalized suggestions based on your preferences</p>\r\n      ` : hasKeywords ? `\r\n        <p class=\"suggestions-info\">💡 Click \"Find Meals\" to get personalized suggestions</p>\r\n      ` : `\r\n        <p class=\"suggestions-info\">🍽️ Popular meal recommendations</p>\r\n      `}\r\n      \r\n      <div class=\"suggestions-grid\" id=\"suggestions-food-container\">\r\n        ${createSuggestionsFoodCards(suggestionsToShow)}\r\n      </div>\r\n      \r\n      ${suggestionsToShow.length === 0 ? `\r\n        <div class=\"no-suggestions\">\r\n          <p>No meal suggestions available. Try selecting some preferences and click \"Find Meals\"!</p>\r\n        </div>\r\n      ` : ''}\r\n    </div>\r\n  `;\r\n};\r\n\r\nconst createSuggestionsFoodCards = (suggestions) => {\r\n  if (!suggestions || suggestions.length === 0) {\r\n    return '<p class=\"no-suggestions-text\">No suggestions available</p>';\r\n  }\r\n\r\n  return suggestions.map(meal => `\r\n    <div class=\"suggestion-food-card\" data-meal-id=\"${meal.id || ''}\" data-serving-size=\"${meal.serving_size || 1}\" data-serving-unit=\"${meal.serving_unit || 'serving'}\">\r\n      <div class=\"suggestion-food-image\" data-meal-details-trigger>\r\n        <img src=\"${meal.image || 'https://images.unsplash.com/photo-1546554137-f86b9593a222?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80'}\" alt=\"${meal.name}\">\r\n        <div class=\"image-overlay\">\r\n          <span class=\"view-details-text\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#FFFFFF\"><path d=\"M480-320q75 0 127.5-52.5T660-500q0-75-52.5-127.5T480-680q-75 0-127.5 52.5T300-500q0 75 52.5 127.5T480-320Zm0-72q-45 0-76.5-31.5T372-500q0-45 31.5-76.5T480-608q45 0 76.5 31.5T588-500q0 45-31.5 76.5T480-392Zm0 192q-146 0-266-81.5T40-500q54-137 174-218.5T480-800q146 0 266 81.5T920-500q-54 137-174 218.5T480-200Zm0-300Zm0 220q113 0 207.5-59.5T832-500q-50-101-144.5-160.5T480-720q-113 0-207.5 59.5T128-500q50 101 144.5 160.5T480-280Z\"/></svg> View Details</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"suggestion-food-info\">\r\n        <h3 class=\"suggestion-food-name\">${meal.name}</h3>\r\n        <p class=\"suggestion-food-calories\">${meal.calories} kcal</p>\r\n      </div>\r\n      <button class=\"suggestion-add-button\" data-add-meal-trigger>\r\n        <span class=\"plus-icon\">+</span>\r\n      </button>\r\n    </div>\r\n  `).join('');\r\n};\r\n\r\nconst createCategoryPopup = (data) => {\r\n  return `\r\n    <div class=\"category-popup-overlay\" id=\"category-popup-overlay\">\r\n      <div class=\"category-popup\">\r\n        <div class=\"popup-header\">\r\n          <h3 id=\"popup-title\">Category</h3>\r\n          <button class=\"popup-close\" id=\"popup-close\">&times;</button>\r\n        </div>\r\n        <div class=\"popup-content\">\r\n          <div class=\"keywords-grid\" id=\"keywords-grid\">\r\n          </div>\r\n        </div>\r\n        <div class=\"popup-footer\">\r\n          <button class=\"popup-done-btn\" id=\"popup-done\">Done</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n};\r\n\r\nconst createCalorieTracker = (data) => {\r\n  if (data.loading) {\r\n    return `\r\n      <div class=\"loading-container\">\r\n        <div class=\"loading-spinner\"></div>\r\n        <p>Loading calorie data...</p>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  const percentage = Math.min((data.currentCalories / data.calorieLimit) * 100, 100);\r\n  const remaining = Math.max(data.calorieLimit - data.currentCalories, 0);\r\n  \r\n  return `\r\n    <div class=\"calorie-counter\">\r\n      <div class=\"calorie-display\">\r\n        <div class=\"calorie-number\">${data.currentCalories}</div>\r\n        <div class=\"calorie-progress\">\r\n          <div class=\"progress-bar\">\r\n            <div class=\"progress-fill\" style=\"width: ${percentage}%\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"calorie-remaining\">${remaining} kcal left!</div>\r\n      </div>\r\n      <button class=\"add-meal-btn\" id=\"add-meal-button\">Add Meal</button>\r\n    </div>\r\n  `;\r\n};\r\n\r\nconst createTodaysMeals = (data) => {\r\n  if (data.loading) {\r\n    return `\r\n      <div class=\"loading-container\">\r\n        <p>Loading today's meals...</p>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  if (data.mealEntries.length === 0) {\r\n    return `\r\n      <div class=\"todays-meals-section\">\r\n        <h3 class=\"todays-meals-title\">Today's Meals</h3>\r\n        <div class=\"no-meals-container\">\r\n          <p class=\"no-meals-message\">No meals added today</p>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  const mealsByType = groupMealsByType(data.mealEntries);\r\n  \r\n  return `\r\n    <div class=\"todays-meals-section\">\r\n      <h3 class=\"todays-meals-title\">Today's Meals</h3>\r\n      <div class=\"todays-meals\">\r\n        ${Object.entries(mealsByType).map(([mealType, meals]) => `\r\n          <div class=\"meal-type-section\">\r\n            <h4 class=\"meal-type-title\">${capitalizeFirst(mealType)}</h4>\r\n            <div class=\"meal-entries-compact\">\r\n              ${meals.map(meal => createCompactMealCard(meal)).join('')}\r\n            </div>\r\n          </div>\r\n        `).join('')}\r\n      </div>\r\n    </div>\r\n  `;\r\n};\r\n\r\nconst createCompactMealCard = (meal) => {\r\n  const foodDetails = meal.food_details;\r\n  \r\n  console.log('🔍 Creating compact meal card for meal:', {\r\n    id: meal.id,\r\n    food_name: meal.food_name,\r\n    is_from_search: meal.is_from_search,\r\n    is_from_recipe: meal.is_from_recipe,\r\n    recipe_id: meal.recipe_id,\r\n    food_item_id: meal.food_item_id,\r\n    raw_meal: meal\r\n  });\r\n  \r\n  let totalCalories = 0;\r\n  \r\n  if (meal.calories) {\r\n    totalCalories = Math.round(meal.calories);\r\n  } else if (meal.calories_consumed) {\r\n    totalCalories = Math.round(meal.calories_consumed);\r\n  } else if (foodDetails && foodDetails.calories_per_serving && meal.servings) {\r\n    totalCalories = Math.round(foodDetails.calories_per_serving * meal.servings);\r\n  } else if (meal.servings && foodDetails) {\r\n    const caloriesPerServing = foodDetails.calories_per_serving || 0;\r\n    totalCalories = Math.round(caloriesPerServing * meal.servings);\r\n  }\r\n\r\n  if (totalCalories === 0 && meal.servings > 0) {\r\n    const anyCalories = meal.calories || meal.calories_consumed || \r\n                       (foodDetails && foodDetails.calories_per_serving) || 0;\r\n    totalCalories = Math.round(anyCalories);\r\n  }\r\n  \r\n  let foodName = 'Unknown Food';\r\n  if (foodDetails && foodDetails.food_name) {\r\n    foodName = foodDetails.food_name;\r\n  } else if (meal.food_name) {\r\n    foodName = meal.food_name;\r\n  } else if (meal.is_from_search) {\r\n    foodName = 'Search Result';\r\n  } else if (meal.is_from_recipe) {\r\n    foodName = 'Recipe Meal';\r\n  }\r\n  \r\n  let imageUrl = 'https://images.unsplash.com/photo-1546554137-f86b9593a222?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80';\r\n  if (foodDetails && foodDetails.image_url) {\r\n    imageUrl = foodDetails.image_url;\r\n  }\r\n  \r\n  const mealId = meal.id;\r\n  console.log(`🎯 Using meal ID for delete button: ${mealId} for food: ${foodName}`);\r\n  \r\n  return `\r\n    <div class=\"compact-meal-card\" data-meal-id=\"${mealId}\">\r\n      <div class=\"compact-meal-image\">\r\n        <img src=\"${imageUrl}\" alt=\"${foodName}\" onerror=\"this.src='https://images.unsplash.com/photo-1546554137-f86b9593a222?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80'\">\r\n      </div>\r\n      <div class=\"compact-meal-info\">\r\n        <span class=\"compact-meal-name\">${foodName}</span>\r\n        <span class=\"compact-meal-details\">${meal.servings || 1}x • ${totalCalories} kcal</span>\r\n      </div>\r\n      <button class=\"delete-meal-btn\" data-meal-id=\"${mealId}\" title=\"Remove meal\">\r\n        <span>&times;</span>\r\n      </button>\r\n    </div>\r\n  `;\r\n};\r\n\r\nconst groupMealsByType = (mealEntries) => {\r\n  return mealEntries.reduce((groups, meal) => {\r\n    const type = meal.meal_type;\r\n    if (!groups[type]) {\r\n      groups[type] = [];\r\n    }\r\n    groups[type].push(meal);\r\n    return groups;\r\n  }, {});\r\n};\r\n\r\nconst capitalizeFirst = (str) => {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n};\r\n\r\nfunction extractMealDataFromCard(foodCard) {\r\n  const nameElement = foodCard.querySelector('.suggestion-food-name');\r\n  const caloriesElement = foodCard.querySelector('.suggestion-food-calories');\r\n  const imageElement = foodCard.querySelector('.suggestion-food-image img');\r\n  const nutritionElements = foodCard.querySelectorAll('.suggestion-food-nutrition span');\r\n  \r\n  const mealData = {\r\n    id: foodCard.dataset.mealId || null,\r\n    name: nameElement?.textContent || 'Unknown Meal',\r\n    calories: parseInt(caloriesElement?.textContent?.replace(' kcal', '')) || 0,\r\n    image: imageElement?.src || '',\r\n    serving_size: parseFloat(foodCard.dataset.servingSize) || 1,\r\n    serving_unit: foodCard.dataset.servingUnit || 'serving'\r\n  };\r\n\r\n  if (nutritionElements.length >= 3) {\r\n    mealData.protein = parseFloat(nutritionElements[0]?.textContent?.replace('P: ', '').replace('g', '')) || 0;\r\n    mealData.carbohydrate = parseFloat(nutritionElements[1]?.textContent?.replace('C: ', '').replace('g', '')) || 0;\r\n    mealData.fat = parseFloat(nutritionElements[2]?.textContent?.replace('F: ', '').replace('g', '')) || 0;\r\n  }\r\n\r\n  return mealData;\r\n}\r\n\r\nexport default {\r\n  render(container, data) {\r\n    const header = new Header();\r\n    const headerContainer = document.getElementById('header-container') || document.querySelector('header');\r\n    \r\n    if (headerContainer) {\r\n      headerContainer.innerHTML = header.render('home');\r\n      header.addSliderStyles();\r\n      header.initSlider();\r\n    }\r\n    \r\n    container.innerHTML = createHomeTemplate(data);\r\n  },\r\n  \r\n  afterRender(eventHandlers) {\r\n    const addMealButton = document.getElementById('add-meal-button');\r\n    const deleteMealButtons = document.querySelectorAll('.delete-meal-btn');\r\n    \r\n    const categoryCards = document.querySelectorAll('.category-card');\r\n    const popupOverlay = document.getElementById('category-popup-overlay');\r\n    const popupClose = document.getElementById('popup-close');\r\n    const popupDone = document.getElementById('popup-done');\r\n    const findMealsButton = document.getElementById('find-meals-button');\r\n    const clearAllButton = document.getElementById('clear-all-button');\r\n    const removeKeywordButtons = document.querySelectorAll('.remove-keyword');\r\n    \r\n    const suggestionAddButtons = document.querySelectorAll('[data-add-meal-trigger]');\r\n    const suggestionDetailsTriggers = document.querySelectorAll('[data-meal-details-trigger]');\r\n    \r\n    if (addMealButton && eventHandlers.onAddMealClicked) {\r\n      addMealButton.addEventListener('click', eventHandlers.onAddMealClicked);\r\n    }\r\n    \r\n    if (deleteMealButtons && eventHandlers.onDeleteMealClicked) {\r\n      console.log(`🔍 Found ${deleteMealButtons.length} delete buttons to bind`);\r\n      \r\n      deleteMealButtons.forEach((button, index) => {\r\n        const mealId = button.dataset.mealId;\r\n        console.log(`🔍 Binding delete event ${index + 1}: meal ID = \"${mealId}\" (type: ${typeof mealId})`);\r\n        \r\n        if (!mealId || mealId === 'undefined' || mealId === 'null') {\r\n          console.error(`❌ Invalid meal ID for delete button ${index + 1}:`, mealId);\r\n          return;\r\n        }\r\n        \r\n        button.addEventListener('click', (e) => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          \r\n          console.log(`🗑️ Delete clicked for meal ID: \"${mealId}\"`);\r\n          \r\n          const isConfirmed = confirm('Are you sure you want to remove this meal from your log?');\r\n          if (isConfirmed) {\r\n            console.log(`✅ Confirmed delete for meal ID: \"${mealId}\"`);\r\n            eventHandlers.onDeleteMealClicked(mealId);\r\n          } else {\r\n            console.log(`❌ Delete cancelled for meal ID: \"${mealId}\"`);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    if (categoryCards && eventHandlers.onCategoryClicked) {\r\n      categoryCards.forEach(card => {\r\n        card.addEventListener('click', () => {\r\n          const category = card.dataset.category;\r\n          eventHandlers.onCategoryClicked(category);\r\n        });\r\n      });\r\n    }\r\n\r\n    if (popupOverlay && eventHandlers.onPopupClosed) {\r\n      popupOverlay.addEventListener('click', (e) => {\r\n        if (e.target === popupOverlay) {\r\n          eventHandlers.onPopupClosed();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (popupClose && eventHandlers.onPopupClosed) {\r\n      popupClose.addEventListener('click', eventHandlers.onPopupClosed);\r\n    }\r\n\r\n    if (popupDone && eventHandlers.onPopupClosed) {\r\n      popupDone.addEventListener('click', eventHandlers.onPopupClosed);\r\n    }\r\n\r\n    if (findMealsButton && eventHandlers.onFindMealsClicked) {\r\n      findMealsButton.addEventListener('click', eventHandlers.onFindMealsClicked);\r\n    }\r\n\r\n    if (clearAllButton && eventHandlers.onClearAllClicked) {\r\n      clearAllButton.addEventListener('click', eventHandlers.onClearAllClicked);\r\n    }\r\n\r\n    if (removeKeywordButtons && eventHandlers.onKeywordRemoved) {\r\n      removeKeywordButtons.forEach(button => {\r\n        button.addEventListener('click', () => {\r\n          const keyword = button.dataset.keyword;\r\n          eventHandlers.onKeywordRemoved(keyword);\r\n        });\r\n      });\r\n    }\r\n\r\n    if (suggestionAddButtons && eventHandlers.onSuggestedMealClicked) {\r\n      suggestionAddButtons.forEach(button => {\r\n        button.addEventListener('click', (e) => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          \r\n          const foodCard = button.closest('.suggestion-food-card');\r\n          if (!foodCard) return;\r\n          \r\n          const mealData = extractMealDataFromCard(foodCard);\r\n          eventHandlers.onSuggestedMealClicked(mealData);\r\n        });\r\n      });\r\n    }\r\n\r\n    if (suggestionDetailsTriggers && eventHandlers.onSuggestedMealDetailsClicked) {\r\n      suggestionDetailsTriggers.forEach(trigger => {\r\n        trigger.addEventListener('click', (e) => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          \r\n          const foodCard = trigger.closest('.suggestion-food-card');\r\n          if (!foodCard) return;\r\n          \r\n          const mealData = extractMealDataFromCard(foodCard);\r\n          eventHandlers.onSuggestedMealDetailsClicked(mealData);\r\n        });\r\n      });\r\n    }\r\n\r\n    attachMealPlanEventHandlers(\r\n      eventHandlers.onGenerateMealPlan,\r\n      eventHandlers.onMealPlanItemClicked,\r\n      eventHandlers.onCompleteProfileClicked\r\n    );\r\n  },\r\n\r\n  showCategoryPopup(category, selectedKeywords = []) {\r\n    const popup = document.getElementById('category-popup-overlay');\r\n    const title = document.getElementById('popup-title');\r\n    const keywordsGrid = document.getElementById('keywords-grid');\r\n    \r\n    if (!popup || !title || !keywordsGrid) return;\r\n\r\n    const categoryData = MEAL_CATEGORIES[category];\r\n    if (!categoryData) return;\r\n\r\n    title.textContent = categoryData.title;\r\n    \r\n    keywordsGrid.innerHTML = categoryData.keywords.map(keyword => `\r\n      <div class=\"keyword-item ${selectedKeywords.includes(keyword) ? 'selected' : ''}\" data-keyword=\"${keyword}\">\r\n        <span class=\"keyword-text\">${keyword}</span>\r\n        <span class=\"keyword-check\">✓</span>\r\n      </div>\r\n    `).join('');\r\n\r\n    const keywordItems = keywordsGrid.querySelectorAll('.keyword-item');\r\n    keywordItems.forEach(item => {\r\n      item.addEventListener('click', () => {\r\n        const currentSelected = document.querySelectorAll('.keyword-item.selected').length;\r\n        const isCurrentlySelected = item.classList.contains('selected');\r\n        \r\n        if (!isCurrentlySelected && currentSelected >= 6) {\r\n          alert('Maximum 6 keywords allowed! Please unselect some keywords first.');\r\n          return;\r\n        }\r\n        \r\n        item.classList.toggle('selected');\r\n        const keyword = item.dataset.keyword;\r\n        \r\n        const event = new CustomEvent('keywordToggled', {\r\n          detail: { keyword, selected: item.classList.contains('selected') }\r\n        });\r\n        document.dispatchEvent(event);\r\n      });\r\n    });\r\n\r\n    popup.style.display = 'flex';\r\n  },\r\n\r\n  hideCategoryPopup() {\r\n    const popup = document.getElementById('category-popup-overlay');\r\n    if (popup) {\r\n      popup.style.display = 'none';\r\n    }\r\n  }\r\n};"],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","render","_callee","_context","afterRender","_callee2","container","homePresenter","_context2","document","getElementById","HomePresenter","init","createCategoriesGrid","data","_data$mealSuggestions","concat","entries","MEAL_CATEGORIES","map","_ref","_ref2","_slicedToArray","key","category","icon","title","selectedKeywords","filter","k","keywords","includes","join","mealSuggestions","loading","createSelectedKeywords","keyword","createMealSuggestionsSection","_data$mealSuggestions2","_data$mealSuggestions3","_data$mealSuggestions4","_data$mealSuggestions5","error","createSuggestionsFoodCards","suggestedMeals","suggestionsToShow","hasKeywords","isFromAPI","suggestions","meal","id","serving_size","serving_unit","image","calories","createCategoryPopup","createCalorieTracker","percentage","Math","min","currentCalories","calorieLimit","remaining","max","createTodaysMeals","mealEntries","mealsByType","groupMealsByType","_ref3","_ref4","mealType","meals","capitalizeFirst","createCompactMealCard","foodDetails","food_details","console","log","food_name","is_from_search","is_from_recipe","recipe_id","food_item_id","raw_meal","totalCalories","round","calories_consumed","calories_per_serving","servings","caloriesPerServing","anyCalories","foodName","imageUrl","image_url","mealId","reduce","groups","meal_type","str","toUpperCase","extractMealDataFromCard","foodCard","_caloriesElement$text","_nutritionElements$","_nutritionElements$2","_nutritionElements$3","nameElement","querySelector","caloriesElement","imageElement","nutritionElements","querySelectorAll","mealData","dataset","textContent","parseInt","replace","src","parseFloat","servingSize","servingUnit","protein","carbohydrate","fat","header","Header","headerContainer","innerHTML","addSliderStyles","initSlider","createMealPlanSection","mealPlan","createHomeTemplate","eventHandlers","addMealButton","deleteMealButtons","categoryCards","popupOverlay","popupClose","popupDone","findMealsButton","clearAllButton","removeKeywordButtons","suggestionAddButtons","suggestionDetailsTriggers","onAddMealClicked","addEventListener","onDeleteMealClicked","button","index","preventDefault","stopPropagation","confirm","onCategoryClicked","card","onPopupClosed","target","onFindMealsClicked","onClearAllClicked","onKeywordRemoved","onSuggestedMealClicked","closest","onSuggestedMealDetailsClicked","trigger","attachMealPlanEventHandlers","onGenerateMealPlan","onMealPlanItemClicked","onCompleteProfileClicked","showCategoryPopup","undefined","popup","keywordsGrid","categoryData","item","currentSelected","classList","contains","alert","toggle","event","CustomEvent","detail","selected","dispatchEvent","style","display","hideCategoryPopup"],"sourceRoot":""}