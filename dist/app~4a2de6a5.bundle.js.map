{"version":3,"file":"app~4a2de6a5.bundle.js","mappings":"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","sources":["webpack://kalkulori/./src/scripts/pages/templates/foodCard.js"],"sourcesContent":["function createFoodCard(imageUrl, foodName, calories, foodId = null, servingSize = null, servingUnit = null, isFromSearch = false, recipeId = null, protein = null, carbs = null, fat = null) {\r\n    return `\r\n        <div class=\"food-card\" data-food-id=\"${foodId || ''}\" data-serving-size=\"${servingSize || 1}\" data-serving-unit=\"${servingUnit || 'serving'}\" data-is-from-search=\"${isFromSearch || false}\" data-recipe-id=\"${recipeId || ''}\" data-protein=\"${protein || 0}\" data-carbs=\"${carbs || 0}\" data-fat=\"${fat || 0}\">\r\n            <div class=\"food-image\">\r\n                <img src=\"${imageUrl}\" alt=\"${foodName}\">\r\n                <button class=\"view-details-button\">\r\n                    <span class=\"details-icon\">ⓘ</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"food-info\">\r\n                <h3 class=\"food-name\">${foodName}</h3>\r\n                <p class=\"food-calories\">${calories || 0} kcal</p>\r\n            </div>\r\n            <button class=\"add-button\">\r\n                <span class=\"plus-icon\">+</span>\r\n            </button>\r\n        </div>\r\n    `;\r\n}\r\n\r\nfunction renderFoodCards(foodData, containerId) {\r\n    const container = document.getElementById(containerId);\r\n    if (!container) return;\r\n    \r\n    container.innerHTML = '';\r\n    \r\n    foodData.forEach(food => {\r\n        const cardHTML = createFoodCard(\r\n            food.image, \r\n            food.name, \r\n            food.calories, \r\n            food.id,\r\n            food.serving_size,\r\n            food.serving_unit,\r\n            food.is_from_search,\r\n            food.recipe_id,\r\n            food.protein,\r\n            food.carbs,\r\n            food.fat\r\n        );\r\n        container.innerHTML += cardHTML;\r\n    });\r\n    \r\n    bindFoodCardEvents(containerId);\r\n}\r\n\r\nfunction bindFoodCardEvents(containerId) {\r\n    const container = document.getElementById(containerId);\r\n    if (!container) return;\r\n    \r\n    const newAddButtons = container.querySelectorAll('.add-button');\r\n    newAddButtons.forEach(button => {\r\n        button.removeEventListener('click', handleAddButtonClick);\r\n        button.addEventListener('click', handleAddButtonClick);\r\n    });\r\n\r\n    const newDetailsButtons = container.querySelectorAll('.view-details-button');\r\n    newDetailsButtons.forEach(button => {\r\n        button.removeEventListener('click', handleDetailsButtonClick);\r\n        button.addEventListener('click', handleDetailsButtonClick);\r\n    });\r\n}\r\n\r\nfunction handleAddButtonClick(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    \r\n    const foodCard = event.target.closest('.food-card');\r\n    if (!foodCard) return;\r\n    \r\n    const foodName = foodCard.querySelector('.food-name')?.textContent || 'Unknown Food';\r\n    const foodCaloriesText = foodCard.querySelector('.food-calories')?.textContent || '0 kcal';\r\n    const foodCalories = parseInt(foodCaloriesText.replace(' kcal', '')) || 0;\r\n    const foodId = foodCard.dataset.foodId || null;\r\n    const servingSize = foodCard.dataset.servingSize || 1;\r\n    const servingUnit = foodCard.dataset.servingUnit || 'serving';\r\n    const recipeId = foodCard.dataset.recipeId || null;\r\n    const protein = parseFloat(foodCard.dataset.protein) || 0;\r\n    const carbs = parseFloat(foodCard.dataset.carbs) || 0;\r\n    const fat = parseFloat(foodCard.dataset.fat) || 0;\r\n    const imageUrl = foodCard.querySelector('.food-image img')?.src || null;\r\n    \r\n    console.log('Add button clicked for:', { foodName, foodCalories, foodId, recipeId });\r\n    \r\n    showAddMealPopup({\r\n        id: foodId,\r\n        recipe_id: recipeId,\r\n        name: foodName,\r\n        calories: foodCalories,\r\n        serving_size: servingSize,\r\n        serving_unit: servingUnit,\r\n        protein: protein,\r\n        carbs: carbs,\r\n        fat: fat,\r\n        image_url: imageUrl\r\n    });\r\n}\r\n\r\nfunction handleDetailsButtonClick(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    \r\n    const foodCard = event.target.closest('.food-card');\r\n    if (!foodCard) return;\r\n    \r\n    const foodName = foodCard.querySelector('.food-name')?.textContent || 'Unknown Food';\r\n    const foodCaloriesText = foodCard.querySelector('.food-calories')?.textContent || '0 kcal';\r\n    const foodCalories = parseInt(foodCaloriesText.replace(' kcal', '')) || 0;\r\n    const foodId = foodCard.dataset.foodId || null;\r\n    const recipeId = foodCard.dataset.recipeId || null;\r\n    const isFromSearch = foodCard.dataset.isFromSearch === 'true';\r\n    const servingSize = parseFloat(foodCard.dataset.servingSize) || 1;\r\n    const servingUnit = foodCard.dataset.servingUnit || 'serving';\r\n    const protein = parseFloat(foodCard.dataset.protein) || 0;\r\n    const carbs = parseFloat(foodCard.dataset.carbs) || 0;\r\n    const fat = parseFloat(foodCard.dataset.fat) || 0;\r\n    \r\n    console.log('Details button clicked for:', { foodName, foodId, recipeId, isFromSearch, protein, carbs, fat });\r\n    \r\n    const fallbackData = {\r\n        name: foodName,\r\n        calories: foodCalories || 0,\r\n        protein: protein || 0,\r\n        carbs: carbs || 0,\r\n        fat: fat || 0,\r\n        serving_size: servingSize || 1,\r\n        serving_unit: servingUnit || 'serving',\r\n        image_url: foodCard.querySelector('.food-image img')?.src || null\r\n    };\r\n    \r\n    if (recipeId && recipeId !== '' && recipeId !== 'null' && recipeId !== 'undefined') {\r\n        showFoodDetailsFromRecipe(recipeId, fallbackData);\r\n    } else if (foodId && foodId !== '' && foodId !== 'null' && foodId !== 'undefined' && !isFromSearch) {\r\n        showFoodDetailsFromId(foodId);\r\n    } else {\r\n        showFoodDetailsPopup(fallbackData);\r\n    }\r\n}\r\n\r\nasync function showFoodDetailsFromRecipe(recipeId, fallbackData = null) {\r\n    console.log('Trying to fetch recipe details for:', recipeId);\r\n    console.log('Fallback data:', fallbackData);\r\n    \r\n    if (fallbackData && fallbackData.calories > 0) {\r\n        console.log('Using fallback data directly for search result');\r\n        showFoodDetailsPopup(fallbackData);\r\n        return;\r\n    }\r\n    \r\n    try {\r\n        const token = localStorage.getItem('authToken');\r\n        if (!token) {\r\n            console.warn('No auth token found, showing fallback data');\r\n            if (fallbackData) {\r\n                showFoodDetailsPopup(fallbackData);\r\n            } else {\r\n                alert('Authentication required to view details');\r\n            }\r\n            return;\r\n        }\r\n\r\n        showFoodDetailsPopup({ name: 'Loading...', loading: true });\r\n\r\n        const response = await fetch(`https://kalkulori.up.railway.app/api/meals/${recipeId}/details`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const result = await response.json();\r\n        \r\n        if (result.status === 'success' && result.data) {\r\n            const mealData = result.data;\r\n            showFoodDetailsPopup({\r\n                name: mealData.food_name || mealData.Name || 'Unknown Recipe',\r\n                calories: mealData.calories_per_serving || Math.round(mealData.Calories) || 0,\r\n                protein: mealData.protein_per_serving || parseFloat(mealData.ProteinContent) || 0,\r\n                carbs: mealData.carbs_per_serving || parseFloat(mealData.CarbohydrateContent) || 0,\r\n                fat: mealData.fat_per_serving || parseFloat(mealData.FatContent) || 0,\r\n                serving_size: mealData.serving_size || mealData.ServingSize || 1,\r\n                serving_unit: mealData.serving_unit || mealData.ServingUnit || 'Porsi',\r\n                image_url: mealData.image_url || (mealData.Image ? mealData.Image.split(',')[0].trim().replace(/^\"|\"$/g, '') : null),\r\n                description: mealData.description || mealData.Description,\r\n                instructions: mealData.instructions || mealData.RecipeInstructions,\r\n                ingredients: mealData.ingredients || mealData.RecipeIngredient\r\n            });\r\n        } else {\r\n            throw new Error('Invalid response format');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching meal details:', error);\r\n        if (fallbackData) {\r\n            showFoodDetailsPopup(fallbackData);\r\n        } else {\r\n            showFoodDetailsPopup({\r\n                name: 'Error',\r\n                error: 'Failed to load food details. Please try again.',\r\n                calories: 0\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nasync function showFoodDetailsFromId(foodId) {\r\n    try {\r\n        const response = await fetch(`https://kalkulori.up.railway.app/api/foods/${foodId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const result = await response.json();\r\n        \r\n        if (result.status === 'success' && result.data && result.data.food) {\r\n            const foodData = result.data.food;\r\n            showFoodDetailsPopup({\r\n                name: foodData.food_name,\r\n                calories: foodData.calories_per_serving,\r\n                protein: foodData.protein_per_serving,\r\n                carbs: foodData.carbs_per_serving,\r\n                fat: foodData.fat_per_serving,\r\n                serving_size: foodData.serving_size,\r\n                serving_unit: foodData.serving_unit,\r\n                image_url: foodData.image_url\r\n            });\r\n        } else {\r\n            throw new Error('Invalid response format');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching food details:', error);\r\n        alert('Failed to load food details. Please try again.');\r\n    }\r\n}\r\n\r\nfunction showFoodDetailsFromData(data) {\r\n    showFoodDetailsPopup(data);\r\n}\r\n\r\nfunction showFoodDetailsPopup(foodData) {\r\n    console.log('Showing details popup for:', foodData);\r\n    \r\n    const existingPopup = document.getElementById('food-details-popup-overlay');\r\n    if (existingPopup) {\r\n        existingPopup.remove();\r\n    }\r\n    \r\n    const defaultImage = 'https://images.unsplash.com/photo-1546554137-f86b9593a222?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80';\r\n    const imageUrl = foodData.image_url || defaultImage;\r\n    \r\n    const formatNutrient = (value) => {\r\n        const num = parseFloat(value) || 0;\r\n        return num.toFixed(1);\r\n    };\r\n\r\n    let contentHTML = '';\r\n    \r\n    if (foodData.loading) {\r\n        contentHTML = `\r\n            <div class=\"food-details-loading\">\r\n                <div class=\"loading-spinner\"></div>\r\n                <p>Loading food details...</p>\r\n            </div>\r\n        `;\r\n    } else if (foodData.error) {\r\n        contentHTML = `\r\n            <div class=\"food-details-error\">\r\n                <h4>Error</h4>\r\n                <p>${foodData.error}</p>\r\n            </div>\r\n        `;\r\n    } else {\r\n        contentHTML = `\r\n            <div class=\"food-details-image\">\r\n                <img src=\"${imageUrl}\" alt=\"${foodData.name}\" onerror=\"this.src='${defaultImage}'\">\r\n            </div>\r\n            <div class=\"food-details-info\">\r\n                <div class=\"nutrition-section\">\r\n                    <h4>Nutrition Information</h4>\r\n                    <div class=\"nutrition-grid\">\r\n                        <div class=\"nutrition-item\">\r\n                            <span class=\"nutrition-label\">Calories:</span>\r\n                            <span class=\"nutrition-value\">${foodData.calories || 0} kcal</span>\r\n                        </div>\r\n                        <div class=\"nutrition-item\">\r\n                            <span class=\"nutrition-label\">Protein:</span>\r\n                            <span class=\"nutrition-value\">${formatNutrient(foodData.protein)}g</span>\r\n                        </div>\r\n                        <div class=\"nutrition-item\">\r\n                            <span class=\"nutrition-label\">Carbohydrates:</span>\r\n                            <span class=\"nutrition-value\">${formatNutrient(foodData.carbs)}g</span>\r\n                        </div>\r\n                        <div class=\"nutrition-item\">\r\n                            <span class=\"nutrition-label\">Fat:</span>\r\n                            <span class=\"nutrition-value\">${formatNutrient(foodData.fat)}g</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"serving-section\">\r\n                    <h4>Serving Information</h4>\r\n                    <div class=\"serving-info\">\r\n                        <span class=\"serving-label\">Serving Size:</span>\r\n                        <span class=\"serving-value\">${foodData.serving_size || 1} ${foodData.serving_unit || 'serving'}</span>\r\n                    </div>\r\n                </div>\r\n                ${foodData.description ? `\r\n                    <div class=\"description-section\">\r\n                        <h4>Description</h4>\r\n                        <p class=\"food-description\">${foodData.description}</p>\r\n                    </div>\r\n                ` : ''}\r\n                ${foodData.ingredients ? `\r\n                    <div class=\"ingredients-section\">\r\n                        <h4>Ingredients</h4>\r\n                        <p class=\"food-ingredients\">${Array.isArray(foodData.ingredients) ? foodData.ingredients.join(', ') : foodData.ingredients}</p>\r\n                    </div>\r\n                ` : ''}\r\n                ${foodData.instructions ? `\r\n                    <div class=\"instructions-section\">\r\n                        <h4>Instructions</h4>\r\n                        <p class=\"food-instructions\">${Array.isArray(foodData.instructions) ? foodData.instructions.join(' ') : foodData.instructions}</p>\r\n                    </div>\r\n                ` : ''}\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    const popupHTML = `\r\n        <div class=\"food-details-popup-overlay\" id=\"food-details-popup-overlay\">\r\n            <div class=\"food-details-popup\">\r\n                <div class=\"food-details-header\">\r\n                    <h3>${foodData.name || 'Food Details'}</h3>\r\n                    <button class=\"popup-close\" id=\"details-popup-close\">&times;</button>\r\n                </div>\r\n                <div class=\"food-details-content\">\r\n                    ${contentHTML}\r\n                </div>\r\n                <div class=\"food-details-actions\">\r\n                    <button class=\"btn-close\" id=\"btn-details-close\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `;\r\n    \r\n    document.body.insertAdjacentHTML('beforeend', popupHTML);\r\n    \r\n    const overlay = document.getElementById('food-details-popup-overlay');\r\n    const closeBtn = document.getElementById('details-popup-close');\r\n    const closeBtnBottom = document.getElementById('btn-details-close');\r\n    \r\n    function closePopup() {\r\n        if (overlay && overlay.parentNode) {\r\n            overlay.parentNode.removeChild(overlay);\r\n        }\r\n    }\r\n    \r\n    if (closeBtn) {\r\n        closeBtn.addEventListener('click', closePopup);\r\n    }\r\n    \r\n    if (closeBtnBottom) {\r\n        closeBtnBottom.addEventListener('click', closePopup);\r\n    }\r\n    \r\n    if (overlay) {\r\n        overlay.addEventListener('click', function(e) {\r\n            if (e.target === overlay) closePopup();\r\n        });\r\n    }\r\n}\r\n\r\nfunction showAddMealPopup(foodData) {\r\n    console.log('Showing popup for:', foodData);\r\n    \r\n    const existingPopup = document.getElementById('meal-popup-overlay');\r\n    if (existingPopup) {\r\n        existingPopup.remove();\r\n    }\r\n    \r\n    const popupHTML = `\r\n        <div class=\"meal-popup-overlay\" id=\"meal-popup-overlay\">\r\n            <div class=\"meal-popup\">\r\n                <div class=\"meal-popup-header\">\r\n                    <h3>Add ${foodData.name}</h3>\r\n                    <button class=\"popup-close\" id=\"popup-close\">&times;</button>\r\n                </div>\r\n                <div class=\"meal-popup-content\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"meal-type\">Meal Type:</label>\r\n                        <select id=\"meal-type\" required>\r\n                            <option value=\"\">Select meal type</option>\r\n                            <option value=\"breakfast\">Breakfast</option>\r\n                            <option value=\"lunch\">Lunch</option>\r\n                            <option value=\"dinner\">Dinner</option>\r\n                            <option value=\"snack\">Snack</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"servings\">Servings:</label>\r\n                        <input type=\"number\" id=\"servings\" min=\"1\" step=\"1\" value=\"1\" required>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"log-date\">Date:</label>\r\n                        <input type=\"date\" id=\"log-date\" value=\"${new Date().toISOString().split('T')[0]}\" required>\r\n                    </div>\r\n                    <div class=\"form-actions\">\r\n                        <button class=\"btn-cancel\" id=\"btn-cancel\">Cancel</button>\r\n                        <button class=\"btn-add\" id=\"btn-add\">Add</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `;\r\n    \r\n    document.body.insertAdjacentHTML('beforeend', popupHTML);\r\n    \r\n    const overlay = document.getElementById('meal-popup-overlay');\r\n    const closeBtn = document.getElementById('popup-close');\r\n    const cancelBtn = document.getElementById('btn-cancel');\r\n    const addBtn = document.getElementById('btn-add');\r\n    \r\n    function closePopup() {\r\n        if (overlay && overlay.parentNode) {\r\n            overlay.parentNode.removeChild(overlay);\r\n        }\r\n    }\r\n    \r\n    if (closeBtn) {\r\n        closeBtn.addEventListener('click', closePopup);\r\n    }\r\n    \r\n    if (cancelBtn) {\r\n        cancelBtn.addEventListener('click', closePopup);\r\n    }\r\n    \r\n    if (overlay) {\r\n        overlay.addEventListener('click', function(e) {\r\n            if (e.target === overlay) closePopup();\r\n        });\r\n    }\r\n    \r\n    if (addBtn) {\r\n        addBtn.addEventListener('click', async function() {\r\n            const mealType = document.getElementById('meal-type')?.value;\r\n            const servings = parseFloat(document.getElementById('servings')?.value);\r\n            const logDate = document.getElementById('log-date')?.value;\r\n            \r\n            if (!mealType || !servings || !logDate) {\r\n                alert('Please fill all fields');\r\n                return;\r\n            }\r\n            \r\n            try {\r\n                addBtn.disabled = true;\r\n                addBtn.textContent = 'Adding...';\r\n                \r\n                if (window.mealApiService && foodData.id) {\r\n                    if (foodData.recipe_id) {\r\n                        await window.foodApiService.addFoodFromSearch({\r\n                            recipe_id: foodData.recipe_id,\r\n                            food_name: foodData.name,\r\n                            calories_per_serving: foodData.calories || 0,\r\n                            protein_per_serving: foodData.protein || 0,\r\n                            carbs_per_serving: foodData.carbs || 0,\r\n                            fat_per_serving: foodData.fat || 0,\r\n                            serving_size: foodData.serving_size || 1,\r\n                            serving_unit: foodData.serving_unit || 'serving',\r\n                            meal_type: mealType,\r\n                            servings: servings,\r\n                            log_date: logDate,\r\n                            image_url: foodData.image_url\r\n                        });\r\n                    } else {\r\n                        await window.mealApiService.createMealEntry({\r\n                            food_item_id: foodData.id,\r\n                            meal_type: mealType,\r\n                            servings: servings,\r\n                            log_date: logDate\r\n                        });\r\n                    }\r\n                    \r\n                    alert('Meal added successfully!');\r\n                    closePopup();\r\n                    \r\n                    const event = new CustomEvent('mealAdded', { \r\n                        detail: { source: 'search', mealData: foodData } \r\n                    });\r\n                    document.dispatchEvent(event);\r\n                    \r\n                    if (window.location.hash === '#/' || window.location.hash === '#/home') {\r\n                        setTimeout(() => {\r\n                            window.location.reload();\r\n                        }, 1000);\r\n                    }\r\n                } else {\r\n                    console.log(`Added ${foodData.name} - ${mealType} - ${servings} servings on ${logDate}`);\r\n                    alert('Demo: Meal would be added to your log!');\r\n                    closePopup();\r\n                }\r\n            } catch (error) {\r\n                console.error('Error adding meal:', error);\r\n                alert('Failed to add meal. Please try again.');\r\n                addBtn.disabled = false;\r\n                addBtn.textContent = 'Add';\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    console.log('DOM loaded, binding food card events');\r\n    bindFoodCardEvents('food-container');\r\n});\r\n\r\nconst sampleFoodData = [\r\n    {\r\n        id: \"sample_1\",\r\n        image: \"https://images.unsplash.com/photo-1569058242253-92a9c755a0ec?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80\",\r\n        name: \"Fried Chicken Wings\",\r\n        calories: 320,\r\n        serving_size: 1,\r\n        serving_unit: \"serving\"\r\n    },\r\n    {\r\n        id: \"sample_2\",\r\n        image: \"https://images.unsplash.com/photo-1512058564366-18510be2db19?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80\",\r\n        name: \"Fried Rice with Egg\",\r\n        calories: 270,\r\n        serving_size: 1,\r\n        serving_unit: \"serving\"\r\n    },\r\n    {\r\n        id: \"sample_3\",\r\n        image: \"https://images.unsplash.com/photo-1585032226651-759b368d7246?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80\",\r\n        name: \"Fried Noodles\",\r\n        calories: 280,\r\n        serving_size: 1,\r\n        serving_unit: \"serving\"\r\n    }\r\n];\r\n\r\nconst defaultMealsData = [\r\n    {\r\n        id: \"default_1\",\r\n        image: \"https://images.unsplash.com/photo-1569058242253-92a9c755a0ec?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80\",\r\n        name: \"Fried Chicken Wings\",\r\n        calories: 320,\r\n        serving_size: 1,\r\n        serving_unit: \"serving\"\r\n    },\r\n    {\r\n        id: \"default_2\",\r\n        image: \"https://images.unsplash.com/photo-1512058564366-18510be2db19?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80\",\r\n        name: \"Fried Rice with Egg\",\r\n        calories: 270,\r\n        serving_size: 1,\r\n        serving_unit: \"serving\"\r\n    },\r\n    {\r\n        id: \"default_3\",\r\n        image: \"https://images.unsplash.com/photo-1585032226651-759b368d7246?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80\",\r\n        name: \"Chicken Soto\",\r\n        calories: 312,\r\n        serving_size: 1,\r\n        serving_unit: \"serving\"\r\n    },\r\n    {\r\n        id: \"default_4\",\r\n        image: \"https://images.unsplash.com/photo-1585032226651-759b368d7246?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80\",\r\n        name: \"Fried Noodles\",\r\n        calories: 280,\r\n        serving_size: 1,\r\n        serving_unit: \"serving\"\r\n    },\r\n    {\r\n        id: \"default_5\",\r\n        image: \"https://images.unsplash.com/photo-1569058242253-92a9c755a0ec?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80\",\r\n        name: \"Meatballs Soup\",\r\n        calories: 283,\r\n        serving_size: 1,\r\n        serving_unit: \"serving\"\r\n    },\r\n    {\r\n        id: \"default_6\",\r\n        image: \"https://images.unsplash.com/photo-1512058564366-18510be2db19?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80\",\r\n        name: \"Noodles Soup\",\r\n        calories: 137,\r\n        serving_size: 1,\r\n        serving_unit: \"serving\"\r\n    },\r\n    {\r\n        id: \"default_7\",\r\n        image: \"https://images.unsplash.com/photo-1585032226651-759b368d7246?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80\",\r\n        name: \"Taichan Satay\",\r\n        calories: 250,\r\n        serving_size: 1,\r\n        serving_unit: \"serving\"\r\n    },\r\n    {\r\n        id: \"default_8\",\r\n        image: \"https://images.unsplash.com/photo-1569058242253-92a9c755a0ec?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80\",\r\n        name: \"Pukis Cake\",\r\n        calories: 350,\r\n        serving_size: 1,\r\n        serving_unit: \"serving\"\r\n    }\r\n];\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = { createFoodCard, renderFoodCards, bindFoodCardEvents, showAddMealPopup, showFoodDetailsPopup, sampleFoodData, defaultMealsData };\r\n}\r\n\r\nif (typeof window !== 'undefined') {\r\n    window.FoodCard = { createFoodCard, renderFoodCards, bindFoodCardEvents, showAddMealPopup, showFoodDetailsPopup, sampleFoodData, defaultMealsData };\r\n}"],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","createFoodCard","imageUrl","foodName","calories","servingSize","undefined","servingUnit","isFromSearch","recipeId","protein","carbs","fat","concat","renderFoodCards","foodData","containerId","container","document","getElementById","innerHTML","food","cardHTML","image","id","serving_size","serving_unit","is_from_search","recipe_id","bindFoodCardEvents","querySelectorAll","button","removeEventListener","handleAddButtonClick","addEventListener","handleDetailsButtonClick","event","_foodCard$querySelect","_foodCard$querySelect2","_foodCard$querySelect3","preventDefault","stopPropagation","foodCard","target","closest","querySelector","textContent","foodCaloriesText","foodCalories","parseInt","replace","foodId","dataset","parseFloat","src","console","log","showAddMealPopup","image_url","_foodCard$querySelect4","_foodCard$querySelect5","_foodCard$querySelect6","fallbackData","_x","_showFoodDetailsFromRecipe","showFoodDetailsFromRecipe","_x2","_showFoodDetailsFromId","showFoodDetailsFromId","showFoodDetailsPopup","_callee2","token","response","result","mealData","_args2","_context2","localStorage","getItem","warn","alert","loading","fetch","headers","ok","status","json","data","food_name","Name","calories_per_serving","Math","round","Calories","protein_per_serving","ProteinContent","carbs_per_serving","CarbohydrateContent","fat_per_serving","FatContent","ServingSize","ServingUnit","Image","split","trim","description","Description","instructions","RecipeInstructions","ingredients","RecipeIngredient","t0","error","_callee3","_context3","existingPopup","remove","defaultImage","formatNutrient","toFixed","contentHTML","Array","isArray","join","popupHTML","body","insertAdjacentHTML","overlay","closeBtn","closeBtnBottom","closePopup","parentNode","removeChild","Date","toISOString","cancelBtn","addBtn","_callee","_document$getElementB","_document$getElementB2","_document$getElementB3","mealType","servings","logDate","_context","disabled","window","mealApiService","foodApiService","addFoodFromSearch","meal_type","log_date","createMealEntry","food_item_id","CustomEvent","detail","source","dispatchEvent","location","hash","setTimeout","reload","sampleFoodData","defaultMealsData","module","exports","FoodCard"],"sourceRoot":""}