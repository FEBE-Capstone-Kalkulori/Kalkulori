{"version":3,"file":"app~3a552275.bundle.js","mappings":"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","sources":["webpack://kalkulori/./src/scripts/pages/home/meal-plan.js","webpack://kalkulori/./src/scripts/pages/home/meal-categories.js"],"sourcesContent":["import mealApiService from '../../utils/meal-api-service';\r\n\r\nconst _debugFormatInput = (input, label = 'FormatInput') => {\r\n  console.log(`🔍 ${label} Analysis:`);\r\n  console.log('==================================');\r\n  \r\n  if (!input) {\r\n    console.log('❌ Input is null/undefined');\r\n    return;\r\n  }\r\n  \r\n  console.log('📋 Input type:', typeof input);\r\n  console.log('📋 Input keys:', Object.keys(input));\r\n  \r\n  if (input.meal_plans) {\r\n    console.log('📋 Has meal_plans property');\r\n    console.log('📋 meal_plans type:', typeof input.meal_plans);\r\n    console.log('📋 meal_plans is array:', Array.isArray(input.meal_plans));\r\n    if (Array.isArray(input.meal_plans)) {\r\n      console.log('📋 meal_plans length:', input.meal_plans.length);\r\n      if (input.meal_plans.length > 0) {\r\n        console.log('📋 First plan keys:', Object.keys(input.meal_plans[0]));\r\n        console.log('📋 First plan sample:', JSON.stringify(input.meal_plans[0], null, 4));\r\n      }\r\n    }\r\n  }\r\n  \r\n  const mealTypeVariations = [\r\n    'breakfast', 'lunch', 'dinner',\r\n    'Breakfast', 'Lunch', 'Dinner',\r\n    'BREAKFAST', 'LUNCH', 'DINNER'\r\n  ];\r\n  \r\n  console.log('📋 Checking for meal types:');\r\n  mealTypeVariations.forEach(type => {\r\n    if (input[type]) {\r\n      console.log(`  ✅ Found ${type}:`, Object.keys(input[type]));\r\n      console.log(`  📄 ${type} data:`, JSON.stringify(input[type], null, 4));\r\n    }\r\n  });\r\n  \r\n  console.log('==================================');\r\n};\r\n\r\nexport const formatMealPlanData = (input) => {\r\n  console.log('🔄 formatMealPlanData input:', JSON.stringify(input, null, 2));\r\n  \r\n  _debugFormatInput(input, 'formatMealPlanData Input');\r\n  \r\n  let planData = null;\r\n  \r\n  if (input && input.meal_plans && Array.isArray(input.meal_plans) && input.meal_plans.length > 0) {\r\n    planData = input.meal_plans[0];\r\n    console.log('📦 Using meal plan from API response (Case 1):', planData);\r\n  }\r\n  else if (input && (input.breakfast || input.lunch || input.dinner || \r\n                    input.Breakfast || input.Lunch || input.Dinner)) {\r\n    planData = input;\r\n    console.log('📦 Using direct meal plan object (Case 2):', planData);\r\n  }\r\n  else {\r\n    console.log('❌ No valid meal plans found in input');\r\n    return [];\r\n  }\r\n  \r\n  const possibleMealTypes = [\r\n    { key: 'breakfast', display: 'Breakfast' },\r\n    { key: 'lunch', display: 'Lunch' }, \r\n    { key: 'dinner', display: 'Dinner' }\r\n  ];\r\n  \r\n  const availableMealKeys = Object.keys(planData);\r\n  console.log('🔍 Available meal keys in plan data:', availableMealKeys);\r\n  \r\n  const formattedPlans = [];\r\n\r\n  possibleMealTypes.forEach(({ key, display }) => {\r\n    console.log(`🔍 Looking for ${key} variations...`);\r\n    \r\n    const variations = [\r\n      key,\r\n      key.charAt(0).toUpperCase() + key.slice(1),\r\n      key.toUpperCase()\r\n    ];\r\n    \r\n    let mealData = null;\r\n    let foundKey = null;\r\n    \r\n    for (const variation of variations) {\r\n      if (planData[variation]) {\r\n        mealData = planData[variation];\r\n        foundKey = variation;\r\n        console.log(`✅ Found ${key} as \"${foundKey}\":`, mealData);\r\n        break;\r\n      }\r\n    }\r\n    \r\n    if (mealData) {\r\n      const formattedMeal = {\r\n        type: display,\r\n        name: mealData.Name || mealData.food_name || mealData.name || `Unknown ${display}`,\r\n        image: getFirstImageUrl(mealData.Image) || mealData.image_url || `./public/image/meals/${key}-default.jpg`,\r\n        calories: Math.round(mealData.Calories || mealData.calories_per_serving || mealData.calories || 0),\r\n        id: mealData.RecipeId || mealData.id || mealData.recipe_id || `${key}_${Date.now()}`,\r\n        serving_size: mealData.serving_size || mealData.ServingSize || 1,\r\n        serving_unit: mealData.serving_unit || mealData.ServingUnit || 'serving',\r\n        recipe_id: mealData.RecipeId || mealData.recipe_id || mealData.id || null,\r\n        protein: mealData.protein || mealData.ProteinContent || 0,\r\n        carbs: mealData.carbs || mealData.CarbohydrateContent || 0,\r\n        fat: mealData.fat || mealData.FatContent || 0\r\n      };\r\n      \r\n      console.log(`✅ Formatted ${key}:`, formattedMeal);\r\n      formattedPlans.push(formattedMeal);\r\n    } else {\r\n      console.log(`❌ Missing ${key} in plan data`);\r\n      \r\n      const defaultMeal = {\r\n        type: display,\r\n        name: `Default ${display}`,\r\n        image: `./public/image/meals/${key}-default.jpg`,\r\n        calories: 300,\r\n        id: `default_${key}_${Date.now()}`,\r\n        serving_size: 1,\r\n        serving_unit: 'serving',\r\n        recipe_id: null,\r\n        protein: 15,\r\n        carbs: 40,\r\n        fat: 10\r\n      };\r\n      \r\n      console.log(`🔧 Using default ${key}:`, defaultMeal);\r\n      formattedPlans.push(defaultMeal);\r\n    }\r\n  });\r\n\r\n  console.log('🔄 formatMealPlanData output:', formattedPlans);\r\n  console.log('🔄 Total formatted meals:', formattedPlans.length);\r\n  \r\n  return formattedPlans;\r\n};\r\n\r\nconst getFirstImageUrl = (inputString) => {\r\n  if (!inputString || typeof inputString !== 'string') {\r\n    return null;\r\n  }\r\n  \r\n  const cleanInput = inputString.replace(/\\\\\\//g, '/');\r\n  const imageUrls = cleanInput.split(/,\\s*(?=https?:\\/\\/)/);\r\n  const firstUrl = imageUrls[0];\r\n  \r\n  if (firstUrl && firstUrl.trim()) {\r\n    return firstUrl.trim().replace(/^\"|\"$/g, '');\r\n  }\r\n  \r\n  return null;\r\n};\r\n\r\nexport const calculateTotalCalories = (plans) => {\r\n  const total = plans.reduce((total, plan) => total + (plan.calories || 0), 0);\r\n  console.log('🧮 Total calories calculated:', total);\r\n  return total;\r\n};\r\n\r\nexport const getDefaultMealPlan = () => {\r\n  return [\r\n    {\r\n      type: 'Breakfast',\r\n      name: 'Fried Chicken Wings',\r\n      image: './public/image/meals/fried-chicken-wings.jpg',\r\n      calories: 400,\r\n      id: 'default_breakfast',\r\n      serving_size: 1,\r\n      serving_unit: 'serving'\r\n    },\r\n    {\r\n      type: 'Lunch',\r\n      name: 'Fried Rice with Egg',\r\n      image: './public/image/meals/fried-rice-egg.jpg',\r\n      calories: 450,\r\n      id: 'default_lunch',\r\n      serving_size: 1,\r\n      serving_unit: 'serving'\r\n    },\r\n    {\r\n      type: 'Dinner',\r\n      name: 'Soto Ayam',\r\n      image: './public/image/meals/soto-ayam.jpg',\r\n      calories: 350,\r\n      id: 'default_dinner',\r\n      serving_size: 1,\r\n      serving_unit: 'serving'\r\n    }\r\n  ];\r\n};\r\n\r\nexport const createMealPlanSection = (data) => {\r\n  console.log('🎨 createMealPlanSection called with data:', {\r\n    loading: data.loading,\r\n    error: data.error,\r\n    plansExists: !!data.plans,\r\n    plansLength: data.plans?.length || 0,\r\n    totalCalories: data.totalCalories,\r\n    targetCalories: data.targetCalories,\r\n    dataKeys: data ? Object.keys(data) : []\r\n  });\r\n\r\n  if (!data) {\r\n    console.log('🎨 No data provided, rendering error state');\r\n    return `\r\n      <div class=\"error-container\">\r\n        <div class=\"error-icon\">⚠️</div>\r\n        <p class=\"error-message\">No meal plan data available</p>\r\n        <button class=\"retry-btn\" id=\"generate-meal-plan-btn\">Generate Plan</button>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  if (data.loading) {\r\n    console.log('🎨 Rendering loading state');\r\n    return `\r\n      <div class=\"loading-container\">\r\n        <div class=\"loading-spinner\"></div>\r\n        <p>Generating personalized meal plan...</p>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  if (data.error) {\r\n    console.log('🎨 Rendering error state:', data.error);\r\n    const isProfileError = data.error.includes('profile') || \r\n                          data.error.includes('calorie target') || \r\n                          data.error.includes('Profil') ||\r\n                          data.error.includes('complete your profile') ||\r\n                          data.error.includes('Profile setup required');\r\n    const buttonText = isProfileError ? 'Complete Profile' : 'Try Again';\r\n    const buttonAction = isProfileError ? 'complete-profile-btn' : 'generate-meal-plan-btn';\r\n    \r\n    return `\r\n      <div class=\"error-container\">\r\n        <div class=\"error-icon\">⚠️</div>\r\n        <p class=\"error-message\">${data.error}</p>\r\n        <button class=\"retry-btn\" id=\"${buttonAction}\">${buttonText}</button>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  if (!data.plans || !Array.isArray(data.plans) || data.plans.length === 0) {\r\n    console.log('🎨 Rendering no plans state - plans validation:', {\r\n      plansExists: !!data.plans,\r\n      plansIsArray: Array.isArray(data.plans),\r\n      plansLength: data.plans?.length || 0,\r\n      plansContent: data.plans\r\n    });\r\n    \r\n    return `\r\n      <div class=\"error-container\">\r\n        <div class=\"error-icon\">🍽️</div>\r\n        <p class=\"error-message\">No meal plans available</p>\r\n        <button class=\"retry-btn\" id=\"generate-meal-plan-btn\">Generate Plan</button>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  const totalCalories = data.totalCalories || calculateTotalCalories(data.plans) || 0;\r\n  const targetCalories = data.targetCalories || 1500;\r\n\r\n  console.log('🎨 Rendering meal plan content with', data.plans.length, 'plans');\r\n  console.log('🎨 Calorie info:', { totalCalories, targetCalories });\r\n  \r\n  return `\r\n    <div class=\"meal-plan-content\">\r\n      <div class=\"meal-plan-header\">\r\n        <div class=\"meal-plan-calories\">\r\n          <span class=\"current-calories\">${totalCalories}</span>\r\n          <span class=\"calories-separator\">kcal/</span>\r\n          <span class=\"target-calories\">${targetCalories}</span>\r\n        </div>\r\n        <div class=\"meal-plan-buttons\">\r\n          <button class=\"generate-plan-btn add-plan-btn\" id=\"add-full-meal-plan-btn\">\r\n            <span class=\"btn-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#FFFFFF\"><path d=\"M440-440H200v-80h240v-240h80v240h240v80H520v240h-80v-240Z\"/></svg></span>\r\n            Add Plan\r\n          </button>\r\n          <button class=\"generate-plan-btn\" id=\"generate-meal-plan-btn\">\r\n            <span class=\"btn-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#FFFFFF\"><path d=\"M204-318q-22-38-33-78t-11-82q0-134 93-228t227-94h7l-64-64 56-56 160 160-160 160-56-56 64-64h-7q-100 0-170 70.5T240-478q0 26 6 51t18 49l-60 60ZM481-40 321-200l160-160 56 56-64 64h7q100 0 170-70.5T720-482q0-26-6-51t-18-49l60-60q22 38 33 78t11 82q0 134-93 228t-227 94h-7l64 64-56 56Z\"/></svg></span>\r\n            New Plan\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"meal-plan-grid\">\r\n        ${data.plans.map(plan => createMealPlanCard(plan)).join('')}\r\n      </div>\r\n      \r\n      ${data.plans.length < 3 ? `\r\n        <div class=\"meal-plan-notice\">\r\n          <p>⚠️ Some meals may be using default options. Try generating a new plan.</p>\r\n        </div>\r\n      ` : ''}\r\n    </div>\r\n  `;\r\n};\r\n\r\nexport const createMealPlanCard = (meal) => {\r\n  if (!meal) {\r\n    console.warn('⚠️ No meal data provided to createMealPlanCard');\r\n    return '';\r\n  }\r\n\r\n  const mealType = meal.type || 'Meal';\r\n  const mealName = meal.name || 'Unknown Meal';\r\n  const mealCalories = meal.calories || 0;\r\n  const mealImage = meal.image || './public/image/meals/default-meal.jpg';\r\n  const mealId = meal.id || meal.recipe_id || `meal_${Date.now()}`;\r\n  \r\n  console.log('🃏 Creating meal card for:', { mealType, mealName, mealCalories, mealId });\r\n  \r\n  return `\r\n    <div class=\"meal-plan-card\" data-meal-type=\"${mealType.toLowerCase()}\" data-meal-id=\"${mealId}\">\r\n      <div class=\"meal-plan-image\" data-meal-details-trigger>\r\n        <img src=\"${mealImage}\" alt=\"${mealName}\" onerror=\"this.src='./public/image/meals/default-meal.jpg'; this.onerror=null;\">\r\n        <div class=\"image-overlay\">\r\n          <span class=\"view-details-text\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#FFFFFF\"><path d=\"M480-320q75 0 127.5-52.5T660-500q0-75-52.5-127.5T480-680q-75 0-127.5 52.5T300-500q0 75 52.5 127.5T480-320Zm0-72q-45 0-76.5-31.5T372-500q0-45 31.5-76.5T480-608q45 0 76.5 31.5T588-500q0 45-31.5 76.5T480-392Zm0 192q-146 0-266-81.5T40-500q54-137 174-218.5T480-800q146 0 266 81.5T920-500q-54 137-174 218.5T480-200Zm0-300Zm0 220q113 0 207.5-59.5T832-500q-50-101-144.5-160.5T480-720q-113 0-207.5 59.5T128-500q50 101 144.5 160.5T480-280Z\"/></svg> View Details</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"meal-plan-info\">\r\n        <div class=\"meal-type\">${mealType}</div>\r\n        <div class=\"meal-name\" title=\"${mealName}\">${mealName}</div>\r\n        <div class=\"meal-calories\">${mealCalories} kcal</div>\r\n        ${meal.protein || meal.carbs || meal.fat ? `\r\n          <div class=\"meal-nutrition-mini\">\r\n            ${meal.protein ? `P: ${Math.round(meal.protein)}g ` : ''}\r\n            ${meal.carbs ? `C: ${Math.round(meal.carbs)}g ` : ''}\r\n            ${meal.fat ? `F: ${Math.round(meal.fat)}g` : ''}\r\n          </div>\r\n        ` : ''}\r\n      </div>\r\n      <button class=\"meal-plan-add-btn\" data-meal='${JSON.stringify({\r\n        id: mealId,\r\n        name: mealName,\r\n        calories: mealCalories,\r\n        serving_size: meal.serving_size || 1,\r\n        serving_unit: meal.serving_unit || 'serving',\r\n        type: mealType,\r\n        image: mealImage,\r\n        recipe_id: meal.recipe_id || meal.id\r\n      })}' title=\"Add to diary\">\r\n        <span class=\"plus-icon\">+</span>\r\n      </button>\r\n    </div>\r\n  `;\r\n};\r\n\r\nconst getTodayString = () => {\r\n  const now = new Date();\r\n  const year = now.getFullYear();\r\n  const month = String(now.getMonth() + 1).padStart(2, '0');\r\n  const day = String(now.getDate()).padStart(2, '0');\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst showMealPlanPopup = (mealData) => {\r\n  const existingPopup = document.getElementById('meal-plan-popup-overlay');\r\n  if (existingPopup) {\r\n    existingPopup.remove();\r\n  }\r\n  \r\n  const popupHTML = `\r\n    <div class=\"meal-popup-overlay\" id=\"meal-plan-popup-overlay\">\r\n      <div class=\"meal-popup\">\r\n        <div class=\"meal-popup-header\">\r\n          <h3>Add ${mealData.name}</h3>\r\n          <button class=\"popup-close\" id=\"meal-plan-popup-close\">&times;</button>\r\n        </div>\r\n        <div class=\"meal-popup-content\">\r\n          <div class=\"form-group\">\r\n            <label for=\"meal-plan-meal-type\">Meal Type:</label>\r\n            <select id=\"meal-plan-meal-type\" required>\r\n              <option value=\"\">Select meal type</option>\r\n              <option value=\"breakfast\" ${mealData.type?.toLowerCase() === 'breakfast' ? 'selected' : ''}>Breakfast</option>\r\n              <option value=\"lunch\" ${mealData.type?.toLowerCase() === 'lunch' ? 'selected' : ''}>Lunch</option>\r\n              <option value=\"dinner\" ${mealData.type?.toLowerCase() === 'dinner' ? 'selected' : ''}>Dinner</option>\r\n              <option value=\"snack\">Snack</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"meal-plan-servings\">Servings:</label>\r\n            <input type=\"number\" id=\"meal-plan-servings\" min=\"1\" step=\"1\" value=\"1\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"meal-plan-log-date\">Date:</label>\r\n            <input type=\"date\" id=\"meal-plan-log-date\" value=\"${getTodayString()}\" required>\r\n          </div>\r\n          <div class=\"form-actions\">\r\n            <button class=\"btn-cancel\" id=\"meal-plan-btn-cancel\">Cancel</button>\r\n            <button class=\"btn-add\" id=\"meal-plan-btn-add\">Add</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n  \r\n  document.body.insertAdjacentHTML('beforeend', popupHTML);\r\n  \r\n  const overlay = document.getElementById('meal-plan-popup-overlay');\r\n  const closeBtn = document.getElementById('meal-plan-popup-close');\r\n  const cancelBtn = document.getElementById('meal-plan-btn-cancel');\r\n  const addBtn = document.getElementById('meal-plan-btn-add');\r\n  \r\n  const closePopup = () => {\r\n    if (overlay && overlay.parentNode) {\r\n      overlay.parentNode.removeChild(overlay);\r\n    }\r\n  };\r\n  \r\n  if (closeBtn) closeBtn.addEventListener('click', closePopup);\r\n  if (cancelBtn) cancelBtn.addEventListener('click', closePopup);\r\n  if (overlay) {\r\n    overlay.addEventListener('click', (e) => {\r\n      if (e.target === overlay) closePopup();\r\n    });\r\n  }\r\n  \r\n  if (addBtn) {\r\n    addBtn.addEventListener('click', async () => {\r\n      const mealType = document.getElementById('meal-plan-meal-type')?.value;\r\n      const servings = parseFloat(document.getElementById('meal-plan-servings')?.value);\r\n      const logDate = document.getElementById('meal-plan-log-date')?.value;\r\n      \r\n      if (!mealType || !servings || !logDate) {\r\n        alert('Please fill all fields');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        addBtn.disabled = true;\r\n        addBtn.textContent = 'Adding...';\r\n        \r\n        if (mealData.recipe_id && !mealData.id?.toString().startsWith('default_')) {\r\n          console.log('🍽️ Adding meal from plan:', {\r\n            recipe_id: mealData.recipe_id,\r\n            meal_type: mealType,\r\n            servings: servings,\r\n            log_date: logDate\r\n          });\r\n          \r\n          await mealApiService.addMealFromPlan({\r\n            recipe_id: mealData.recipe_id,\r\n            meal_type: mealType,\r\n            servings: servings,\r\n            log_date: logDate\r\n          });\r\n        } else {\r\n          console.log('🍽️ Adding default meal:', {\r\n            food_item_id: mealData.id,\r\n            meal_type: mealType,\r\n            servings: servings,\r\n            log_date: logDate\r\n          });\r\n          \r\n          await mealApiService.createMealEntry({\r\n            food_item_id: mealData.id,\r\n            meal_type: mealType,\r\n            servings: servings,\r\n            log_date: logDate\r\n          });\r\n        }\r\n        \r\n        alert('Meal added successfully!');\r\n        closePopup();\r\n        \r\n        const refreshEvent = new CustomEvent('mealPlanMealAdded');\r\n        document.dispatchEvent(refreshEvent);\r\n        \r\n      } catch (error) {\r\n        console.error('Error adding meal from plan:', error);\r\n        alert(`Failed to add meal: ${error.message}`);\r\n        addBtn.disabled = false;\r\n        addBtn.textContent = 'Add';\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nconst addFullMealPlan = async (plans) => {\r\n  try {\r\n    const today = getTodayString();\r\n    \r\n    const mealPlanData = {\r\n      meal_plan: {},\r\n      log_date: today\r\n    };\r\n    \r\n    plans.forEach(plan => {\r\n      const mealType = plan.type.toLowerCase();\r\n      if (['breakfast', 'lunch', 'dinner'].includes(mealType)) {\r\n        mealPlanData.meal_plan[mealType] = {\r\n          RecipeId: plan.recipe_id || plan.id,\r\n          Name: plan.name,\r\n          Calories: plan.calories,\r\n          Image: plan.image\r\n        };\r\n      }\r\n    });\r\n    \r\n    if (Object.keys(mealPlanData.meal_plan).length === 0) {\r\n      throw new Error('No valid meals to add');\r\n    }\r\n    \r\n    console.log('🍽️ Adding full meal plan:', mealPlanData);\r\n    \r\n    try {\r\n      await mealApiService.addFullMealPlan(mealPlanData);\r\n      alert('Full meal plan added successfully!');\r\n    } catch (error) {\r\n      console.warn('🔄 Full meal plan endpoint failed, trying individual meals:', error.message);\r\n      \r\n      if (error.message.includes('Endpoint not found') || error.message.includes('404') || error.message.includes('Network error')) {\r\n        console.log('🔄 Falling back to individual meal additions...');\r\n        \r\n        let successCount = 0;\r\n        let failCount = 0;\r\n        \r\n        for (let i = 0; i < plans.length; i++) {\r\n          const plan = plans[i];\r\n          \r\n          if (plan.recipe_id && !plan.id?.toString().startsWith('default_')) {\r\n            try {\r\n              await mealApiService.addMealFromPlan({\r\n                recipe_id: plan.recipe_id,\r\n                meal_type: plan.type.toLowerCase(),\r\n                servings: 1,\r\n                log_date: today\r\n              });\r\n              successCount++;\r\n              console.log(`✅ Added ${plan.name} successfully`);\r\n            } catch (individualError) {\r\n              failCount++;\r\n              console.error(`❌ Failed to add ${plan.name}:`, individualError);\r\n            }\r\n          } else {\r\n            try {\r\n              await mealApiService.createMealEntry({\r\n                food_item_id: plan.id,\r\n                meal_type: plan.type.toLowerCase(),\r\n                servings: 1,\r\n                log_date: today\r\n              });\r\n              successCount++;\r\n              console.log(`✅ Added ${plan.name} (default) successfully`);\r\n            } catch (individualError) {\r\n              failCount++;\r\n              console.error(`❌ Failed to add ${plan.name} (default):`, individualError);\r\n            }\r\n          }\r\n          \r\n          if (i < plans.length - 1) {\r\n            await new Promise(resolve => setTimeout(resolve, 300));\r\n          }\r\n        }\r\n        \r\n        if (successCount > 0) {\r\n          alert(`Meal plan added successfully! ${successCount} meals added${failCount > 0 ? `, ${failCount} failed` : ''}.`);\r\n        } else {\r\n          throw new Error('Failed to add any meals from the plan');\r\n        }\r\n      } else {\r\n        throw error;\r\n      }\r\n    }\r\n    \r\n    const refreshEvent = new CustomEvent('mealPlanMealAdded');\r\n    document.dispatchEvent(refreshEvent);\r\n    \r\n  } catch (error) {\r\n    console.error('Error adding full meal plan:', error);\r\n    alert(`Failed to add meal plan: ${error.message}`);\r\n  }\r\n};\r\n\r\nconst showMealDetailsPopup = async (mealData) => {\r\n  const existingPopup = document.getElementById('meal-details-popup-overlay');\r\n  if (existingPopup) {\r\n    existingPopup.remove();\r\n  }\r\n\r\n  let popupContent = '';\r\n  \r\n  if (!mealData.recipe_id || mealData.id?.toString().startsWith('default_')) {\r\n    popupContent = `\r\n      <div class=\"meal-details-content\">\r\n        <div class=\"meal-details-header\">\r\n          <img src=\"${mealData.image || 'https://images.unsplash.com/photo-1546554137-f86b9593a222'}\" alt=\"${mealData.name}\">\r\n          <div class=\"meal-basic-info\">\r\n            <h3>${mealData.name}</h3>\r\n            <p class=\"meal-calories\">${mealData.calories} kcal per serving</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"meal-nutrition\">\r\n          <h4>Nutrition per serving:</h4>\r\n          <div class=\"nutrition-grid\">\r\n            <div class=\"nutrition-item\">\r\n              <span class=\"nutrition-label\">Protein</span>\r\n              <span class=\"nutrition-value\">${Math.round(mealData.protein || 0)}g</span>\r\n            </div>\r\n            <div class=\"nutrition-item\">\r\n              <span class=\"nutrition-label\">Carbs</span>\r\n              <span class=\"nutrition-value\">${Math.round(mealData.carbs || 0)}g</span>\r\n            </div>\r\n            <div class=\"nutrition-item\">\r\n              <span class=\"nutrition-label\">Fat</span>\r\n              <span class=\"nutrition-value\">${Math.round(mealData.fat || 0)}g</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"meal-info-note\">\r\n          <p>This is a default meal. Limited details available.</p>\r\n        </div>\r\n      </div>\r\n    `;\r\n  } else {\r\n    popupContent = `\r\n      <div class=\"meal-details-loading\">\r\n        <div class=\"loading-spinner\"></div>\r\n        <p>Loading meal details...</p>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  const popupHTML = `\r\n    <div class=\"meal-details-popup-overlay\" id=\"meal-details-popup-overlay\">\r\n      <div class=\"meal-details-popup\">\r\n        <div class=\"meal-details-popup-header\">\r\n          <h2>Meal Details</h2>\r\n          <button class=\"popup-close\" id=\"meal-details-close\">&times;</button>\r\n        </div>\r\n        <div class=\"meal-details-popup-body\">\r\n          ${popupContent}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  document.body.insertAdjacentHTML('beforeend', popupHTML);\r\n\r\n  const overlay = document.getElementById('meal-details-popup-overlay');\r\n  const closeBtn = document.getElementById('meal-details-close');\r\n\r\n  const closePopup = () => {\r\n    if (overlay && overlay.parentNode) {\r\n      overlay.parentNode.removeChild(overlay);\r\n    }\r\n  };\r\n\r\n  if (closeBtn) closeBtn.addEventListener('click', closePopup);\r\n  if (overlay) {\r\n    overlay.addEventListener('click', (e) => {\r\n      if (e.target === overlay) closePopup();\r\n    });\r\n  }\r\n\r\n  if (mealData.recipe_id && !mealData.id?.toString().startsWith('default_')) {\r\n    try {\r\n      const mealDetails = await mealApiService.getMealDetails(mealData.recipe_id);\r\n      \r\n      if (mealDetails && mealDetails.meal) {\r\n        const meal = mealDetails.meal;\r\n        const detailsContent = `\r\n          <div class=\"meal-details-content\">\r\n            <div class=\"meal-details-header\">\r\n              <img src=\"${meal.image_url || mealData.image}\" alt=\"${meal.food_name}\">\r\n              <div class=\"meal-basic-info\">\r\n                <h3>${meal.food_name}</h3>\r\n                <p class=\"meal-calories\">${meal.calories_per_serving} kcal per ${meal.serving_unit || 'serving'}</p>\r\n                ${meal.recipe_metadata?.total_time ? `<p class=\"meal-time\">⏱️ ${meal.recipe_metadata.total_time} minutes</p>` : ''}\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"meal-nutrition\">\r\n              <h4>Nutrition per serving:</h4>\r\n              <div class=\"nutrition-grid\">\r\n                <div class=\"nutrition-item\">\r\n                  <span class=\"nutrition-label\">Protein</span>\r\n                  <span class=\"nutrition-value\">${Math.round(meal.protein_per_serving || 0)}g</span>\r\n                </div>\r\n                <div class=\"nutrition-item\">\r\n                  <span class=\"nutrition-label\">Carbs</span>\r\n                  <span class=\"nutrition-value\">${Math.round(meal.carbs_per_serving || 0)}g</span>\r\n                </div>\r\n                <div class=\"nutrition-item\">\r\n                  <span class=\"nutrition-label\">Fat</span>\r\n                  <span class=\"nutrition-value\">${Math.round(meal.fat_per_serving || 0)}g</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            ${meal.recipe_metadata?.ingredients && meal.recipe_metadata.ingredients.length > 0 ? `\r\n              <div class=\"meal-ingredients\">\r\n                <h4>Ingredients:</h4>\r\n                <ul>\r\n                  ${meal.recipe_metadata.ingredients.slice(0, 10).map(ingredient => `<li>${ingredient}</li>`).join('')}\r\n                  ${meal.recipe_metadata.ingredients.length > 10 ? `<li><em>... and ${meal.recipe_metadata.ingredients.length - 10} more ingredients</em></li>` : ''}\r\n                </ul>\r\n              </div>\r\n            ` : ''}\r\n\r\n            ${meal.recipe_metadata?.total_nutrition ? `\r\n              <div class=\"detailed-nutrition\">\r\n                <h4>Detailed Nutrition:</h4>\r\n                <div class=\"nutrition-details-grid\">\r\n                  ${meal.recipe_metadata.total_nutrition.fiber ? `<div>Fiber: ${Math.round(meal.recipe_metadata.total_nutrition.fiber)}g</div>` : ''}\r\n                  ${meal.recipe_metadata.total_nutrition.sugar ? `<div>Sugar: ${Math.round(meal.recipe_metadata.total_nutrition.sugar)}g</div>` : ''}\r\n                  ${meal.recipe_metadata.total_nutrition.sodium ? `<div>Sodium: ${Math.round(meal.recipe_metadata.total_nutrition.sodium)}mg</div>` : ''}\r\n                  ${meal.recipe_metadata.total_nutrition.cholesterol ? `<div>Cholesterol: ${Math.round(meal.recipe_metadata.total_nutrition.cholesterol)}mg</div>` : ''}\r\n                </div>\r\n              </div>\r\n            ` : ''}\r\n          </div>\r\n        `;\r\n\r\n        const bodyElement = document.querySelector('.meal-details-popup-body');\r\n        if (bodyElement) {\r\n          bodyElement.innerHTML = detailsContent;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching meal details:', error);\r\n      const bodyElement = document.querySelector('.meal-details-popup-body');\r\n      if (bodyElement) {\r\n        bodyElement.innerHTML = `\r\n          <div class=\"meal-details-error\">\r\n            <h4>Error</h4>\r\n            <p>Failed to load meal details. Please try again.</p>\r\n            <div class=\"basic-meal-info\">\r\n              <img src=\"${mealData.image}\" alt=\"${mealData.name}\">\r\n              <h3>${mealData.name}</h3>\r\n              <p>${mealData.calories} kcal per serving</p>\r\n            </div>\r\n          </div>\r\n        `;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const attachMealPlanEventHandlers = (onGenerateClicked, onMealItemClicked, onCompleteProfileClicked) => {\r\n  const generateMealPlanButton = document.getElementById('generate-meal-plan-btn');\r\n  const completeProfileButton = document.getElementById('complete-profile-btn');\r\n  const addFullPlanButton = document.getElementById('add-full-meal-plan-btn');\r\n  const mealPlanAddButtons = document.querySelectorAll('.meal-plan-add-btn');\r\n  const mealPlanDetailsTriggers = document.querySelectorAll('[data-meal-details-trigger]');\r\n  \r\n  if (generateMealPlanButton && onGenerateClicked) {\r\n    generateMealPlanButton.addEventListener('click', onGenerateClicked);\r\n  }\r\n\r\n  if (completeProfileButton && onCompleteProfileClicked) {\r\n    completeProfileButton.addEventListener('click', onCompleteProfileClicked);\r\n  }\r\n\r\n  if (addFullPlanButton) {\r\n    addFullPlanButton.addEventListener('click', async () => {\r\n      const mealPlanCards = document.querySelectorAll('.meal-plan-card');\r\n      const plans = [];\r\n      \r\n      mealPlanCards.forEach(card => {\r\n        const addButton = card.querySelector('.meal-plan-add-btn');\r\n        if (addButton && addButton.dataset.meal) {\r\n          try {\r\n            const mealData = JSON.parse(addButton.dataset.meal);\r\n            plans.push(mealData);\r\n          } catch (error) {\r\n            console.error('Error parsing meal data:', error);\r\n          }\r\n        }\r\n      });\r\n      \r\n      if (plans.length > 0) {\r\n        addFullPlanButton.disabled = true;\r\n        addFullPlanButton.textContent = 'Adding Plan...';\r\n        \r\n        try {\r\n          await addFullMealPlan(plans);\r\n        } catch (error) {\r\n          console.error('Error adding full meal plan:', error);\r\n        } finally {\r\n          addFullPlanButton.disabled = false;\r\n          addFullPlanButton.innerHTML = '<span class=\"btn-icon\">📋</span> Add Plan';\r\n        }\r\n      } else {\r\n        alert('No meals found to add');\r\n      }\r\n    });\r\n  }\r\n\r\n  if (mealPlanAddButtons) {\r\n    mealPlanAddButtons.forEach(button => {\r\n      button.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        try {\r\n          const mealData = JSON.parse(button.dataset.meal);\r\n          showMealPlanPopup(mealData);\r\n        } catch (error) {\r\n          console.error('Error parsing meal data:', error);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  if (mealPlanDetailsTriggers) {\r\n    mealPlanDetailsTriggers.forEach(trigger => {\r\n      trigger.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        \r\n        const mealCard = trigger.closest('.meal-plan-card');\r\n        if (mealCard) {\r\n          const addButton = mealCard.querySelector('.meal-plan-add-btn');\r\n          if (addButton && addButton.dataset.meal) {\r\n            try {\r\n              const mealData = JSON.parse(addButton.dataset.meal);\r\n              showMealDetailsPopup(mealData);\r\n            } catch (error) {\r\n              console.error('Error parsing meal data:', error);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n};","export const MEAL_CATEGORIES = {\r\n  'dietary': {\r\n    title: 'Dietary Preferences',\r\n    icon: '🥗',\r\n    keywords: [\r\n      'vegetarian', 'vegan', 'dairy free foods', 'egg free', 'lactose free',\r\n      'no shell fish', 'low calorie', 'healthy', 'light', 'low cholesterol', \r\n      'low protein', 'very low carbs', 'high fiber', 'high protein', 'protein'\r\n    ]\r\n  },\r\n  'cooking': {\r\n    title: 'Cooking Style',\r\n    icon: '👨‍🍳',\r\n    keywords: [\r\n      'no cook', 'stove top', 'oven', 'baking', 'broil/grill', 'microwave',\r\n      'pressure cooker', 'deep fried', 'steam', 'stir fry', 'wok',\r\n      'small appliance', 'mixer', 'dehydrator', 'bread machine'\r\n    ]\r\n  },\r\n  'mealtime': {\r\n    title: 'Meal Type & Time',\r\n    icon: '⏰',\r\n    keywords: [\r\n      'breakfast', 'brunch', 'lunch', 'dinner', 'snacks', 'dessert',\r\n      'one dish meal', 'stew', 'soup', 'pasta', 'bread', 'beverages',\r\n      '< 15 mins', '< 30 mins', '< 60 mins', 'weeknight', 'inexpensive'\r\n    ]\r\n  },\r\n  'ingredients': {\r\n    title: 'Main Ingredients',\r\n    icon: '🥘',\r\n    keywords: [\r\n      'chicken', 'beef', 'pork', 'fish', 'seafood', 'vegetable', 'soy/tofu',\r\n      'rice', 'pasta', 'beans', 'cheese', 'nuts', 'fruits', 'berries',\r\n      'mushroom', 'peppers', 'onions', 'spinach', 'corn'\r\n    ]\r\n  },\r\n  'cuisine': {\r\n    title: 'Cuisine & Flavors',\r\n    icon: '🌍',\r\n    keywords: [\r\n      'chinese', 'japanese', 'thai', 'vietnamese', 'korean', 'indian',\r\n      'italian', 'french', 'mexican', 'spanish', 'mediterranean',\r\n      'spicy', 'sweet', 'savory', 'umami', 'tangy', 'sour', 'mild'\r\n    ]\r\n  }\r\n};\r\n\r\n// Helper function to get all keywords from all categories\r\nexport const getAllKeywords = () => {\r\n  return Object.values(MEAL_CATEGORIES).reduce((allKeywords, category) => {\r\n    return [...allKeywords, ...category.keywords];\r\n  }, []);\r\n};\r\n\r\n// Helper function to find which category a keyword belongs to\r\nexport const findCategoryByKeyword = (keyword) => {\r\n  for (const [categoryKey, category] of Object.entries(MEAL_CATEGORIES)) {\r\n    if (category.keywords.includes(keyword)) {\r\n      return {\r\n        key: categoryKey,\r\n        ...category\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n// Helper function to get keywords by category\r\nexport const getKeywordsByCategory = (categoryKey) => {\r\n  return MEAL_CATEGORIES[categoryKey]?.keywords || [];\r\n};\r\n\r\n// Helper function to get category info\r\nexport const getCategoryInfo = (categoryKey) => {\r\n  return MEAL_CATEGORIES[categoryKey] || null;\r\n};\r\n\r\n// Helper function to count selected keywords per category\r\nexport const countSelectedKeywordsByCategory = (selectedKeywords) => {\r\n  const counts = {};\r\n  \r\n  Object.keys(MEAL_CATEGORIES).forEach(categoryKey => {\r\n    const categoryKeywords = MEAL_CATEGORIES[categoryKey].keywords;\r\n    counts[categoryKey] = selectedKeywords.filter(keyword => \r\n      categoryKeywords.includes(keyword)\r\n    ).length;\r\n  });\r\n  \r\n  return counts;\r\n};\r\n\r\n// Helper function to validate keywords\r\nexport const validateKeywords = (keywords) => {\r\n  const allKeywords = getAllKeywords();\r\n  return keywords.filter(keyword => allKeywords.includes(keyword));\r\n};\r\n\r\n// Helper function to get random keywords for suggestions\r\nexport const getRandomKeywords = (count = 5, excludeKeywords = []) => {\r\n  const allKeywords = getAllKeywords().filter(keyword => \r\n    !excludeKeywords.includes(keyword)\r\n  );\r\n  \r\n  const shuffled = allKeywords.sort(() => 0.5 - Math.random());\r\n  return shuffled.slice(0, count);\r\n};\r\n\r\n// Helper function to group keywords by category\r\nexport const groupKeywordsByCategory = (keywords) => {\r\n  const grouped = {};\r\n  \r\n  keywords.forEach(keyword => {\r\n    const category = findCategoryByKeyword(keyword);\r\n    if (category) {\r\n      if (!grouped[category.key]) {\r\n        grouped[category.key] = {\r\n          title: category.title,\r\n          icon: category.icon,\r\n          keywords: []\r\n        };\r\n      }\r\n      grouped[category.key].keywords.push(keyword);\r\n    }\r\n  });\r\n  \r\n  return grouped;\r\n};\r\n\r\nexport default {\r\n  MEAL_CATEGORIES,\r\n  getAllKeywords,\r\n  findCategoryByKeyword,\r\n  getKeywordsByCategory,\r\n  getCategoryInfo,\r\n  countSelectedKeywordsByCategory,\r\n  validateKeywords,\r\n  getRandomKeywords,\r\n  groupKeywordsByCategory\r\n};"],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","formatMealPlanData","input","console","log","JSON","stringify","label","undefined","concat","meal_plans","Array","isArray","_debugFormatInput","planData","breakfast","lunch","dinner","Breakfast","Lunch","Dinner","availableMealKeys","formattedPlans","key","display","_ref","mealData","foundKey","_i","_variations","toUpperCase","variation","formattedMeal","Name","food_name","image","getFirstImageUrl","Image","image_url","calories","Math","round","Calories","calories_per_serving","id","RecipeId","recipe_id","Date","now","serving_size","ServingSize","serving_unit","ServingUnit","protein","ProteinContent","carbs","CarbohydrateContent","fat","FatContent","defaultMeal","inputString","firstUrl","replace","split","trim","calculateTotalCalories","plans","total","reduce","plan","getDefaultMealPlan","createMealPlanSection","data","_data$plans","_data$plans2","loading","error","plansExists","plansLength","totalCalories","targetCalories","dataKeys","isProfileError","includes","buttonText","buttonAction","plansIsArray","plansContent","map","createMealPlanCard","join","meal","warn","mealType","mealName","mealCalories","mealImage","mealId","toLowerCase","getTodayString","year","getFullYear","month","String","getMonth","padStart","day","getDate","addFullMealPlan","_ref3","_callee2","today","mealPlanData","successCount","failCount","_plan$id","refreshEvent","_context2","meal_plan","log_date","mealApiService","alert","t0","message","toString","startsWith","addMealFromPlan","meal_type","servings","t1","createMealEntry","food_item_id","t2","setTimeout","CustomEvent","document","dispatchEvent","t3","_x","showMealDetailsPopup","_ref4","_callee3","_mealData$id2","_mealData$id3","existingPopup","popupContent","popupHTML","overlay","closeBtn","closePopup","mealDetails","_meal$recipe_metadata","_meal$recipe_metadata2","_meal$recipe_metadata3","detailsContent","bodyElement","_bodyElement","_context3","getElementById","remove","body","insertAdjacentHTML","parentNode","removeChild","addEventListener","target","getMealDetails","recipe_metadata","total_time","protein_per_serving","carbs_per_serving","fat_per_serving","ingredients","ingredient","total_nutrition","fiber","sugar","sodium","cholesterol","querySelector","innerHTML","_x2","attachMealPlanEventHandlers","onGenerateClicked","onMealItemClicked","onCompleteProfileClicked","generateMealPlanButton","completeProfileButton","addFullPlanButton","mealPlanAddButtons","querySelectorAll","mealPlanDetailsTriggers","_callee4","mealPlanCards","_context4","card","addButton","dataset","parse","disabled","textContent","button","preventDefault","stopPropagation","_mealData$type","_mealData$type2","_mealData$type3","cancelBtn","addBtn","_callee","_document$getElementB","_document$getElementB2","_document$getElementB3","logDate","_mealData$id","_context","parseFloat","showMealPlanPopup","trigger","mealCard","closest","MEAL_CATEGORIES","title","icon","keywords","getAllKeywords","allKeywords","category","_toConsumableArray","countSelectedKeywordsByCategory","selectedKeywords","counts","categoryKey","categoryKeywords","filter","keyword","validateKeywords"],"sourceRoot":""}