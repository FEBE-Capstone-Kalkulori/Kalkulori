{"version":3,"file":"app~e9bfe506.bundle.js","mappings":"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","sources":["webpack://kalkulori/./src/scripts/pages/history/history-presenter.js"],"sourcesContent":["import mealApiService from '../../utils/meal-api-service';\r\n\r\nclass HistoryPresenter {\r\n  constructor(view) {\r\n    this.view = view;\r\n    this.currentYear = new Date().getFullYear();\r\n    this.chartData = [];\r\n    this.foodHistory = [];\r\n    this.selectedDate = new Date();\r\n    \r\n    this.initCurrentDateSettings();\r\n  }\r\n\r\n  initCurrentDateSettings() {\r\n    const today = new Date();\r\n    const monthNames = [\r\n      'january', 'february', 'march', 'april', 'may', 'june',\r\n      'july', 'august', 'september', 'october', 'november', 'december'\r\n    ];\r\n    \r\n    this.currentMonth = monthNames[today.getMonth()];\r\n    this.currentWeek = this.calculateCurrentWeekInMonth(today);\r\n  }\r\n\r\n  calculateCurrentWeekInMonth(date) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    \r\n    const firstDay = new Date(year, month, 1);\r\n    const firstDayOfWeek = firstDay.getDay();\r\n    \r\n    const weekNumber = Math.ceil((day + firstDayOfWeek) / 7);\r\n    \r\n    return Math.min(weekNumber, 4);\r\n  }\r\n\r\n  init() {\r\n    console.log('🚀 Initializing History Presenter...');\r\n    \r\n    const container = document.getElementById('history-food-container');\r\n    const monthDropdown = document.getElementById('month-dropdown');\r\n    const chartBars = document.getElementById('chart-bars');\r\n    \r\n    console.log('🔍 DOM Elements Check:', {\r\n      foodContainer: !!container,\r\n      monthDropdown: !!monthDropdown, \r\n      chartBars: !!chartBars\r\n    });\r\n    \r\n    this.setInitialMonthDropdown();\r\n    this.bindEvents();\r\n    this.updateActiveWeekButton();\r\n    this.loadChartData();\r\n    \r\n    setTimeout(() => {\r\n      console.log('⏰ Starting food history load for today...');\r\n      this.loadFoodHistory(this.formatDateForAPI(new Date()));\r\n    }, 100);\r\n  }\r\n\r\n  setInitialMonthDropdown() {\r\n    const monthDropdown = document.getElementById('month-dropdown');\r\n    if (monthDropdown) {\r\n      monthDropdown.value = this.currentMonth;\r\n    }\r\n  }\r\n\r\n  bindEvents() {\r\n    const monthDropdown = document.getElementById('month-dropdown');\r\n    const weekButtons = document.querySelectorAll('.week-btn');\r\n\r\n    monthDropdown.addEventListener('change', (e) => {\r\n      this.currentMonth = e.target.value;\r\n      this.loadChartData();\r\n    });\r\n\r\n    weekButtons.forEach(btn => {\r\n      btn.addEventListener('click', (e) => {\r\n        this.currentWeek = parseInt(e.target.dataset.week);\r\n        this.updateActiveWeekButton();\r\n        this.loadChartData();\r\n      });\r\n    });\r\n  }\r\n\r\n  updateActiveWeekButton() {\r\n    const weekButtons = document.querySelectorAll('.week-btn');\r\n    weekButtons.forEach(btn => {\r\n      const week = parseInt(btn.dataset.week);\r\n      \r\n      if (week === this.currentWeek) {\r\n        btn.className = 'week-btn px-4 py-2 md:px-6 md:py-3 bg-lime-600 text-white border-none rounded-xl md:rounded-2xl text-sm md:text-base font-semibold cursor-pointer transition-all duration-300 hover:bg-lime-700 hover:-translate-y-0.5';\r\n      } else {\r\n        btn.className = 'week-btn px-4 py-2 md:px-6 md:py-3 bg-lime-300 text-amber-900 border-none rounded-xl md:rounded-2xl text-sm md:text-base font-semibold cursor-pointer transition-all duration-300 hover:bg-lime-400 hover:-translate-y-0.5';\r\n      }\r\n    });\r\n  }\r\n\r\n  getMonthNumber(monthName) {\r\n    const months = {\r\n      'january': 0, 'february': 1, 'march': 2, 'april': 3,\r\n      'may': 4, 'june': 5, 'july': 6, 'august': 7,\r\n      'september': 8, 'october': 9, 'november': 10, 'december': 11\r\n    };\r\n    return months[monthName];\r\n  }\r\n\r\n  getWeekDates() {\r\n    const monthNum = this.getMonthNumber(this.currentMonth);\r\n    const year = this.currentYear;\r\n    \r\n    const firstDay = new Date(year, monthNum, 1);\r\n    const firstDayOfWeek = firstDay.getDay();\r\n    \r\n    const weekStart = new Date(firstDay);\r\n    weekStart.setDate(1 - firstDayOfWeek + (this.currentWeek - 1) * 7);\r\n    \r\n    const dates = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      const date = new Date(weekStart);\r\n      date.setDate(weekStart.getDate() + i);\r\n      dates.push(date);\r\n    }\r\n    \r\n    return dates;\r\n  }\r\n\r\n  formatDate(date) {\r\n    const day = date.getDate();\r\n    const month = date.getMonth() + 1;\r\n    return `${day}/${month}`;\r\n  }\r\n\r\n  formatDateForAPI(date) {\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n\r\n  async loadChartData() {\r\n    try {\r\n      this.showLoading();\r\n      \r\n      const weekDates = this.getWeekDates();\r\n      const chartData = [];\r\n      \r\n      for (const date of weekDates) {\r\n        const dateStr = this.formatDateForAPI(date);\r\n        \r\n        try {\r\n          const dailyData = await mealApiService.getDailyLog(dateStr);\r\n          const calories = dailyData.daily_log?.total_calories_consumed || 0;\r\n          \r\n          chartData.push({\r\n            date: date,\r\n            dateLabel: this.formatDate(date),\r\n            calories: calories\r\n          });\r\n        } catch (error) {\r\n          chartData.push({\r\n            date: date,\r\n            dateLabel: this.formatDate(date),\r\n            calories: 0\r\n          });\r\n        }\r\n      }\r\n      \r\n      this.chartData = chartData;\r\n      this.renderChart();\r\n      \r\n    } catch (error) {\r\n      console.error('Error loading chart data:', error);\r\n      this.showError('Failed to load chart data');\r\n    } finally {\r\n      this.hideLoading();\r\n    }\r\n  }\r\n\r\n  // FIX: Enhanced _enrichMealEntries for better image and calories handling\r\n  async _enrichMealEntries(mealEntries) {\r\n    const enrichedEntries = [];\r\n    \r\n    for (const meal of mealEntries) {\r\n      let enrichedMeal = { ...meal };\r\n      \r\n      // FIX: Ensure proper field mapping like in home-presenter\r\n      if (!enrichedMeal.calories && enrichedMeal.calories_consumed) {\r\n        enrichedMeal.calories = enrichedMeal.calories_consumed;\r\n      }\r\n      if (!enrichedMeal.protein && enrichedMeal.protein_consumed) {\r\n        enrichedMeal.protein = enrichedMeal.protein_consumed;\r\n      }\r\n      if (!enrichedMeal.carbs && enrichedMeal.carbs_consumed) {\r\n        enrichedMeal.carbs = enrichedMeal.carbs_consumed;\r\n      }\r\n      if (!enrichedMeal.fat && enrichedMeal.fat_consumed) {\r\n        enrichedMeal.fat = enrichedMeal.fat_consumed;\r\n      }\r\n      \r\n      // FIX: Enhanced handling for recipe and search meals with proper image fetching\r\n      if ((meal.is_from_recipe || meal.is_from_search) && meal.recipe_id) {\r\n        try {\r\n          console.log(`🔍 Fetching details for ${meal.is_from_search ? 'search' : 'recipe'} meal:`, meal.recipe_id);\r\n          \r\n          const mealDetails = await mealApiService.getMealDetails(meal.recipe_id);\r\n          if (mealDetails && mealDetails.meal) {\r\n            const recipeData = mealDetails.meal;\r\n            enrichedMeal.food_details = {\r\n              id: meal.is_from_search ? meal.food_item_id : `recipe_${meal.recipe_id}`,\r\n              food_name: recipeData.food_name || meal.food_name || (meal.is_from_search ? 'Search Result' : 'Recipe Meal'),\r\n              calories_per_serving: recipeData.calories_per_serving,\r\n              protein_per_serving: recipeData.protein_per_serving,\r\n              carbs_per_serving: recipeData.carbs_per_serving,\r\n              fat_per_serving: recipeData.fat_per_serving,\r\n              serving_size: recipeData.serving_size,\r\n              serving_unit: recipeData.serving_unit,\r\n              image_url: recipeData.image_url, // FIX: Keep the actual image from API\r\n              is_recipe: meal.is_from_recipe ? true : false,\r\n              is_from_search: meal.is_from_search ? true : false,\r\n              recipe_id: meal.recipe_id\r\n            };\r\n            console.log(`✅ Successfully enriched ${meal.is_from_search ? 'search' : 'recipe'} meal with image:`, enrichedMeal.food_details.image_url);\r\n          } else {\r\n            throw new Error('No meal details found');\r\n          }\r\n        } catch (error) {\r\n          console.warn(`⚠️ Could not fetch ${meal.is_from_search ? 'search' : 'recipe'} meal details:`, error);\r\n          \r\n          // FIX: Better fallback with proper calorie calculation\r\n          const caloriesPerServing = Math.round((meal.calories || meal.calories_consumed || 0) / (meal.servings || 1));\r\n          const proteinPerServing = parseFloat(((meal.protein || meal.protein_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n          const carbsPerServing = parseFloat(((meal.carbs || meal.carbs_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n          const fatPerServing = parseFloat(((meal.fat || meal.fat_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n          \r\n          enrichedMeal.food_details = {\r\n            id: meal.food_item_id,\r\n            food_name: meal.food_name || (meal.is_from_search ? 'Search Result' : 'Recipe Meal'),\r\n            calories_per_serving: caloriesPerServing,\r\n            protein_per_serving: proteinPerServing,\r\n            carbs_per_serving: carbsPerServing,\r\n            fat_per_serving: fatPerServing,\r\n            serving_size: 1,\r\n            serving_unit: \"serving\",\r\n            image_url: null, // Will use fallback in UI\r\n            is_recipe: meal.is_from_recipe ? true : false,\r\n            is_from_search: meal.is_from_search ? true : false,\r\n            recipe_id: meal.recipe_id\r\n          };\r\n          console.log(`⚠️ Using fallback data for ${meal.is_from_search ? 'search' : 'recipe'} meal:`, enrichedMeal.food_details.food_name);\r\n        }\r\n      } else if (meal.food_details) {\r\n        // Regular food items with existing food_details\r\n        enrichedMeal.food_details = meal.food_details;\r\n      } else {\r\n        // FIX: Better fallback for regular foods without food_details\r\n        const caloriesPerServing = Math.round((meal.calories || meal.calories_consumed || 0) / (meal.servings || 1));\r\n        const proteinPerServing = parseFloat(((meal.protein || meal.protein_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n        const carbsPerServing = parseFloat(((meal.carbs || meal.carbs_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n        const fatPerServing = parseFloat(((meal.fat || meal.fat_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n        \r\n        enrichedMeal.food_details = {\r\n          id: meal.food_item_id,\r\n          food_name: meal.food_name || 'Unknown Food',\r\n          calories_per_serving: caloriesPerServing,\r\n          protein_per_serving: proteinPerServing,\r\n          carbs_per_serving: carbsPerServing,\r\n          fat_per_serving: fatPerServing,\r\n          serving_size: 1,\r\n          serving_unit: \"serving\",\r\n          image_url: null\r\n        };\r\n      }\r\n      \r\n      enrichedEntries.push(enrichedMeal);\r\n    }\r\n    \r\n    return enrichedEntries;\r\n  }\r\n\r\n  async loadFoodHistory(logDate = null) {\r\n    try {\r\n      this.showFoodLoading();\r\n      \r\n      const targetDate = logDate || this.formatDateForAPI(new Date());\r\n      console.log('📅 Loading food history for date:', targetDate);\r\n      \r\n      const dailyData = await mealApiService.getDailyLog(targetDate);\r\n      \r\n      if (!dailyData || !dailyData.meal_entries || dailyData.meal_entries.length === 0) {\r\n        this.showFoodError(`No meals found for ${this.formatDisplayDate(targetDate)}`);\r\n        return;\r\n      }\r\n      \r\n      console.log('📊 Raw meal entries from API:', dailyData.meal_entries);\r\n      \r\n      const enrichedMealEntries = await this._enrichMealEntries(dailyData.meal_entries);\r\n      console.log('✨ Enriched meal entries:', enrichedMealEntries);\r\n      \r\n      const uniqueFoods = new Map();\r\n      \r\n      enrichedMealEntries.forEach((entry, index) => {\r\n        let foodItem = null;\r\n        let foodName = 'Unknown Food';\r\n        \r\n        if (entry.food_details) {\r\n          foodItem = entry.food_details;\r\n          foodName = foodItem.food_name || foodItem.name || entry.food_name || 'Recipe Meal';\r\n        } else if (entry.food_item) {\r\n          foodItem = entry.food_item;\r\n          foodName = foodItem.food_name || foodItem.name || entry.food_name || 'Food Item';\r\n        } else if (entry.food_name) {\r\n          foodName = entry.food_name;\r\n        } else if (entry.food_item_id) {\r\n          foodName = `Food ${entry.food_item_id}`;\r\n        }\r\n        \r\n        if (foodItem || entry.food_item_id) {\r\n          const foodId = foodItem?.id || entry.food_item_id;\r\n          const entryKey = `${foodId}_${entry.meal_type}_${entry.id}`;\r\n          \r\n          if (!uniqueFoods.has(entryKey)) {\r\n            // FIX: Better calorie calculation with multiple fallbacks\r\n            let totalCalories = 0;\r\n            \r\n            // Try different methods to get calories\r\n            if (entry.calories) {\r\n              totalCalories = Math.round(entry.calories);\r\n            } else if (entry.calories_consumed) {\r\n              totalCalories = Math.round(entry.calories_consumed);\r\n            } else if (foodItem && foodItem.calories_per_serving && entry.servings) {\r\n              totalCalories = Math.round(foodItem.calories_per_serving * entry.servings);\r\n            } else if (foodItem && foodItem.calories_per_serving) {\r\n              totalCalories = Math.round(foodItem.calories_per_serving);\r\n            } else {\r\n              totalCalories = 0;\r\n            }\r\n            \r\n            // FIX: Better image handling with proper fallback\r\n            let imageUrl = 'https://images.unsplash.com/photo-1546069901-ba9599a7e63c?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80';\r\n            \r\n            if (foodItem && foodItem.image_url) {\r\n              imageUrl = foodItem.image_url;\r\n            } else {\r\n              // Use more specific fallback images based on meal type\r\n              const fallbackImages = {\r\n                breakfast: 'https://images.unsplash.com/photo-1533089860892-a7c6f0a88666?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',\r\n                lunch: 'https://images.unsplash.com/photo-1546069901-ba9599a7e63c?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',\r\n                dinner: 'https://images.unsplash.com/photo-1567620905732-2d1ec7ab7445?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',\r\n                snack: 'https://images.unsplash.com/photo-1551024506-0bccd828d307?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80'\r\n              };\r\n              imageUrl = fallbackImages[entry.meal_type] || imageUrl;\r\n            }\r\n            \r\n            const foodData = {\r\n              id: foodId,\r\n              entryId: entry.id,\r\n              name: foodName,\r\n              calories: totalCalories,\r\n              image: imageUrl,\r\n              serving_size: entry.servings || 1,\r\n              serving_unit: foodItem?.serving_unit || 'serving',\r\n              meal_type: entry.meal_type,\r\n              recipe_id: entry.recipe_id || null,\r\n              is_from_recipe: entry.is_from_recipe || false,\r\n              is_from_search: entry.is_from_search || false\r\n            };\r\n            \r\n            console.log(`🍽️ Created food card data:`, foodData);\r\n            \r\n            uniqueFoods.set(entryKey, foodData);\r\n          }\r\n        }\r\n      });\r\n      \r\n      this.foodHistory = Array.from(uniqueFoods.values()).slice(0, 12);\r\n      \r\n      console.log('📋 Final food history:', this.foodHistory);\r\n      \r\n      if (this.foodHistory.length === 0) {\r\n        this.showFoodError(`No meals found for ${this.formatDisplayDate(targetDate)}`);\r\n      } else {\r\n        this.renderFoodHistory();\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('💥 Error loading food history:', error);\r\n      \r\n      if (error.message && error.message.includes('404')) {\r\n        this.showFoodError(`No meals found for ${this.formatDisplayDate(logDate || this.formatDateForAPI(new Date()))}`);\r\n      } else {\r\n        this.showFoodError('Failed to load food history');\r\n      }\r\n    }\r\n  }\r\n\r\n  formatDisplayDate(dateStr) {\r\n    const date = new Date(dateStr);\r\n    const today = new Date();\r\n    \r\n    if (this.isSameDate(date, today)) {\r\n      return 'Today';\r\n    }\r\n    \r\n    const yesterday = new Date(today);\r\n    yesterday.setDate(today.getDate() - 1);\r\n    \r\n    if (this.isSameDate(date, yesterday)) {\r\n      return 'Yesterday';\r\n    }\r\n    \r\n    return date.toLocaleDateString('en-US', { \r\n      weekday: 'short', \r\n      month: 'short', \r\n      day: 'numeric' \r\n    });\r\n  }\r\n\r\n  isSameDate(date1, date2) {\r\n    return date1.getDate() === date2.getDate() && \r\n           date1.getMonth() === date2.getMonth() && \r\n           date1.getFullYear() === date2.getFullYear();\r\n  }\r\n\r\n  onBarClick(dateData) {\r\n    this.selectedDate = dateData.date;\r\n    const dateStr = this.formatDateForAPI(dateData.date);\r\n    console.log('📅 Bar clicked for date:', dateStr);\r\n    this.loadFoodHistory(dateStr);\r\n    \r\n    this.updateSelectedBar();\r\n  }\r\n\r\n  updateSelectedBar() {\r\n    const chartBars = document.getElementById('chart-bars');\r\n    if (!chartBars) return;\r\n    \r\n    const bars = chartBars.querySelectorAll('.chart-bar');\r\n    bars.forEach((bar, index) => {\r\n      const barData = this.chartData[index];\r\n      if (barData && this.isSameDate(barData.date, this.selectedDate)) {\r\n        bar.classList.add('ring-2', 'ring-blue-500', 'ring-offset-2');\r\n      } else if (!this.isToday(barData?.date)) {\r\n        bar.classList.remove('ring-2', 'ring-blue-500', 'ring-offset-2');\r\n      }\r\n    });\r\n  }\r\n\r\n  renderFoodHistory() {\r\n    const container = document.getElementById('history-food-container');\r\n    console.log('🎨 Rendering food history, container:', container);\r\n    console.log('🍽️ Food history to render:', this.foodHistory);\r\n    \r\n    if (!container) {\r\n      console.error('❌ Food container not found!');\r\n      return;\r\n    }\r\n    \r\n    if (this.foodHistory.length === 0) {\r\n      container.innerHTML = '<div class=\"text-center text-gray-500 py-6 md:py-8 text-sm\">No food history found</div>';\r\n      return;\r\n    }\r\n    \r\n    container.innerHTML = '';\r\n    \r\n    this.foodHistory.forEach((food, index) => {\r\n      console.log(`🔄 Creating card ${index} for:`, food);\r\n      const foodCard = this.createSmallFoodCard(food);\r\n      container.appendChild(foodCard);\r\n    });\r\n    \r\n    console.log('✅ Food cards rendered, binding events...');\r\n    this.bindFoodCardEvents();\r\n  }\r\n\r\n  // IMPROVED: Better food card layout with proper spacing and mobile responsiveness\r\n  createSmallFoodCard(food) {\r\n    const cardElement = document.createElement('div');\r\n    cardElement.className = 'bg-gray-50 rounded-2xl md:rounded-3xl p-3 md:p-4 hover:bg-gray-100 hover:shadow-md hover:-translate-y-0.5 transition-all duration-200 cursor-pointer border border-gray-200 group';\r\n    cardElement.dataset.foodId = food.id;\r\n    cardElement.dataset.servingSize = food.serving_size;\r\n    cardElement.dataset.servingUnit = food.serving_unit;\r\n    \r\n    // Improved layout with better spacing and responsiveness\r\n    cardElement.innerHTML = `\r\n      <div class=\"flex items-center gap-3 md:gap-4\">\r\n        <!-- Food Image -->\r\n        <div class=\"w-10 h-10 md:w-12 md:h-12 rounded-xl overflow-hidden flex-shrink-0 bg-gray-200\">\r\n          <img src=\"${food.image}\" alt=\"${food.name}\" class=\"w-full h-full object-cover hover:scale-105 transition-transform duration-200\" onerror=\"this.src='https://images.unsplash.com/photo-1546069901-ba9599a7e63c?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80'\">\r\n        </div>\r\n        \r\n        <!-- Food Info -->\r\n        <div class=\"flex-1 min-w-0 pr-2\">\r\n          <h4 class=\"font-medium text-sm md:text-base text-gray-900 truncate leading-tight\">${food.name}</h4>\r\n          <div class=\"flex flex-col sm:flex-row sm:items-center gap-1 sm:gap-2 mt-1\">\r\n            <p class=\"text-xs md:text-sm text-gray-600 font-medium\">${food.calories} kcal</p>\r\n            <span class=\"text-xs px-2 py-0.5 bg-lime-100 text-lime-700 rounded-full w-fit\">${food.meal_type}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Add Button -->\r\n        <div class=\"flex-shrink-0\">\r\n          <button class=\"w-8 h-8 md:w-10 md:h-10 bg-lime-500 text-white rounded-full flex items-center justify-center hover:bg-lime-600 hover:scale-110 active:scale-95 transition-all duration-200 border-none outline-none shadow-sm group-hover:shadow-md\">\r\n            <span class=\"text-lg md:text-xl font-bold leading-none\">+</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n    \r\n    return cardElement;\r\n  }\r\n\r\n  bindFoodCardEvents() {\r\n    const container = document.getElementById('history-food-container');\r\n    if (!container) return;\r\n    \r\n    const addButtons = container.querySelectorAll('button');\r\n    addButtons.forEach(button => {\r\n      button.addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        \r\n        const foodCard = event.target.closest('[data-food-id]');\r\n        if (!foodCard) return;\r\n        \r\n        const foodName = foodCard.querySelector('h4').textContent;\r\n        const caloriesText = foodCard.querySelector('p').textContent;\r\n        const calories = parseInt(caloriesText.replace(' kcal', ''));\r\n        const foodId = foodCard.dataset.foodId;\r\n        const servingSize = foodCard.dataset.servingSize;\r\n        const servingUnit = foodCard.dataset.servingUnit;\r\n        const recipeId = foodCard.dataset.recipeId;\r\n        const isFromRecipe = foodCard.dataset.isFromRecipe === 'true';\r\n        const isFromSearch = foodCard.dataset.isFromSearch === 'true';\r\n        \r\n        this.showAddMealPopup({\r\n          id: foodId,\r\n          name: foodName,\r\n          calories: calories,\r\n          serving_size: servingSize,\r\n          serving_unit: servingUnit,\r\n          recipe_id: recipeId,\r\n          is_from_recipe: isFromRecipe,\r\n          is_from_search: isFromSearch\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  showAddMealPopup(foodData) {\r\n    const existingPopup = document.getElementById('meal-popup-overlay');\r\n    if (existingPopup) {\r\n      existingPopup.remove();\r\n    }\r\n    \r\n    const popupHTML = `\r\n      <div class=\"fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center z-50 animate-in fade-in duration-200 p-4\" id=\"meal-popup-overlay\">\r\n        <div class=\"bg-white rounded-2xl p-4 md:p-6 w-full max-w-md animate-in zoom-in-95 duration-200\">\r\n          <div class=\"flex justify-between items-center mb-4 md:mb-6\">\r\n            <h3 class=\"text-lg md:text-xl font-semibold text-gray-900\">Add ${foodData.name}</h3>\r\n            <button class=\"text-gray-500 hover:text-gray-700 text-2xl transition-colors duration-200 w-8 h-8 flex items-center justify-center\" id=\"popup-close\">&times;</button>\r\n          </div>\r\n          \r\n          <div class=\"bg-gray-50 border-2 border-gray-200 rounded-xl p-4 mb-6\">\r\n            <div class=\"text-center\">\r\n              <div class=\"text-lg font-semibold text-gray-900 mb-2\">${foodData.name}</div>\r\n              <div class=\"text-sm text-gray-600\">${foodData.calories} calories per serving</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"space-y-4\">\r\n            <div>\r\n              <label for=\"meal-type\" class=\"block text-sm font-medium text-gray-700 mb-2\">Meal Type:</label>\r\n              <select id=\"meal-type\" required class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-lime-500 focus:border-lime-500 transition-all duration-200\">\r\n                <option value=\"\">Select meal type</option>\r\n                <option value=\"breakfast\">Breakfast</option>\r\n                <option value=\"lunch\">Lunch</option>\r\n                <option value=\"dinner\">Dinner</option>\r\n                <option value=\"snack\">Snack</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label for=\"servings\" class=\"block text-sm font-medium text-gray-700 mb-2\">Servings:</label>\r\n              <input type=\"number\" id=\"servings\" min=\"0.1\" step=\"0.1\" value=\"1\" required class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-lime-500 focus:border-lime-500 transition-all duration-200\">\r\n            </div>\r\n            <div>\r\n              <label for=\"log-date\" class=\"block text-sm font-medium text-gray-700 mb-2\">Date:</label>\r\n              <input type=\"date\" id=\"log-date\" value=\"${new Date().toISOString().split('T')[0]}\" required class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-lime-500 focus:border-lime-500 transition-all duration-200\">\r\n            </div>\r\n            <div class=\"flex gap-3 mt-6 pt-2\">\r\n              <button class=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-all duration-200\" id=\"btn-cancel\">Cancel</button>\r\n              <button class=\"flex-1 px-4 py-2 bg-lime-500 text-white rounded-lg hover:bg-lime-600 active:bg-lime-700 transition-all duration-200\" id=\"btn-add\">Add</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n      \r\n      document.body.insertAdjacentHTML('beforeend', popupHTML);\r\n      \r\n      const overlay = document.getElementById('meal-popup-overlay');\r\n      const closeBtn = document.getElementById('popup-close');\r\n      const cancelBtn = document.getElementById('btn-cancel');\r\n      const addBtn = document.getElementById('btn-add');\r\n      \r\n      const closePopup = () => {\r\n        if (overlay && overlay.parentNode) {\r\n          overlay.parentNode.removeChild(overlay);\r\n        }\r\n      };\r\n      \r\n      closeBtn?.addEventListener('click', closePopup);\r\n      cancelBtn?.addEventListener('click', closePopup);\r\n      overlay?.addEventListener('click', (e) => {\r\n        if (e.target === overlay) closePopup();\r\n      });\r\n      \r\n      addBtn?.addEventListener('click', async () => {\r\n        const mealType = document.getElementById('meal-type')?.value;\r\n        const servings = parseFloat(document.getElementById('servings')?.value);\r\n        const logDate = document.getElementById('log-date')?.value;\r\n        \r\n        if (!mealType || !servings || !logDate) {\r\n          alert('Please fill all fields');\r\n          return;\r\n        }\r\n        \r\n        try {\r\n          addBtn.disabled = true;\r\n          addBtn.textContent = 'Adding...';\r\n          \r\n          console.log('🔍 Food data for adding:', foodData);\r\n          \r\n          if (foodData.recipe_id && (foodData.is_from_recipe || foodData.is_from_search)) {\r\n            console.log('📍 Using addMealFromSuggestion endpoint for recipe/search meal');\r\n            await mealApiService.addMealFromSuggestion({\r\n              recipe_id: foodData.recipe_id,\r\n              meal_type: mealType,\r\n              servings: servings,\r\n              log_date: logDate\r\n            });\r\n          } else if (foodData.id && foodData.id.toString().startsWith('recipe_')) {\r\n            const recipeId = foodData.id.replace('recipe_', '');\r\n            console.log('📍 Using addMealFromSuggestion endpoint for recipe ID format:', recipeId);\r\n            await mealApiService.addMealFromSuggestion({\r\n              recipe_id: recipeId,\r\n              meal_type: mealType,\r\n              servings: servings,\r\n              log_date: logDate\r\n            });\r\n          } else {\r\n            let foodItemId = foodData.id;\r\n            if (foodItemId && foodItemId.toString().includes('_')) {\r\n              const parts = foodItemId.split('_');\r\n              if (parts[0] && !isNaN(parts[0])) {\r\n                foodItemId = parts[0];\r\n              }\r\n            }\r\n            \r\n            console.log('📍 Using createMealEntry endpoint for regular food item:', foodItemId);\r\n            await mealApiService.createMealEntry({\r\n              food_item_id: foodItemId,\r\n              meal_type: mealType,\r\n              servings: servings,\r\n              log_date: logDate\r\n            });\r\n          }\r\n          \r\n          alert('Meal added successfully!');\r\n          closePopup();\r\n          \r\n          setTimeout(() => {\r\n            if (logDate === this.formatDateForAPI(this.selectedDate)) {\r\n              this.loadFoodHistory(logDate);\r\n            }\r\n            this.loadChartData();\r\n          }, 500);\r\n          \r\n        } catch (error) {\r\n          console.error('Error adding meal:', error);\r\n          alert('Failed to add meal. Please try again.');\r\n          addBtn.disabled = false;\r\n          addBtn.textContent = 'Add';\r\n        }\r\n      });\r\n    }\r\n\r\n  renderChart() {\r\n    const chartBars = document.getElementById('chart-bars');\r\n    const chartXAxis = document.querySelector('.chart-x-axis');\r\n    \r\n    if (!chartBars || !chartXAxis) return;\r\n    \r\n    chartBars.innerHTML = '';\r\n    chartXAxis.innerHTML = '';\r\n    \r\n    const maxCalories = Math.max(...this.chartData.map(d => d.calories), 2500);\r\n    const chartHeight = window.innerWidth < 768 ? 224 : 288; // Responsive chart height\r\n    \r\n    this.chartData.forEach((data, index) => {\r\n      const barHeight = data.calories > 0 ? (data.calories / maxCalories) * chartHeight : 0;\r\n      \r\n      const bar = document.createElement('div');\r\n      bar.className = 'chart-bar bg-amber-800 w-6 sm:w-8 md:w-12 mx-0.5 md:mx-1 rounded-t-sm transition-all duration-300 hover:bg-amber-700 cursor-pointer relative group';\r\n      bar.style.height = `${barHeight}px`;\r\n      \r\n      bar.addEventListener('click', () => {\r\n        this.onBarClick(data);\r\n      });\r\n      \r\n      const tooltip = document.createElement('div');\r\n      tooltip.className = 'absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-2 py-1 bg-gray-800 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 whitespace-nowrap z-10';\r\n      tooltip.textContent = `${data.calories} cal`;\r\n      bar.appendChild(tooltip);\r\n      \r\n      if (this.isToday(data.date)) {\r\n        bar.classList.add('ring-2', 'ring-lime-500', 'ring-offset-2');\r\n        tooltip.textContent = `${data.calories} cal (Today)`;\r\n      }\r\n      \r\n      chartBars.appendChild(bar);\r\n    });\r\n    \r\n    this.chartData.forEach(data => {\r\n      const label = document.createElement('span');\r\n      label.className = 'text-xs sm:text-sm';\r\n      \r\n      if (this.isToday(data.date)) {\r\n        label.className += ' font-bold text-lime-600';\r\n      }\r\n      \r\n      label.textContent = data.dateLabel;\r\n      chartXAxis.appendChild(label);\r\n    });\r\n\r\n    this.updateSelectedBar();\r\n  }\r\n\r\n  isToday(date) {\r\n    const today = new Date();\r\n    return date.getDate() === today.getDate() && \r\n           date.getMonth() === today.getMonth() && \r\n           date.getFullYear() === today.getFullYear();\r\n  }\r\n\r\n  updateChart() {\r\n    this.loadChartData();\r\n  }\r\n\r\n  showLoading() {\r\n    const chartBars = document.getElementById('chart-bars');\r\n    if (chartBars) {\r\n      chartBars.innerHTML = '<div class=\"flex items-center justify-center h-56 md:h-72 w-full\"><div class=\"animate-spin rounded-full h-6 md:h-8 w-6 md:w-8 border-b-2 border-amber-800\"></div></div>';\r\n    }\r\n  }\r\n\r\n  showFoodLoading() {\r\n    const container = document.getElementById('history-food-container');\r\n    if (container) {\r\n      container.innerHTML = '<div class=\"flex items-center justify-center h-32 md:h-40 text-gray-500\"><div class=\"animate-spin rounded-full h-6 w-6 border-b-2 border-amber-800\"></div></div>';\r\n    }\r\n  }\r\n\r\n  hideLoading() {\r\n  }\r\n\r\n  showError(message) {\r\n    const chartBars = document.getElementById('chart-bars');\r\n    if (chartBars) {\r\n      chartBars.innerHTML = `<div class=\"flex items-center justify-center h-56 md:h-72 w-full text-red-600 text-sm\">${message}</div>`;\r\n    }\r\n  }\r\n\r\n  showFoodError(message) {\r\n    const container = document.getElementById('history-food-container');\r\n    if (container) {\r\n      container.innerHTML = `<div class=\"text-center text-gray-500 py-6 md:py-8 text-sm\">${message}</div>`;\r\n    }\r\n  }\r\n}\r\n\r\nexport default HistoryPresenter;"],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","delegateYield","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","toString","from","test","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","toPrimitive","String","Number","_toPrimitive","HistoryPresenter","view","_classCallCheck","this","currentYear","Date","getFullYear","chartData","foodHistory","selectedDate","initCurrentDateSettings","today","currentMonth","getMonth","currentWeek","calculateCurrentWeekInMonth","date","year","month","day","getDate","firstDayOfWeek","getDay","weekNumber","Math","ceil","min","_this","console","log","container","document","getElementById","monthDropdown","chartBars","foodContainer","setInitialMonthDropdown","bindEvents","updateActiveWeekButton","loadChartData","setTimeout","loadFoodHistory","formatDateForAPI","_this2","weekButtons","querySelectorAll","addEventListener","target","btn","parseInt","dataset","week","_this3","className","monthName","monthNum","getMonthNumber","firstDay","weekStart","setDate","dates","concat","padStart","_loadChartData","_callee","weekDates","_iterator","_step","dateStr","_dailyData$daily_log","dailyData","calories","_context","showLoading","getWeekDates","mealApiService","getDailyLog","daily_log","total_calories_consumed","dateLabel","formatDate","t0","t1","renderChart","t2","error","showError","hideLoading","_enrichMealEntries2","_callee2","mealEntries","enrichedEntries","_iterator2","_step2","meal","enrichedMeal","mealDetails","recipeData","caloriesPerServing","proteinPerServing","carbsPerServing","fatPerServing","_caloriesPerServing","_proteinPerServing","_carbsPerServing","_fatPerServing","_context2","_objectSpread","calories_consumed","protein","protein_consumed","carbs","carbs_consumed","fat","fat_consumed","is_from_recipe","is_from_search","recipe_id","getMealDetails","food_details","id","food_item_id","food_name","calories_per_serving","protein_per_serving","carbs_per_serving","fat_per_serving","serving_size","serving_unit","image_url","is_recipe","warn","round","servings","parseFloat","toFixed","_x","_loadFoodHistory","_callee3","logDate","targetDate","enrichedMealEntries","uniqueFoods","_args3","_context3","undefined","showFoodLoading","meal_entries","showFoodError","formatDisplayDate","_enrichMealEntries","Map","entry","index","foodItem","foodName","food_item","_foodItem","foodId","entryKey","meal_type","has","_foodItem2","totalCalories","imageUrl","breakfast","lunch","dinner","snack","foodData","entryId","image","set","renderFoodHistory","message","includes","isSameDate","yesterday","toLocaleDateString","weekday","date1","date2","dateData","updateSelectedBar","_this4","bar","barData","classList","add","isToday","remove","_this5","innerHTML","food","foodCard","createSmallFoodCard","appendChild","bindFoodCardEvents","cardElement","createElement","servingSize","servingUnit","_this6","button","event","preventDefault","stopPropagation","closest","querySelector","textContent","caloriesText","replace","recipeId","isFromRecipe","isFromSearch","showAddMealPopup","_this7","existingPopup","popupHTML","toISOString","split","body","insertAdjacentHTML","overlay","closeBtn","cancelBtn","addBtn","closePopup","parentNode","removeChild","_callee4","_document$getElementB","_document$getElementB2","_document$getElementB3","mealType","foodItemId","parts","_context4","alert","disabled","addMealFromSuggestion","log_date","startsWith","createMealEntry","_this8","chartXAxis","maxCalories","max","_toConsumableArray","map","chartHeight","window","innerWidth","data","barHeight","style","height","onBarClick","tooltip","label"],"sourceRoot":""}