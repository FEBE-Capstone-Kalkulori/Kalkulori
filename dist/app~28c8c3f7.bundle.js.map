{"version":3,"file":"app~28c8c3f7.bundle.js","mappings":"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","sources":["webpack://kalkulori/./src/scripts/pages/home/home-presenter.js"],"sourcesContent":["import HomeView from './home-view';\r\nimport mealApiService from '../../utils/meal-api-service';\r\nimport { \r\n  formatMealPlanData, \r\n  calculateTotalCalories, \r\n  getDefaultMealPlan \r\n} from './meal-plan';\r\nimport { \r\n  validateKeywords, \r\n  countSelectedKeywordsByCategory, \r\n  groupKeywordsByCategory,\r\n  findCategoryByKeyword \r\n} from './meal-categories.js';\r\n\r\nclass HomePresenter {\r\n  constructor({ container }) {\r\n    this.container = container;\r\n    this.lastFetchDate = null;\r\n    this.data = {\r\n      currentCalories: 0,\r\n      calorieLimit: 1500,\r\n      selectedKeywords: [],\r\n      dailyLog: null,\r\n      mealEntries: [],\r\n      loading: true,\r\n      error: null,\r\n      currentCategory: null,\r\n      mealPlan: {\r\n        plans: [],\r\n        totalCalories: 0,\r\n        targetCalories: 1500,\r\n        loading: false,\r\n        error: null\r\n      },\r\n      suggestedMeals: [\r\n        {\r\n          name: 'Chicken Soto',\r\n          image: './public/image/meals/chicken-soto.jpg',\r\n          calories: 312\r\n        },\r\n        {\r\n          name: 'Fried Noodles',\r\n          image: './public/image/meals/fried-noodles.jpg',\r\n          calories: 280\r\n        },\r\n        {\r\n          name: 'Meatballs Soup',\r\n          image: './public/image/meals/meatballs-soup.jpg',\r\n          calories: 283\r\n        },\r\n        {\r\n          name: 'Noodles Soup',\r\n          image: './public/image/meals/noodles-soup.jpg',\r\n          calories: 137\r\n        }\r\n      ],\r\n      mealSuggestions: {\r\n        loading: false,\r\n        error: null,\r\n        data: [],\r\n        isFromAPI: false\r\n      }\r\n    };\r\n    \r\n    this.eventHandlers = {\r\n      onAddMealClicked: this._handleAddMeal.bind(this),\r\n      onDeleteMealClicked: this._handleDeleteMeal.bind(this),\r\n      onCategoryClicked: this._handleCategoryClicked.bind(this),\r\n      onPopupClosed: this._handlePopupClosed.bind(this),\r\n      onFindMealsClicked: this._handleFindMeals.bind(this),\r\n      onClearAllClicked: this._handleClearAll.bind(this),\r\n      onKeywordRemoved: this._handleKeywordRemoved.bind(this),\r\n      onGenerateMealPlan: this._handleGenerateMealPlan.bind(this),\r\n      onMealPlanItemClicked: this._handleMealPlanItemClicked.bind(this),\r\n      onCompleteProfileClicked: this._handleCompleteProfile.bind(this),\r\n      onSuggestedMealClicked: this._handleSuggestedMealClicked.bind(this),\r\n      onSuggestedMealDetailsClicked: this._handleSuggestedMealDetailsClicked.bind(this)\r\n    };\r\n\r\n    this._bindCustomEvents();\r\n    this._startDayChangeMonitor();\r\n  }\r\n\r\n  async init() {\r\n    try {\r\n      window.mealApiService = mealApiService;\r\n      \r\n      this._checkAndResetForNewDay();\r\n      this._loadFromSessionStorage();\r\n      \r\n      this.data.loading = true;\r\n      this._renderView();\r\n      \r\n      await this._fetchDailyData();\r\n      await this._fetchMealPlan();\r\n    } catch (error) {\r\n      console.error('Failed to initialize Home page:', error);\r\n      this.data.error = 'Failed to load daily data';\r\n      this.data.loading = false;\r\n      this._renderView();\r\n    }\r\n  }\r\n\r\n  _startDayChangeMonitor() {\r\n    setInterval(() => {\r\n      this._checkAndResetForNewDay();\r\n    }, 60000);\r\n  }\r\n\r\n  _checkAndResetForNewDay() {\r\n    const today = this._getTodayString();\r\n    const lastDate = localStorage.getItem('lastAppDate');\r\n    \r\n    if (lastDate !== today) {\r\n      console.log('New day detected, resetting data');\r\n      \r\n      localStorage.setItem('lastAppDate', today);\r\n      sessionStorage.removeItem('mealSuggestions');\r\n      sessionStorage.removeItem('dailyLogs');\r\n      sessionStorage.removeItem('mealPlan');\r\n      \r\n      this.data.selectedKeywords = [];\r\n      this.data.mealSuggestions = {\r\n        loading: false,\r\n        error: null,\r\n        data: [],\r\n        isFromAPI: false\r\n      };\r\n      this.data.suggestedMeals = [\r\n        {\r\n          name: 'Chicken Soto',\r\n          image: './public/image/meals/chicken-soto.jpg',\r\n          calories: 312\r\n        },\r\n        {\r\n          name: 'Fried Noodles',\r\n          image: './public/image/meals/fried-noodles.jpg',\r\n          calories: 280\r\n        },\r\n        {\r\n          name: 'Meatballs Soup',\r\n          image: './public/image/meals/meatballs-soup.jpg',\r\n          calories: 283\r\n        },\r\n        {\r\n          name: 'Noodles Soup',\r\n          image: './public/image/meals/noodles-soup.jpg',\r\n          calories: 137\r\n        }\r\n      ];\r\n      \r\n      this.data.currentCalories = 0;\r\n      this.data.mealEntries = [];\r\n      this.data.dailyLog = null;\r\n      this.data.mealPlan = {\r\n        plans: [],\r\n        totalCalories: 0,\r\n        targetCalories: 1500,\r\n        loading: false,\r\n        error: null\r\n      };\r\n      this.lastFetchDate = null;\r\n      \r\n      if (this.container && this.container.innerHTML) {\r\n        this._fetchDailyData();\r\n        this._fetchMealPlan();\r\n      }\r\n    }\r\n  }\r\n\r\n  _getTodayString() {\r\n    const now = new Date();\r\n    const year = now.getFullYear();\r\n    const month = String(now.getMonth() + 1).padStart(2, '0');\r\n    const day = String(now.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n\r\n  _saveToSessionStorage() {\r\n    const today = this._getTodayString();\r\n    \r\n    const mealSuggestionsData = {\r\n      date: today,\r\n      selectedKeywords: this.data.selectedKeywords,\r\n      mealSuggestions: {\r\n        loading: false,\r\n        error: this.data.mealSuggestions.error,\r\n        data: this.data.mealSuggestions.data,\r\n        isFromAPI: this.data.mealSuggestions.isFromAPI\r\n      },\r\n      suggestedMeals: this.data.suggestedMeals\r\n    };\r\n    sessionStorage.setItem('mealSuggestions', JSON.stringify(mealSuggestionsData));\r\n\r\n    const dailyLogsData = {\r\n      date: today,\r\n      currentCalories: this.data.currentCalories,\r\n      calorieLimit: this.data.calorieLimit,\r\n      dailyLog: this.data.dailyLog,\r\n      mealEntries: this.data.mealEntries,\r\n      lastFetchDate: this.lastFetchDate\r\n    };\r\n    sessionStorage.setItem('dailyLogs', JSON.stringify(dailyLogsData));\r\n\r\n    const mealPlanData = {\r\n      date: today,\r\n      mealPlan: this.data.mealPlan\r\n    };\r\n    sessionStorage.setItem('mealPlan', JSON.stringify(mealPlanData));\r\n  }\r\n\r\n  _loadFromSessionStorage() {\r\n    const today = this._getTodayString();\r\n    \r\n    try {\r\n      const mealSuggestionsStored = sessionStorage.getItem('mealSuggestions');\r\n      if (mealSuggestionsStored) {\r\n        const sessionData = JSON.parse(mealSuggestionsStored);\r\n        if (sessionData.date === today) {\r\n          this.data.selectedKeywords = sessionData.selectedKeywords || [];\r\n          this.data.mealSuggestions = {\r\n            loading: false,\r\n            error: null,\r\n            data: sessionData.mealSuggestions?.data || [],\r\n            isFromAPI: sessionData.mealSuggestions?.isFromAPI || false\r\n          };\r\n          this.data.suggestedMeals = sessionData.suggestedMeals || this.data.suggestedMeals;\r\n          console.log('Restored meal suggestions from session storage');\r\n        } else {\r\n          sessionStorage.removeItem('mealSuggestions');\r\n        }\r\n      }\r\n\r\n      const dailyLogsStored = sessionStorage.getItem('dailyLogs');\r\n      if (dailyLogsStored) {\r\n        const dailyData = JSON.parse(dailyLogsStored);\r\n        if (dailyData.date === today) {\r\n          this.data.currentCalories = dailyData.currentCalories || 0;\r\n          this.data.calorieLimit = dailyData.calorieLimit || 1500;\r\n          this.data.dailyLog = dailyData.dailyLog;\r\n          this.data.mealEntries = dailyData.mealEntries || [];\r\n          this.lastFetchDate = dailyData.lastFetchDate;\r\n          console.log('Restored daily logs from session storage');\r\n        } else {\r\n          sessionStorage.removeItem('dailyLogs');\r\n        }\r\n      }\r\n\r\n      const mealPlanStored = sessionStorage.getItem('mealPlan');\r\n      if (mealPlanStored) {\r\n        const planData = JSON.parse(mealPlanStored);\r\n        if (planData.date === today && planData.mealPlan) {\r\n          this.data.mealPlan = planData.mealPlan;\r\n          console.log('Restored meal plan from session storage');\r\n        } else {\r\n          sessionStorage.removeItem('mealPlan');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading from session storage:', error);\r\n      sessionStorage.removeItem('mealSuggestions');\r\n      sessionStorage.removeItem('dailyLogs');\r\n      sessionStorage.removeItem('mealPlan');\r\n    }\r\n  }\r\n\r\n  async _fetchDailyData(forceRefresh = false) {\r\n    try {\r\n      const today = this._getTodayString();\r\n      \r\n      if (!forceRefresh && this.lastFetchDate === today && this.data.mealEntries.length > 0) {\r\n        this.data.loading = false;\r\n        this._renderView();\r\n        return;\r\n      }\r\n      \r\n      const dailyData = await mealApiService.getDailyLog(today);\r\n      \r\n      this.data.dailyLog = dailyData.daily_log;\r\n      \r\n      console.log('📊 Raw meal entries from API:', dailyData.meal_entries);\r\n      \r\n      this.data.mealEntries = await this._enrichMealEntries(dailyData.meal_entries || []);\r\n      \r\n      console.log('✨ Enriched meal entries:', this.data.mealEntries);\r\n      \r\n      this.data.currentCalories = dailyData.daily_log.total_calories_consumed || 0;\r\n      \r\n      if (dailyData.daily_log.remaining_calories !== undefined) {\r\n        this.data.calorieLimit = this.data.currentCalories + dailyData.daily_log.remaining_calories;\r\n      }\r\n      \r\n      this.lastFetchDate = today;\r\n      this._saveToSessionStorage();\r\n      \r\n    } catch (error) {\r\n      console.error('Error fetching daily data:', error);\r\n      this.data.error = 'Unable to load today\\'s data';\r\n      this.data.currentCalories = 0;\r\n      this.data.calorieLimit = 1500;\r\n      this.data.mealEntries = [];\r\n      this.data.dailyLog = null;\r\n    } finally {\r\n      this.data.loading = false;\r\n      this._renderView();\r\n    }\r\n  }\r\n\r\n  async _enrichMealEntries(mealEntries) {\r\n    const enrichedEntries = [];\r\n    \r\n    for (const meal of mealEntries) {\r\n      let enrichedMeal = { ...meal };\r\n      \r\n      const originalMealId = meal.id;\r\n      \r\n      if (!enrichedMeal.calories && enrichedMeal.calories_consumed) {\r\n        enrichedMeal.calories = enrichedMeal.calories_consumed;\r\n      }\r\n      if (!enrichedMeal.protein && enrichedMeal.protein_consumed) {\r\n        enrichedMeal.protein = enrichedMeal.protein_consumed;\r\n      }\r\n      if (!enrichedMeal.carbs && enrichedMeal.carbs_consumed) {\r\n        enrichedMeal.carbs = enrichedMeal.carbs_consumed;\r\n      }\r\n      if (!enrichedMeal.fat && enrichedMeal.fat_consumed) {\r\n        enrichedMeal.fat = enrichedMeal.fat_consumed;\r\n      }\r\n      \r\n      if ((meal.is_from_recipe || meal.is_from_search) && meal.recipe_id) {\r\n        try {\r\n          const mealDetails = await mealApiService.getMealDetails(meal.recipe_id);\r\n          if (mealDetails && mealDetails.meal) {\r\n            const recipeData = mealDetails.meal;\r\n            enrichedMeal.food_details = {\r\n              id: meal.is_from_search ? meal.food_item_id : `recipe_${meal.recipe_id}`,\r\n              food_name: recipeData.food_name || meal.food_name || (meal.is_from_search ? 'Search Result' : 'Recipe Meal'),\r\n              calories_per_serving: recipeData.calories_per_serving,\r\n              protein_per_serving: recipeData.protein_per_serving,\r\n              carbs_per_serving: recipeData.carbs_per_serving,\r\n              fat_per_serving: recipeData.fat_per_serving,\r\n              serving_size: recipeData.serving_size,\r\n              serving_unit: recipeData.serving_unit,\r\n              image_url: recipeData.image_url,\r\n              is_recipe: meal.is_from_recipe ? true : false,\r\n              is_from_search: meal.is_from_search ? true : false,\r\n              recipe_id: meal.recipe_id\r\n            };\r\n            console.log(`✅ Successfully enriched ${meal.is_from_search ? 'search' : 'recipe'} meal:`, enrichedMeal.food_details.food_name, 'with image:', enrichedMeal.food_details.image_url);\r\n          } else {\r\n            throw new Error('No meal details found');\r\n          }\r\n        } catch (error) {\r\n          console.warn(`Could not fetch ${meal.is_from_search ? 'search' : 'recipe'} meal details:`, error);\r\n          \r\n          const caloriesPerServing = Math.round((meal.calories || meal.calories_consumed || 0) / (meal.servings || 1));\r\n          const proteinPerServing = parseFloat(((meal.protein || meal.protein_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n          const carbsPerServing = parseFloat(((meal.carbs || meal.carbs_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n          const fatPerServing = parseFloat(((meal.fat || meal.fat_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n          \r\n          enrichedMeal.food_details = {\r\n            id: meal.food_item_id,\r\n            food_name: meal.food_name || (meal.is_from_search ? 'Search Result' : 'Recipe Meal'),\r\n            calories_per_serving: caloriesPerServing,\r\n            protein_per_serving: proteinPerServing,\r\n            carbs_per_serving: carbsPerServing,\r\n            fat_per_serving: fatPerServing,\r\n            serving_size: 1,\r\n            serving_unit: \"serving\",\r\n            image_url: null,\r\n            is_recipe: meal.is_from_recipe ? true : false,\r\n            is_from_search: meal.is_from_search ? true : false,\r\n            recipe_id: meal.recipe_id\r\n          };\r\n          console.log(`⚠️ Using fallback data for ${meal.is_from_search ? 'search' : 'recipe'} meal:`, enrichedMeal.food_details.food_name);\r\n        }\r\n      }\r\n      else if (meal.food_details) {\r\n        enrichedMeal.food_details = meal.food_details;\r\n      }\r\n      else {\r\n        const caloriesPerServing = Math.round((meal.calories || meal.calories_consumed || 0) / (meal.servings || 1));\r\n        const proteinPerServing = parseFloat(((meal.protein || meal.protein_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n        const carbsPerServing = parseFloat(((meal.carbs || meal.carbs_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n        const fatPerServing = parseFloat(((meal.fat || meal.fat_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n        \r\n        enrichedMeal.food_details = {\r\n          id: meal.food_item_id,\r\n          food_name: meal.food_name || 'Unknown Food',\r\n          calories_per_serving: caloriesPerServing,\r\n          protein_per_serving: proteinPerServing,\r\n          carbs_per_serving: carbsPerServing,\r\n          fat_per_serving: fatPerServing,\r\n          serving_size: 1,\r\n          serving_unit: \"serving\",\r\n          image_url: null\r\n        };\r\n      }\r\n      \r\n      enrichedMeal.id = originalMealId;\r\n      \r\n      enrichedMeal._debug_info = {\r\n        original_id: originalMealId,\r\n        user_id: meal.user_id,\r\n        is_from_recipe: meal.is_from_recipe,\r\n        is_from_search: meal.is_from_search,\r\n        recipe_id: meal.recipe_id,\r\n        food_item_id: meal.food_item_id\r\n      };\r\n      \r\n      enrichedEntries.push(enrichedMeal);\r\n    }\r\n    \r\n    return enrichedEntries;\r\n  }\r\n\r\n  async _fetchMealPlan(forceRefresh = false) {\r\n    try {\r\n      const today = this._getTodayString();\r\n      const hasCachedPlan = this.data.mealPlan.plans && this.data.mealPlan.plans.length > 0;\r\n      \r\n      if (!forceRefresh && hasCachedPlan) {\r\n        console.log('🍽️ Using cached meal plan');\r\n        return;\r\n      }\r\n\r\n      this.data.mealPlan.loading = true;\r\n      this.data.mealPlan.error = null;\r\n      this._renderView();\r\n\r\n      console.log('🍽️ Fetching meal plan...');\r\n      const mealPlanData = await mealApiService.generateMealPlan();\r\n      console.log('✅ Meal plan data received:', mealPlanData);\r\n      \r\n      const formattedPlans = formatMealPlanData(mealPlanData);\r\n      \r\n      if (!Array.isArray(formattedPlans) || formattedPlans.length === 0) {\r\n        console.error('❌ formatMealPlanData returned invalid data:', formattedPlans);\r\n        throw new Error('Failed to format meal plan data');\r\n      }\r\n      \r\n      this.data.mealPlan.plans = formattedPlans;\r\n      this.data.mealPlan.totalCalories = calculateTotalCalories(this.data.mealPlan.plans);\r\n      this.data.mealPlan.targetCalories = mealPlanData.user_info?.daily_calorie_target || 1500;\r\n      \r\n      this._saveToSessionStorage();\r\n      console.log('✅ Meal plan formatted successfully');\r\n      \r\n    } catch (error) {\r\n      console.error('💥 Error fetching meal plan:', error);\r\n      \r\n      let errorMessage = 'Unable to load meal plan';\r\n      \r\n      if (error.message.includes('Authentication') || error.message.includes('login')) {\r\n        errorMessage = 'Authentication required. Please login again.';\r\n      } else if (error.message.includes('Profile not found') || error.message.includes('404')) {\r\n        errorMessage = 'Please complete your profile first';\r\n      } else if (error.message.includes('Daily calorie target') || error.message.includes('400')) {\r\n        errorMessage = 'Please set your daily calorie target in profile';\r\n      } else if (error.message.includes('Server error') || error.message.includes('500')) {\r\n        errorMessage = 'Profile setup required. Please complete your profile.';\r\n      } else if (error.message.includes('503') || error.message.includes('ML service')) {\r\n        errorMessage = 'Meal plan service temporarily unavailable';\r\n      } else if (error.message.includes('504') || error.message.includes('timeout')) {\r\n        errorMessage = 'Request timeout. Please try again';\r\n      } else if (error.message.includes('connect') || error.message.includes('network') || error.message.includes('Network error')) {\r\n        errorMessage = 'Connection error. Please check your internet';\r\n      } else if (error.message.includes('No meal plans available') || error.message.includes('No meal plans generated')) {\r\n        errorMessage = 'No meal plans generated. Please try again.';\r\n      } else if (error.message.includes('Invalid')) {\r\n        errorMessage = 'Invalid data received. Please try again.';\r\n      }\r\n      \r\n      this.data.mealPlan.error = errorMessage;\r\n      \r\n      if (!error.message.includes('Authentication') && !error.message.includes('login')) {\r\n        this.data.mealPlan.plans = getDefaultMealPlan();\r\n        this.data.mealPlan.totalCalories = calculateTotalCalories(this.data.mealPlan.plans);\r\n        console.log('📋 Using default meal plan as fallback');\r\n      } else {\r\n        this.data.mealPlan.plans = [];\r\n        this.data.mealPlan.totalCalories = 0;\r\n      }\r\n      \r\n    } finally {\r\n      this.data.mealPlan.loading = false;\r\n      this._renderView();\r\n    }\r\n  }\r\n\r\n  _bindCustomEvents() {\r\n    document.addEventListener('keywordToggled', (event) => {\r\n      this._handleKeywordToggled(event.detail.keyword, event.detail.selected);\r\n    });\r\n\r\n    document.addEventListener('mealPlanMealAdded', () => {\r\n      console.log('🔄 Meal plan meal added, refreshing data...');\r\n      this._refreshDailyData();\r\n    });\r\n  }\r\n\r\n  async _refreshDailyData() {\r\n    try {\r\n      await this._fetchDailyData(true);\r\n    } catch (error) {\r\n      console.error('Error refreshing daily data:', error);\r\n    }\r\n  }\r\n\r\n  _renderView() {\r\n    HomeView.render(this.container, this.data);\r\n    HomeView.afterRender(this.eventHandlers);\r\n  }\r\n\r\n  _handleAddMeal() {\r\n    window.location.hash = '#/add-meal';\r\n  }\r\n\r\n  async _handleDeleteMeal(mealId) {\r\n    try {\r\n      this.data.loading = true;\r\n      this._renderView();\r\n      \r\n      await mealApiService.deleteMealEntry(mealId);\r\n      \r\n      await this._refreshDailyData();\r\n      \r\n    } catch (error) {\r\n      console.error('Delete failed:', error);\r\n      alert('Failed to delete meal. Please try again.');\r\n    } finally {\r\n      this.data.loading = false;\r\n      this._renderView();\r\n    }\r\n  }\r\n\r\n  _handleCategoryClicked(category) {\r\n    console.log(`Category clicked: ${category}`);\r\n    this.data.currentCategory = category;\r\n    \r\n    setTimeout(() => {\r\n      HomeView.showCategoryPopup(category, this.data.selectedKeywords);\r\n    }, 100);\r\n  }\r\n\r\n  _handlePopupClosed() {\r\n    console.log('Popup closed');\r\n    this.data.currentCategory = null;\r\n    HomeView.hideCategoryPopup();\r\n    this._renderView();\r\n  }\r\n\r\n  _handleKeywordToggled(keyword, selected) {\r\n    console.log(`Keyword ${keyword} ${selected ? 'selected' : 'deselected'}`);\r\n    \r\n    const validKeywords = validateKeywords([keyword]);\r\n    if (validKeywords.length === 0) {\r\n      console.warn(`Invalid keyword: ${keyword}`);\r\n      return;\r\n    }\r\n    \r\n    if (selected) {\r\n      if (this.data.selectedKeywords.length >= 6) {\r\n        alert('Maximum 6 keywords allowed! Please remove some keywords first.');\r\n        setTimeout(() => {\r\n          const keywordElement = document.querySelector(`[data-keyword=\"${keyword}\"]`);\r\n          if (keywordElement) {\r\n            keywordElement.classList.remove('selected');\r\n          }\r\n        }, 100);\r\n        return;\r\n      }\r\n      \r\n      if (!this.data.selectedKeywords.includes(keyword)) {\r\n        this.data.selectedKeywords.push(keyword);\r\n      }\r\n    } else {\r\n      this.data.selectedKeywords = this.data.selectedKeywords.filter(k => k !== keyword);\r\n    }\r\n    \r\n    this._saveToSessionStorage();\r\n    \r\n    const categoryCounts = countSelectedKeywordsByCategory(this.data.selectedKeywords);\r\n    console.log('Selected keywords by category:', categoryCounts);\r\n    console.log('Total selected keywords:', this.data.selectedKeywords);\r\n  }\r\n\r\n  async _handleFindMeals() {\r\n    console.log('Finding meals with keywords:', this.data.selectedKeywords);\r\n    \r\n    if (this.data.selectedKeywords.length === 0) {\r\n      alert('Please select some preferences first!');\r\n      return;\r\n    }\r\n\r\n    if (this.data.selectedKeywords.length > 6) {\r\n      alert('Maximum 6 keywords allowed! Please remove some keywords first.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.data.mealSuggestions.loading = true;\r\n      this.data.mealSuggestions.error = null;\r\n      this.data.mealSuggestions.isFromAPI = true;\r\n      this._renderView();\r\n\r\n      console.log('🔍 Fetching meal suggestions from API...');\r\n      console.log('Keywords:', this.data.selectedKeywords);\r\n\r\n      const suggestionsData = await mealApiService.getMealSuggestions(this.data.selectedKeywords);\r\n      console.log('✅ Meal suggestions received:', suggestionsData);\r\n\r\n      if (suggestionsData && suggestionsData.suggestions && suggestionsData.suggestions.length > 0) {\r\n        const formattedSuggestions = suggestionsData.suggestions.map(suggestion => ({\r\n          id: suggestion.recipe_id,\r\n          name: suggestion.name,\r\n          calories: suggestion.calories,\r\n          image: suggestion.image_url || 'https://images.unsplash.com/photo-1546554137-f86b9593a222?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80',\r\n          serving_size: suggestion.serving_size || 1,\r\n          serving_unit: suggestion.serving_unit || 'serving',\r\n          protein: suggestion.protein,\r\n          carbohydrate: suggestion.carbohydrate,\r\n          fat: suggestion.fat\r\n        }));\r\n\r\n        this.data.mealSuggestions.data = formattedSuggestions;\r\n        this.data.suggestedMeals = formattedSuggestions.slice(0, 8);\r\n        this.data.mealSuggestions.loading = false;\r\n        this.data.mealSuggestions.error = null;\r\n        this.data.mealSuggestions.isFromAPI = true;\r\n        \r\n        this._saveToSessionStorage();\r\n        \r\n        console.log('✅ Meal suggestions formatted successfully');\r\n        console.log('Total suggestions:', formattedSuggestions.length);\r\n        \r\n        alert(`Found ${formattedSuggestions.length} meal suggestions based on your preferences!`);\r\n      } else {\r\n        console.log('⚠️ No suggestions found, using fallback');\r\n        this._useFallbackSuggestions();\r\n        alert('No specific suggestions found for your keywords. Showing general recommendations.');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('💥 Error fetching meal suggestions:', error);\r\n      \r\n      let errorMessage = 'Failed to get meal suggestions';\r\n      \r\n      if (error.message.includes('Profile not found') || error.message.includes('404')) {\r\n        errorMessage = 'Please complete your profile first to get personalized suggestions.';\r\n      } else if (error.message.includes('Daily calorie target') || error.message.includes('400')) {\r\n        errorMessage = 'Please set your daily calorie target in profile to get suggestions.';\r\n      } else if (error.message.includes('503') || error.message.includes('service')) {\r\n        errorMessage = 'Meal suggestion service is temporarily unavailable. Using default suggestions.';\r\n      } else if (error.message.includes('504') || error.message.includes('timeout')) {\r\n        errorMessage = 'Request timeout. Using default suggestions.';\r\n      } else if (error.message.includes('Network error')) {\r\n        errorMessage = 'Network error. Please check your connection.';\r\n      }\r\n      \r\n      this.data.mealSuggestions.error = errorMessage;\r\n      this._useFallbackSuggestions();\r\n      alert(errorMessage);\r\n      \r\n    } finally {\r\n      this.data.mealSuggestions.loading = false;\r\n      this._saveToSessionStorage();\r\n      this._renderView();\r\n    }\r\n  }\r\n\r\n  _useFallbackSuggestions() {\r\n    this.data.mealSuggestions.data = [\r\n      {\r\n        id: \"default_1\",\r\n        name: 'Chicken Soto',\r\n        image: './public/image/meals/chicken-soto.jpg',\r\n        calories: 312,\r\n        serving_size: 1,\r\n        serving_unit: 'serving'\r\n      },\r\n      {\r\n        id: \"default_2\",\r\n        name: 'Fried Noodles',\r\n        image: './public/image/meals/fried-noodles.jpg',\r\n        calories: 280,\r\n        serving_size: 1,\r\n        serving_unit: 'serving'\r\n      },\r\n      {\r\n        id: \"default_3\",\r\n        name: 'Meatballs Soup',\r\n        image: './public/image/meals/meatballs-soup.jpg',\r\n        calories: 283,\r\n        serving_size: 1,\r\n        serving_unit: 'serving'\r\n      },\r\n      {\r\n        id: \"default_4\",\r\n        name: 'Noodles Soup',\r\n        image: './public/image/meals/noodles-soup.jpg',\r\n        calories: 137,\r\n        serving_size: 1,\r\n        serving_unit: 'serving'\r\n      }\r\n    ];\r\n    \r\n    this.data.suggestedMeals = this.data.mealSuggestions.data;\r\n    this.data.mealSuggestions.loading = false;\r\n    this.data.mealSuggestions.error = null;\r\n    this.data.mealSuggestions.isFromAPI = false;\r\n    this._saveToSessionStorage();\r\n  }\r\n\r\n  _handleClearAll() {\r\n    console.log('Clearing all selected keywords');\r\n    this.data.selectedKeywords = [];\r\n    \r\n    this._useFallbackSuggestions();\r\n    this.data.mealSuggestions.loading = false;\r\n    this.data.mealSuggestions.error = null;\r\n    this.data.mealSuggestions.isFromAPI = false;\r\n    \r\n    this._saveToSessionStorage();\r\n    this._renderView();\r\n  }\r\n\r\n  _handleKeywordRemoved(keyword) {\r\n    console.log(`Removing keyword: ${keyword}`);\r\n    this.data.selectedKeywords = this.data.selectedKeywords.filter(k => k !== keyword);\r\n    \r\n    this._saveToSessionStorage();\r\n    \r\n    const categoryCounts = countSelectedKeywordsByCategory(this.data.selectedKeywords);\r\n    console.log('Updated keywords by category:', categoryCounts);\r\n    \r\n    this._renderView();\r\n  }\r\n\r\n  async _handleGenerateMealPlan() {\r\n    await this._fetchMealPlan(true);\r\n  }\r\n\r\n  _handleMealPlanItemClicked(mealData) {\r\n    console.log('Meal plan item clicked:', mealData);\r\n    \r\n    if (window.FoodCard && window.FoodCard.showAddMealPopup) {\r\n      window.FoodCard.showAddMealPopup({\r\n        id: mealData.id,\r\n        name: mealData.name,\r\n        calories: mealData.calories,\r\n        serving_size: mealData.serving_size,\r\n        serving_unit: mealData.serving_unit\r\n      });\r\n    }\r\n  }\r\n\r\n  _handleCompleteProfile() {\r\n    console.log('Complete profile clicked');\r\n    window.location.hash = '#/profile';\r\n  }\r\n\r\n  _handleSuggestedMealClicked(mealData) {\r\n    console.log('Suggested meal clicked for adding:', mealData);\r\n    \r\n    this._showSuggestionMealPopup({\r\n      id: mealData.id,\r\n      name: mealData.name,\r\n      calories: mealData.calories,\r\n      serving_size: mealData.serving_size || 1,\r\n      serving_unit: mealData.serving_unit || 'serving'\r\n    });\r\n  }\r\n\r\n  _showSuggestionMealPopup(foodData) {\r\n    console.log('Showing suggestion meal popup for:', foodData);\r\n    \r\n    const existingPopup = document.getElementById('suggestion-meal-popup-overlay');\r\n    if (existingPopup) {\r\n      existingPopup.remove();\r\n    }\r\n    \r\n    const popupHTML = `\r\n      <div class=\"meal-popup-overlay\" id=\"suggestion-meal-popup-overlay\">\r\n        <div class=\"meal-popup\">\r\n          <div class=\"meal-popup-header\">\r\n            <h3>Add ${foodData.name}</h3>\r\n            <button class=\"popup-close\" id=\"suggestion-popup-close\">&times;</button>\r\n          </div>\r\n          <div class=\"meal-popup-content\">\r\n            <div class=\"form-group\">\r\n              <label for=\"suggestion-meal-type\">Meal Type:</label>\r\n              <select id=\"suggestion-meal-type\" required>\r\n                <option value=\"\">Select meal type</option>\r\n                <option value=\"breakfast\">Breakfast</option>\r\n                <option value=\"lunch\">Lunch</option>\r\n                <option value=\"dinner\">Dinner</option>\r\n                <option value=\"snack\">Snack</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"suggestion-servings\">Servings:</label>\r\n              <input type=\"number\" id=\"suggestion-servings\" min=\"1\" step=\"1\" value=\"1\" required>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"suggestion-log-date\">Date:</label>\r\n              <input type=\"date\" id=\"suggestion-log-date\" value=\"${this._getTodayString()}\" required>\r\n            </div>\r\n            <div class=\"form-actions\">\r\n              <button class=\"btn-cancel\" id=\"suggestion-btn-cancel\">Cancel</button>\r\n              <button class=\"btn-add\" id=\"suggestion-btn-add\">Add</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n    \r\n    document.body.insertAdjacentHTML('beforeend', popupHTML);\r\n    \r\n    const overlay = document.getElementById('suggestion-meal-popup-overlay');\r\n    const closeBtn = document.getElementById('suggestion-popup-close');\r\n    const cancelBtn = document.getElementById('suggestion-btn-cancel');\r\n    const addBtn = document.getElementById('suggestion-btn-add');\r\n    \r\n    function closePopup() {\r\n      if (overlay && overlay.parentNode) {\r\n        overlay.parentNode.removeChild(overlay);\r\n      }\r\n    }\r\n    \r\n    if (closeBtn) {\r\n      closeBtn.addEventListener('click', closePopup);\r\n    }\r\n    \r\n    if (cancelBtn) {\r\n      cancelBtn.addEventListener('click', closePopup);\r\n    }\r\n    \r\n    if (overlay) {\r\n      overlay.addEventListener('click', function(e) {\r\n        if (e.target === overlay) closePopup();\r\n      });\r\n    }\r\n    \r\n    if (addBtn) {\r\n      addBtn.addEventListener('click', async () => {\r\n        const mealType = document.getElementById('suggestion-meal-type')?.value;\r\n        const servings = parseFloat(document.getElementById('suggestion-servings')?.value);\r\n        const logDate = document.getElementById('suggestion-log-date')?.value;\r\n        \r\n        if (!mealType || !servings || !logDate) {\r\n          alert('Please fill all fields');\r\n          return;\r\n        }\r\n        \r\n        try {\r\n          addBtn.disabled = true;\r\n          addBtn.textContent = 'Adding...';\r\n          \r\n          if (foodData.id && !foodData.id.startsWith('default_')) {\r\n            const mealEntryData = {\r\n              recipe_id: foodData.id,\r\n              meal_type: mealType,\r\n              servings: servings,\r\n              log_date: logDate\r\n            };\r\n            \r\n            await mealApiService.addMealFromSuggestion(mealEntryData);\r\n            \r\n            alert('Meal added successfully!');\r\n            closePopup();\r\n            \r\n            await this._refreshDailyData();\r\n            \r\n          } else {\r\n            console.log(`Demo: Added ${foodData.name} - ${mealType} - ${servings} servings on ${logDate}`);\r\n            alert('This is a default meal. Please select suggestions from \"Find Meals\" for full functionality.');\r\n            closePopup();\r\n          }\r\n        } catch (error) {\r\n          console.error('Error adding meal from suggestion:', error);\r\n          alert('Failed to add meal. Please try again.');\r\n          addBtn.disabled = false;\r\n          addBtn.textContent = 'Add';\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async _handleSuggestedMealDetailsClicked(mealData) {\r\n    console.log('Suggested meal details clicked:', mealData);\r\n    \r\n    if (!mealData.id || mealData.id.startsWith('default_')) {\r\n      this._showMealDetailsPopup({\r\n        name: mealData.name,\r\n        calories: mealData.calories,\r\n        image: mealData.image,\r\n        serving_size: mealData.serving_size || 1,\r\n        serving_unit: mealData.serving_unit || 'serving',\r\n        protein: mealData.protein || 0,\r\n        carbohydrate: mealData.carbohydrate || 0,\r\n        fat: mealData.fat || 0,\r\n        isDefault: true\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('🔍 Fetching meal details from API...');\r\n      \r\n      this._showMealDetailsPopup({\r\n        name: mealData.name,\r\n        loading: true\r\n      });\r\n\r\n      const mealDetails = await mealApiService.getMealDetails(mealData.id);\r\n      console.log('✅ Meal details received:', mealDetails);\r\n\r\n      if (mealDetails && mealDetails.meal) {\r\n        const meal = mealDetails.meal;\r\n        this._showMealDetailsPopup({\r\n          name: meal.food_name,\r\n          calories: meal.calories_per_serving,\r\n          image: meal.image_url,\r\n          serving_size: meal.serving_size,\r\n          serving_unit: meal.serving_unit,\r\n          protein: meal.protein_per_serving,\r\n          carbohydrate: meal.carbs_per_serving,\r\n          fat: meal.fat_per_serving,\r\n          cookTime: meal.recipe_metadata?.cook_time,\r\n          prepTime: meal.recipe_metadata?.prep_time,\r\n          totalTime: meal.recipe_metadata?.total_time,\r\n          ingredients: meal.recipe_metadata?.ingredients,\r\n          nutrition: meal.recipe_metadata?.total_nutrition,\r\n          isDefault: false\r\n        });\r\n      } else {\r\n        throw new Error('No meal details found');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('💥 Error fetching meal details:', error);\r\n      \r\n      this._showMealDetailsPopup({\r\n        name: mealData.name,\r\n        error: 'Failed to load meal details. Please try again.',\r\n        calories: mealData.calories,\r\n        image: mealData.image\r\n      });\r\n    }\r\n  }\r\n\r\n  _showMealDetailsPopup(mealDetails) {\r\n    const existingPopup = document.getElementById('meal-details-popup-overlay');\r\n    if (existingPopup) {\r\n      existingPopup.remove();\r\n    }\r\n\r\n    let popupContent = '';\r\n    \r\n    if (mealDetails.loading) {\r\n      popupContent = `\r\n        <div class=\"meal-details-loading\">\r\n          <div class=\"loading-spinner\"></div>\r\n          <p>Loading meal details...</p>\r\n        </div>\r\n      `;\r\n    } else if (mealDetails.error) {\r\n      popupContent = `\r\n        <div class=\"meal-details-error\">\r\n          <h4>Error</h4>\r\n          <p>${mealDetails.error}</p>\r\n          <div class=\"basic-meal-info\">\r\n            <img src=\"${mealDetails.image || 'https://images.unsplash.com/photo-1546554137-f86b9593a222'}\" alt=\"${mealDetails.name}\">\r\n            <h3>${mealDetails.name}</h3>\r\n            <p>${mealDetails.calories || 0} kcal per serving</p>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else {\r\n      popupContent = `\r\n        <div class=\"meal-details-content\">\r\n          <div class=\"meal-details-header\">\r\n            <img src=\"${mealDetails.image || 'https://images.unsplash.com/photo-1546554137-f86b9593a222'}\" alt=\"${mealDetails.name}\">\r\n            <div class=\"meal-basic-info\">\r\n              <h3>${mealDetails.name}</h3>\r\n              <p class=\"meal-calories\">${mealDetails.calories} kcal per ${mealDetails.serving_unit || 'serving'}</p>\r\n              ${mealDetails.totalTime ? `<p class=\"meal-time\">⏱️ ${mealDetails.totalTime} minutes</p>` : ''}\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"meal-nutrition\">\r\n            <h4>Nutrition per serving:</h4>\r\n            <div class=\"nutrition-grid\">\r\n              <div class=\"nutrition-item\">\r\n                <span class=\"nutrition-label\">Protein</span>\r\n                <span class=\"nutrition-value\">${Math.round(mealDetails.protein || 0)}g</span>\r\n              </div>\r\n              <div class=\"nutrition-item\">\r\n                <span class=\"nutrition-label\">Carbs</span>\r\n                <span class=\"nutrition-value\">${Math.round(mealDetails.carbohydrate || 0)}g</span>\r\n              </div>\r\n              <div class=\"nutrition-item\">\r\n                <span class=\"nutrition-label\">Fat</span>\r\n                <span class=\"nutrition-value\">${Math.round(mealDetails.fat || 0)}g</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          ${mealDetails.ingredients && mealDetails.ingredients.length > 0 ? `\r\n            <div class=\"meal-ingredients\">\r\n              <h4>Ingredients:</h4>\r\n              <ul>\r\n                ${mealDetails.ingredients.slice(0, 10).map(ingredient => `<li>${ingredient}</li>`).join('')}\r\n                ${mealDetails.ingredients.length > 10 ? `<li><em>... and ${mealDetails.ingredients.length - 10} more ingredients</em></li>` : ''}\r\n              </ul>\r\n            </div>\r\n          ` : ''}\r\n\r\n          ${mealDetails.nutrition ? `\r\n            <div class=\"detailed-nutrition\">\r\n              <h4>Detailed Nutrition:</h4>\r\n              <div class=\"nutrition-details-grid\">\r\n                ${mealDetails.nutrition.fiber ? `<div>Fiber: ${Math.round(mealDetails.nutrition.fiber)}g</div>` : ''}\r\n                ${mealDetails.nutrition.sugar ? `<div>Sugar: ${Math.round(mealDetails.nutrition.sugar)}g</div>` : ''}\r\n                ${mealDetails.nutrition.sodium ? `<div>Sodium: ${Math.round(mealDetails.nutrition.sodium)}mg</div>` : ''}\r\n                ${mealDetails.nutrition.cholesterol ? `<div>Cholesterol: ${Math.round(mealDetails.nutrition.cholesterol)}mg</div>` : ''}\r\n              </div>\r\n            </div>\r\n          ` : ''}\r\n        </div>\r\n      `;\r\n    }\r\n\r\n    const popupHTML = `\r\n      <div class=\"meal-details-popup-overlay\" id=\"meal-details-popup-overlay\">\r\n        <div class=\"meal-details-popup\">\r\n          <div class=\"meal-details-popup-header\">\r\n            <h2>Meal Details</h2>\r\n            <button class=\"popup-close\" id=\"meal-details-close\">&times;</button>\r\n          </div>\r\n          <div class=\"meal-details-popup-body\">\r\n            ${popupContent}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    document.body.insertAdjacentHTML('beforeend', popupHTML);\r\n\r\n    const overlay = document.getElementById('meal-details-popup-overlay');\r\n    const closeBtn = document.getElementById('meal-details-close');\r\n\r\n    const closePopup = () => {\r\n      if (overlay && overlay.parentNode) {\r\n        overlay.parentNode.removeChild(overlay);\r\n      }\r\n    };\r\n\r\n    if (closeBtn) {\r\n      closeBtn.addEventListener('click', closePopup);\r\n    }\r\n\r\n    if (overlay) {\r\n      overlay.addEventListener('click', (e) => {\r\n        if (e.target === overlay) closePopup();\r\n      });\r\n    }\r\n\r\n    const handleEscape = (e) => {\r\n      if (e.key === 'Escape') {\r\n        closePopup();\r\n        document.removeEventListener('keydown', handleEscape);\r\n      }\r\n    };\r\n    document.addEventListener('keydown', handleEscape);\r\n  }\r\n}\r\n\r\nexport default HomePresenter;"],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","toPrimitive","String","Number","_toPrimitive","HomePresenter","_ref","container","_classCallCheck","this","lastFetchDate","data","currentCalories","calorieLimit","selectedKeywords","dailyLog","mealEntries","loading","error","currentCategory","mealPlan","plans","totalCalories","targetCalories","suggestedMeals","image","calories","mealSuggestions","isFromAPI","eventHandlers","onAddMealClicked","_handleAddMeal","bind","onDeleteMealClicked","_handleDeleteMeal","onCategoryClicked","_handleCategoryClicked","onPopupClosed","_handlePopupClosed","onFindMealsClicked","_handleFindMeals","onClearAllClicked","_handleClearAll","onKeywordRemoved","_handleKeywordRemoved","onGenerateMealPlan","_handleGenerateMealPlan","onMealPlanItemClicked","_handleMealPlanItemClicked","onCompleteProfileClicked","_handleCompleteProfile","onSuggestedMealClicked","_handleSuggestedMealClicked","onSuggestedMealDetailsClicked","_handleSuggestedMealDetailsClicked","_bindCustomEvents","_startDayChangeMonitor","_init","_callee","_context","window","mealApiService","_checkAndResetForNewDay","_loadFromSessionStorage","_renderView","_fetchDailyData","_fetchMealPlan","t0","console","_this","setInterval","today","_getTodayString","localStorage","getItem","log","setItem","sessionStorage","removeItem","innerHTML","now","Date","year","getFullYear","month","getMonth","padStart","day","getDate","concat","mealSuggestionsData","date","JSON","stringify","dailyLogsData","mealPlanData","mealSuggestionsStored","_sessionData$mealSugg","_sessionData$mealSugg2","sessionData","parse","dailyLogsStored","dailyData","mealPlanStored","planData","_fetchDailyData2","_callee2","forceRefresh","_args2","_context2","undefined","getDailyLog","daily_log","meal_entries","_enrichMealEntries","total_calories_consumed","remaining_calories","_saveToSessionStorage","_enrichMealEntries2","_callee3","enrichedEntries","_iterator","_step","meal","enrichedMeal","originalMealId","mealDetails","recipeData","caloriesPerServing","proteinPerServing","carbsPerServing","fatPerServing","_caloriesPerServing","_proteinPerServing","_carbsPerServing","_fatPerServing","_context3","_createForOfIteratorHelper","_objectSpread","id","calories_consumed","protein","protein_consumed","carbs","carbs_consumed","fat","fat_consumed","is_from_recipe","is_from_search","recipe_id","getMealDetails","food_details","food_item_id","food_name","calories_per_serving","protein_per_serving","carbs_per_serving","fat_per_serving","serving_size","serving_unit","image_url","is_recipe","warn","Math","round","servings","parseFloat","toFixed","_debug_info","original_id","user_id","t1","_x","_fetchMealPlan2","_callee4","_mealPlanData$user_in","hasCachedPlan","formattedPlans","errorMessage","_args4","_context4","generateMealPlan","formatMealPlanData","Array","isArray","calculateTotalCalories","user_info","daily_calorie_target","message","includes","getDefaultMealPlan","_this2","document","addEventListener","event","_handleKeywordToggled","detail","keyword","selected","_refreshDailyData","_refreshDailyData2","_callee5","_context5","HomeView","render","afterRender","location","hash","_handleDeleteMeal2","_callee6","mealId","_context6","deleteMealEntry","alert","_x2","category","_this3","setTimeout","showCategoryPopup","hideCategoryPopup","validateKeywords","keywordElement","querySelector","classList","remove","filter","k","categoryCounts","countSelectedKeywordsByCategory","_handleFindMeals2","_callee7","suggestionsData","formattedSuggestions","_context7","getMealSuggestions","suggestions","map","suggestion","carbohydrate","_useFallbackSuggestions","_handleGenerateMealPlan2","_callee8","_context8","mealData","FoodCard","showAddMealPopup","_showSuggestionMealPopup","foodData","_this4","existingPopup","getElementById","popupHTML","body","insertAdjacentHTML","overlay","closeBtn","cancelBtn","addBtn","closePopup","parentNode","removeChild","target","_callee9","_document$getElementB","_document$getElementB2","_document$getElementB3","mealType","logDate","mealEntryData","_context9","disabled","textContent","startsWith","meal_type","log_date","addMealFromSuggestion","_handleSuggestedMealDetailsClicked2","_callee0","_meal$recipe_metadata","_meal$recipe_metadata2","_meal$recipe_metadata3","_meal$recipe_metadata4","_meal$recipe_metadata5","_context0","_showMealDetailsPopup","isDefault","cookTime","recipe_metadata","cook_time","prepTime","prep_time","totalTime","total_time","ingredients","nutrition","total_nutrition","_x3","popupContent","ingredient","join","fiber","sugar","sodium","cholesterol","handleEscape","removeEventListener"],"sourceRoot":""}