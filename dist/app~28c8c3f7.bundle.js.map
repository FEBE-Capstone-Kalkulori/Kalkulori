{"version":3,"file":"app~28c8c3f7.bundle.js","mappings":"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","sources":["webpack://kalkulori/./src/scripts/pages/home/home-presenter.js"],"sourcesContent":["import HomeView from './home-view';\r\nimport mealApiService from '../../utils/meal-api-service';\r\nimport { \r\n  formatMealPlanData, \r\n  calculateTotalCalories, \r\n  getDefaultMealPlan \r\n} from './meal-plan';\r\nimport { \r\n  validateKeywords, \r\n  countSelectedKeywordsByCategory, \r\n  groupKeywordsByCategory,\r\n  findCategoryByKeyword \r\n} from './meal-categories.js';\r\n\r\nclass HomePresenter {\r\n  constructor({ container }) {\r\n    this.container = container;\r\n    this.lastFetchDate = null;\r\n    this.data = {\r\n      currentCalories: 0,\r\n      calorieLimit: null,\r\n      selectedKeywords: [],\r\n      dailyLog: null,\r\n      mealEntries: [],\r\n      loading: true,\r\n      error: null,\r\n      currentCategory: null,\r\n      mealPlan: {\r\n        plans: [],\r\n        totalCalories: 0,\r\n        targetCalories: null,\r\n        loading: false,\r\n        error: null\r\n      },\r\n      suggestedMeals: [\r\n        {\r\n          name: 'Chicken Soto',\r\n          image: './public/image/meals/chicken-soto.jpg',\r\n          calories: 312\r\n        },\r\n        {\r\n          name: 'Fried Noodles',\r\n          image: './public/image/meals/fried-noodles.jpg',\r\n          calories: 280\r\n        },\r\n        {\r\n          name: 'Meatballs Soup',\r\n          image: './public/image/meals/meatballs-soup.jpg',\r\n          calories: 283\r\n        },\r\n        {\r\n          name: 'Noodles Soup',\r\n          image: './public/image/meals/noodles-soup.jpg',\r\n          calories: 137\r\n        }\r\n      ],\r\n      mealSuggestions: {\r\n        loading: false,\r\n        error: null,\r\n        data: [],\r\n        isFromAPI: false\r\n      }\r\n    };\r\n    \r\n    this.eventHandlers = {\r\n      onAddMealClicked: this._handleAddMeal.bind(this),\r\n      onDeleteMealClicked: this._handleDeleteMeal.bind(this),\r\n      onCategoryClicked: this._handleCategoryClicked.bind(this),\r\n      onPopupClosed: this._handlePopupClosed.bind(this),\r\n      onFindMealsClicked: this._handleFindMeals.bind(this),\r\n      onClearAllClicked: this._handleClearAll.bind(this),\r\n      onKeywordRemoved: this._handleKeywordRemoved.bind(this),\r\n      onGenerateMealPlan: this._handleGenerateMealPlan.bind(this),\r\n      onMealPlanItemClicked: this._handleMealPlanItemClicked.bind(this),\r\n      onCompleteProfileClicked: this._handleCompleteProfile.bind(this),\r\n      onSuggestedMealClicked: this._handleSuggestedMealClicked.bind(this),\r\n      onSuggestedMealDetailsClicked: this._handleSuggestedMealDetailsClicked.bind(this)\r\n    };\r\n\r\n    this._bindCustomEvents();\r\n    this._startDayChangeMonitor();\r\n  }\r\n\r\n  async init() {\r\n    try {\r\n      window.mealApiService = mealApiService;\r\n      \r\n      this._checkAndResetForNewDay();\r\n      \r\n      this.data.loading = true;\r\n      this._renderView();\r\n      \r\n      console.log('🚀 Starting app initialization...');\r\n      \r\n      await this._fetchUserProfile();\r\n      \r\n      console.log('✅ Profile fetch complete, calorieLimit:', this.data.calorieLimit);\r\n      \r\n      this._loadFromSessionStorage();\r\n      \r\n      await this._fetchDailyData();\r\n      await this._fetchMealPlan();\r\n    } catch (error) {\r\n      console.error('Failed to initialize Home page:', error);\r\n      this.data.error = 'Failed to load daily data';\r\n      this.data.loading = false;\r\n      this._renderView();\r\n    }\r\n  }\r\n\r\n  _getCurrentUserId() {\r\n    return localStorage.getItem('userId') || 'anonymous';\r\n  }\r\n\r\n  _startDayChangeMonitor() {\r\n    setInterval(() => {\r\n      this._checkAndResetForNewDay();\r\n    }, 60000);\r\n  }\r\n\r\n  _checkAndResetForNewDay() {\r\n    const today = this._getTodayString();\r\n    const userId = this._getCurrentUserId();\r\n    const lastDateKey = `lastAppDate_${userId}`;\r\n    const lastDate = localStorage.getItem(lastDateKey);\r\n    \r\n    if (lastDate !== today) {\r\n      console.log('New day detected, resetting data for user:', userId);\r\n      \r\n      localStorage.setItem(lastDateKey, today);\r\n      \r\n      const keysToRemove = [\r\n        `mealSuggestions_${userId}`,\r\n        `dailyLogs_${userId}`,\r\n        `mealPlan_${userId}`\r\n      ];\r\n      \r\n      keysToRemove.forEach(key => {\r\n        sessionStorage.removeItem(key);\r\n      });\r\n      \r\n      this.data.selectedKeywords = [];\r\n      this.data.mealSuggestions = {\r\n        loading: false,\r\n        error: null,\r\n        data: [],\r\n        isFromAPI: false\r\n      };\r\n      this.data.suggestedMeals = [\r\n        {\r\n          name: 'Chicken Soto',\r\n          image: './public/image/meals/chicken-soto.jpg',\r\n          calories: 312\r\n        },\r\n        {\r\n          name: 'Fried Noodles',\r\n          image: './public/image/meals/fried-noodles.jpg',\r\n          calories: 280\r\n        },\r\n        {\r\n          name: 'Meatballs Soup',\r\n          image: './public/image/meals/meatballs-soup.jpg',\r\n          calories: 283\r\n        },\r\n        {\r\n          name: 'Noodles Soup',\r\n          image: './public/image/meals/noodles-soup.jpg',\r\n          calories: 137\r\n        }\r\n      ];\r\n      \r\n      this.data.currentCalories = 0;\r\n      this.data.mealEntries = [];\r\n      this.data.dailyLog = null;\r\n      this.data.mealPlan = {\r\n        plans: [],\r\n        totalCalories: 0,\r\n        targetCalories: 2000,\r\n        loading: false,\r\n        error: null\r\n      };\r\n      this.lastFetchDate = null;\r\n      \r\n      if (this.container && this.container.innerHTML) {\r\n        this._fetchUserProfile();\r\n        this._fetchDailyData();\r\n        this._fetchMealPlan();\r\n      }\r\n    }\r\n  }\r\n\r\n  _getTodayString() {\r\n    const now = new Date();\r\n    const year = now.getFullYear();\r\n    const month = String(now.getMonth() + 1).padStart(2, '0');\r\n    const day = String(now.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n\r\n  _saveToSessionStorage() {\r\n    const today = this._getTodayString();\r\n    const userId = this._getCurrentUserId();\r\n    \r\n    const mealSuggestionsData = {\r\n      date: today,\r\n      userId: userId,\r\n      selectedKeywords: this.data.selectedKeywords,\r\n      mealSuggestions: {\r\n        loading: false,\r\n        error: this.data.mealSuggestions.error,\r\n        data: this.data.mealSuggestions.data,\r\n        isFromAPI: this.data.mealSuggestions.isFromAPI\r\n      },\r\n      suggestedMeals: this.data.suggestedMeals\r\n    };\r\n    sessionStorage.setItem(`mealSuggestions_${userId}`, JSON.stringify(mealSuggestionsData));\r\n\r\n    const dailyLogsData = {\r\n      date: today,\r\n      userId: userId,\r\n      currentCalories: this.data.currentCalories,\r\n      calorieLimit: this.data.calorieLimit,\r\n      dailyLog: this.data.dailyLog,\r\n      mealEntries: this.data.mealEntries,\r\n      lastFetchDate: this.lastFetchDate\r\n    };\r\n    sessionStorage.setItem(`dailyLogs_${userId}`, JSON.stringify(dailyLogsData));\r\n\r\n    const mealPlanData = {\r\n      date: today,\r\n      userId: userId,\r\n      mealPlan: this.data.mealPlan\r\n    };\r\n    sessionStorage.setItem(`mealPlan_${userId}`, JSON.stringify(mealPlanData));\r\n  }\r\n\r\n  _loadFromSessionStorage() {\r\n    const today = this._getTodayString();\r\n    const userId = this._getCurrentUserId();\r\n    \r\n    try {\r\n      const mealSuggestionsStored = sessionStorage.getItem(`mealSuggestions_${userId}`);\r\n      if (mealSuggestionsStored) {\r\n        const sessionData = JSON.parse(mealSuggestionsStored);\r\n        if (sessionData.date === today && sessionData.userId === userId) {\r\n          this.data.selectedKeywords = sessionData.selectedKeywords || [];\r\n          this.data.mealSuggestions = {\r\n            loading: false,\r\n            error: null,\r\n            data: sessionData.mealSuggestions?.data || [],\r\n            isFromAPI: sessionData.mealSuggestions?.isFromAPI || false\r\n          };\r\n          this.data.suggestedMeals = sessionData.suggestedMeals || this.data.suggestedMeals;\r\n          console.log('Restored meal suggestions from session storage for user:', userId);\r\n        } else {\r\n          sessionStorage.removeItem(`mealSuggestions_${userId}`);\r\n        }\r\n      }\r\n\r\n      const dailyLogsStored = sessionStorage.getItem(`dailyLogs_${userId}`);\r\n      if (dailyLogsStored) {\r\n        const dailyData = JSON.parse(dailyLogsStored);\r\n        if (dailyData.date === today && dailyData.userId === userId) {\r\n          this.data.currentCalories = dailyData.currentCalories || 0;\r\n          if (dailyData.calorieLimit && !this.data.calorieLimit) {\r\n            this.data.calorieLimit = dailyData.calorieLimit;\r\n          }\r\n          this.data.dailyLog = dailyData.dailyLog;\r\n          this.data.mealEntries = dailyData.mealEntries || [];\r\n          this.lastFetchDate = dailyData.lastFetchDate;\r\n          console.log('Restored daily logs from session storage for user:', userId);\r\n        } else {\r\n          sessionStorage.removeItem(`dailyLogs_${userId}`);\r\n        }\r\n      }\r\n\r\n      const mealPlanStored = sessionStorage.getItem(`mealPlan_${userId}`);\r\n      if (mealPlanStored) {\r\n        const planData = JSON.parse(mealPlanStored);\r\n        if (planData.date === today && planData.userId === userId && planData.mealPlan) {\r\n          this.data.mealPlan = planData.mealPlan;\r\n          console.log('Restored meal plan from session storage for user:', userId);\r\n        } else {\r\n          sessionStorage.removeItem(`mealPlan_${userId}`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading from session storage:', error);\r\n      sessionStorage.removeItem(`mealSuggestions_${userId}`);\r\n      sessionStorage.removeItem(`dailyLogs_${userId}`);\r\n      sessionStorage.removeItem(`mealPlan_${userId}`);\r\n    }\r\n  }\r\n\r\n  async _fetchUserProfile() {\r\n    try {\r\n      console.log('🔄 Fetching user profile...');\r\n      \r\n      const token = localStorage.getItem('authToken');\r\n      if (!token) {\r\n        console.log('❌ No auth token found');\r\n        this.data.calorieLimit = 2000;\r\n        return;\r\n      }\r\n\r\n      console.log('🔑 Auth token found, calling profile API...');\r\n\r\n      const response = await fetch('https://kalkulori.up.railway.app/api/users/profile', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      console.log('📡 Profile API response status:', response.status);\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        console.log('📋 Profile API result:', result);\r\n        \r\n        if (result.status === 'success' && result.data && result.data.profile) {\r\n          const profile = result.data.profile;\r\n          if (profile.daily_calorie_target) {\r\n            this.data.calorieLimit = profile.daily_calorie_target;\r\n            console.log('✅ Daily calorie target set:', this.data.calorieLimit);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log('⚠️ Profile API failed or missing data, using fallback');\r\n      this.data.calorieLimit = 2000;\r\n\r\n    } catch (error) {\r\n      console.error('❌ Profile fetch error:', error);\r\n      this.data.calorieLimit = 2000;\r\n    }\r\n  }\r\n\r\n  async _fetchDailyData(forceRefresh = false) {\r\n    try {\r\n      const today = this._getTodayString();\r\n      const userId = this._getCurrentUserId();\r\n      \r\n      if (!forceRefresh && this.lastFetchDate === today && this.data.mealEntries.length > 0) {\r\n        this.data.loading = false;\r\n        this._renderView();\r\n        return;\r\n      }\r\n      \r\n      const response = await fetch(`https://kalkulori.up.railway.app/api/logs/${today}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`\r\n        }\r\n      });\r\n\r\n      let dailyData;\r\n      if (response.status === 404) {\r\n        dailyData = {\r\n          daily_log: {\r\n            total_calories_consumed: 0,\r\n            total_protein_consumed: 0,\r\n            total_carbs_consumed: 0,\r\n            total_fat_consumed: 0,\r\n            remaining_calories: this.data.calorieLimit || 2000\r\n          },\r\n          meal_entries: []\r\n        };\r\n      } else if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      } else {\r\n        const result = await response.json();\r\n        if (result.status === 'success') {\r\n          dailyData = result.data;\r\n        } else {\r\n          throw new Error(result.message || 'Failed to fetch daily data');\r\n        }\r\n      }\r\n      \r\n      this.data.dailyLog = dailyData.daily_log;\r\n      \r\n      console.log('📊 Raw meal entries from API for user', userId, ':', dailyData.meal_entries);\r\n      \r\n      if (dailyData.meal_entries && dailyData.meal_entries.length > 0) {\r\n        dailyData.meal_entries.forEach((meal, index) => {\r\n          console.log(`📋 Meal ${index + 1}:`, {\r\n            id: meal.id,\r\n            food_item_id: meal.food_item_id,\r\n            food_name: meal.food_name,\r\n            is_from_search: meal.is_from_search,\r\n            is_from_recipe: meal.is_from_recipe,\r\n            recipe_id: meal.recipe_id,\r\n            meal_type: meal.meal_type,\r\n            servings: meal.servings,\r\n            calories: meal.calories || meal.calories_consumed\r\n          });\r\n        });\r\n      }\r\n      \r\n      this.data.mealEntries = await this._enrichMealEntries(dailyData.meal_entries || []);\r\n      \r\n      console.log('✨ Enriched meal entries for user', userId, ':', this.data.mealEntries);\r\n      \r\n      this.data.currentCalories = dailyData.daily_log.total_calories_consumed || 0;\r\n      \r\n      if (dailyData.daily_log.remaining_calories !== undefined && !this.data.calorieLimit) {\r\n        this.data.calorieLimit = this.data.currentCalories + dailyData.daily_log.remaining_calories;\r\n      }\r\n      \r\n      this.lastFetchDate = today;\r\n      this._saveToSessionStorage();\r\n      \r\n    } catch (error) {\r\n      console.error('Error fetching daily data for user', this._getCurrentUserId(), ':', error);\r\n      this.data.error = 'Unable to load today\\'s data';\r\n      this.data.currentCalories = 0;\r\n      this.data.mealEntries = [];\r\n      this.data.dailyLog = null;\r\n    } finally {\r\n      this.data.loading = false;\r\n      this._renderView();\r\n    }\r\n  }\r\n\r\n  async _enrichMealEntries(mealEntries) {\r\n    const enrichedEntries = [];\r\n    \r\n    for (const meal of mealEntries) {\r\n      let enrichedMeal = { ...meal };\r\n      \r\n      const originalMealId = meal.id;\r\n      \r\n      if (!enrichedMeal.calories && enrichedMeal.calories_consumed) {\r\n        enrichedMeal.calories = enrichedMeal.calories_consumed;\r\n      }\r\n      if (!enrichedMeal.protein && enrichedMeal.protein_consumed) {\r\n        enrichedMeal.protein = enrichedMeal.protein_consumed;\r\n      }\r\n      if (!enrichedMeal.carbs && enrichedMeal.carbs_consumed) {\r\n        enrichedMeal.carbs = enrichedMeal.carbs_consumed;\r\n      }\r\n      if (!enrichedMeal.fat && enrichedMeal.fat_consumed) {\r\n        enrichedMeal.fat = enrichedMeal.fat_consumed;\r\n      }\r\n      \r\n      console.log(`🔍 Processing meal entry:`, {\r\n        id: meal.id,\r\n        food_item_id: meal.food_item_id,\r\n        is_from_search: meal.is_from_search,\r\n        is_from_recipe: meal.is_from_recipe,\r\n        recipe_id: meal.recipe_id,\r\n        food_name: meal.food_name\r\n      });\r\n      \r\n      if (meal.is_from_search && meal.recipe_id) {\r\n        console.log(`🔍 Processing search meal with recipe_id: ${meal.recipe_id}, meal_id: ${meal.id}`);\r\n        try {\r\n          const mealDetails = await mealApiService.getMealDetails(meal.recipe_id);\r\n          if (mealDetails && mealDetails.meal) {\r\n            const recipeData = mealDetails.meal;\r\n            enrichedMeal.food_details = {\r\n              id: meal.food_item_id,\r\n              food_name: recipeData.food_name || meal.food_name || 'Search Result',\r\n              calories_per_serving: recipeData.calories_per_serving,\r\n              protein_per_serving: recipeData.protein_per_serving,\r\n              carbs_per_serving: recipeData.carbs_per_serving,\r\n              fat_per_serving: recipeData.fat_per_serving,\r\n              serving_size: recipeData.serving_size,\r\n              serving_unit: recipeData.serving_unit,\r\n              image_url: recipeData.image_url,\r\n              is_from_search: true,\r\n              recipe_id: meal.recipe_id\r\n            };\r\n            console.log(`✅ Successfully enriched search meal:`, enrichedMeal.food_details.food_name);\r\n          } else {\r\n            throw new Error('No meal details found');\r\n          }\r\n        } catch (error) {\r\n          console.warn(`Could not fetch search meal details:`, error);\r\n          \r\n          const caloriesPerServing = Math.round((meal.calories || meal.calories_consumed || 0) / (meal.servings || 1));\r\n          const proteinPerServing = parseFloat(((meal.protein || meal.protein_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n          const carbsPerServing = parseFloat(((meal.carbs || meal.carbs_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n          const fatPerServing = parseFloat(((meal.fat || meal.fat_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n          \r\n          enrichedMeal.food_details = {\r\n            id: meal.food_item_id,\r\n            food_name: meal.food_name || 'Search Result',\r\n            calories_per_serving: caloriesPerServing,\r\n            protein_per_serving: proteinPerServing,\r\n            carbs_per_serving: carbsPerServing,\r\n            fat_per_serving: fatPerServing,\r\n            serving_size: 1,\r\n            serving_unit: \"serving\",\r\n            image_url: null,\r\n            is_from_search: true,\r\n            recipe_id: meal.recipe_id\r\n          };\r\n          console.log(`⚠️ Using fallback data for search meal:`, enrichedMeal.food_details.food_name);\r\n        }\r\n      }\r\n      else if (meal.is_from_recipe && meal.recipe_id) {\r\n        console.log(`🍽️ Processing recipe meal with recipe_id: ${meal.recipe_id}, meal_id: ${meal.id}`);\r\n        try {\r\n          const mealDetails = await mealApiService.getMealDetails(meal.recipe_id);\r\n          if (mealDetails && mealDetails.meal) {\r\n            const recipeData = mealDetails.meal;\r\n            enrichedMeal.food_details = {\r\n              id: `recipe_${meal.recipe_id}`,\r\n              food_name: recipeData.food_name || meal.food_name || 'Recipe Meal',\r\n              calories_per_serving: recipeData.calories_per_serving,\r\n              protein_per_serving: recipeData.protein_per_serving,\r\n              carbs_per_serving: recipeData.carbs_per_serving,\r\n              fat_per_serving: recipeData.fat_per_serving,\r\n              serving_size: recipeData.serving_size,\r\n              serving_unit: recipeData.serving_unit,\r\n              image_url: recipeData.image_url,\r\n              is_recipe: true,\r\n              recipe_id: meal.recipe_id\r\n            };\r\n            console.log(`✅ Successfully enriched recipe meal:`, enrichedMeal.food_details.food_name);\r\n          } else {\r\n            throw new Error('No meal details found');\r\n          }\r\n        } catch (error) {\r\n          console.warn(`Could not fetch recipe meal details:`, error);\r\n          \r\n          const caloriesPerServing = Math.round((meal.calories || meal.calories_consumed || 0) / (meal.servings || 1));\r\n          const proteinPerServing = parseFloat(((meal.protein || meal.protein_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n          const carbsPerServing = parseFloat(((meal.carbs || meal.carbs_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n          const fatPerServing = parseFloat(((meal.fat || meal.fat_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n          \r\n          enrichedMeal.food_details = {\r\n            id: meal.food_item_id,\r\n            food_name: meal.food_name || 'Recipe Meal',\r\n            calories_per_serving: caloriesPerServing,\r\n            protein_per_serving: proteinPerServing,\r\n            carbs_per_serving: carbsPerServing,\r\n            fat_per_serving: fatPerServing,\r\n            serving_size: 1,\r\n            serving_unit: \"serving\",\r\n            image_url: null,\r\n            is_recipe: true,\r\n            recipe_id: meal.recipe_id\r\n          };\r\n          console.log(`⚠️ Using fallback data for recipe meal:`, enrichedMeal.food_details.food_name);\r\n        }\r\n      }\r\n      else if (meal.food_details) {\r\n        enrichedMeal.food_details = meal.food_details;\r\n        console.log(`📋 Using existing food_details for meal:`, meal.food_details.food_name);\r\n      }\r\n      else {\r\n        const caloriesPerServing = Math.round((meal.calories || meal.calories_consumed || 0) / (meal.servings || 1));\r\n        const proteinPerServing = parseFloat(((meal.protein || meal.protein_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n        const carbsPerServing = parseFloat(((meal.carbs || meal.carbs_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n        const fatPerServing = parseFloat(((meal.fat || meal.fat_consumed || 0) / (meal.servings || 1)).toFixed(2));\r\n        \r\n        enrichedMeal.food_details = {\r\n          id: meal.food_item_id,\r\n          food_name: meal.food_name || 'Unknown Food',\r\n          calories_per_serving: caloriesPerServing,\r\n          protein_per_serving: proteinPerServing,\r\n          carbs_per_serving: carbsPerServing,\r\n          fat_per_serving: fatPerServing,\r\n          serving_size: 1,\r\n          serving_unit: \"serving\",\r\n          image_url: null\r\n        };\r\n        console.log(`🆕 Created food_details for regular meal:`, enrichedMeal.food_details.food_name);\r\n      }\r\n      \r\n      enrichedMeal.id = originalMealId;\r\n      console.log(`✅ Final meal entry ID: ${enrichedMeal.id} for ${enrichedMeal.food_details?.food_name}`);\r\n      \r\n      enrichedMeal._debug_info = {\r\n        original_id: originalMealId,\r\n        user_id: meal.user_id,\r\n        is_from_recipe: meal.is_from_recipe,\r\n        is_from_search: meal.is_from_search,\r\n        recipe_id: meal.recipe_id,\r\n        food_item_id: meal.food_item_id\r\n      };\r\n      \r\n      enrichedEntries.push(enrichedMeal);\r\n    }\r\n    \r\n    return enrichedEntries;\r\n  }\r\n\r\n  async _fetchMealPlan(forceRefresh = false) {\r\n    try {\r\n      const today = this._getTodayString();\r\n      const userId = this._getCurrentUserId();\r\n      const hasCachedPlan = this.data.mealPlan.plans && this.data.mealPlan.plans.length > 0;\r\n      \r\n      if (!forceRefresh && hasCachedPlan) {\r\n        console.log('🍽️ Using cached meal plan for user:', userId);\r\n        return;\r\n      }\r\n\r\n      this.data.mealPlan.loading = true;\r\n      this.data.mealPlan.error = null;\r\n      this._renderView();\r\n\r\n      console.log('🍽️ Fetching meal plan for user:', userId);\r\n      const mealPlanData = await mealApiService.generateMealPlan();\r\n      console.log('✅ Meal plan data received for user', userId, ':', mealPlanData);\r\n      \r\n      const formattedPlans = formatMealPlanData(mealPlanData);\r\n      \r\n      if (!Array.isArray(formattedPlans) || formattedPlans.length === 0) {\r\n        console.error('❌ formatMealPlanData returned invalid data:', formattedPlans);\r\n        throw new Error('Failed to format meal plan data');\r\n      }\r\n      \r\n      this.data.mealPlan.plans = formattedPlans;\r\n      this.data.mealPlan.totalCalories = calculateTotalCalories(this.data.mealPlan.plans);\r\n      this.data.mealPlan.targetCalories = mealPlanData.user_info?.daily_calorie_target || this.data.calorieLimit;\r\n      \r\n      this._saveToSessionStorage();\r\n      console.log('✅ Meal plan formatted successfully for user:', userId);\r\n      \r\n    } catch (error) {\r\n      console.error('💥 Error fetching meal plan for user', this._getCurrentUserId(), ':', error);\r\n      \r\n      let errorMessage = 'Unable to load meal plan';\r\n      \r\n      if (error.message.includes('Authentication') || error.message.includes('login')) {\r\n        errorMessage = 'Authentication required. Please login again.';\r\n      } else if (error.message.includes('Profile not found') || error.message.includes('404')) {\r\n        errorMessage = 'Please complete your profile first';\r\n      } else if (error.message.includes('Daily calorie target') || error.message.includes('400')) {\r\n        errorMessage = 'Please set your daily calorie target in profile';\r\n      } else if (error.message.includes('Server error') || error.message.includes('500')) {\r\n        errorMessage = 'Profile setup required. Please complete your profile.';\r\n      } else if (error.message.includes('503') || error.message.includes('ML service')) {\r\n        errorMessage = 'Meal plan service temporarily unavailable';\r\n      } else if (error.message.includes('504') || error.message.includes('timeout')) {\r\n        errorMessage = 'Request timeout. Please try again';\r\n      } else if (error.message.includes('connect') || error.message.includes('network') || error.message.includes('Network error')) {\r\n        errorMessage = 'Connection error. Please check your internet';\r\n      } else if (error.message.includes('No meal plans available') || error.message.includes('No meal plans generated')) {\r\n        errorMessage = 'No meal plans generated. Please try again.';\r\n      } else if (error.message.includes('Invalid')) {\r\n        errorMessage = 'Invalid data received. Please try again.';\r\n      }\r\n      \r\n      this.data.mealPlan.error = errorMessage;\r\n      \r\n      if (!error.message.includes('Authentication') && !error.message.includes('login')) {\r\n        this.data.mealPlan.plans = getDefaultMealPlan();\r\n        this.data.mealPlan.totalCalories = calculateTotalCalories(this.data.mealPlan.plans);\r\n        console.log('📋 Using default meal plan as fallback for user:', this._getCurrentUserId());\r\n      } else {\r\n        this.data.mealPlan.plans = [];\r\n        this.data.mealPlan.totalCalories = 0;\r\n      }\r\n      \r\n    } finally {\r\n      this.data.mealPlan.loading = false;\r\n      this._renderView();\r\n    }\r\n  }\r\n\r\n  _bindCustomEvents() {\r\n    document.addEventListener('keywordToggled', (event) => {\r\n      this._handleKeywordToggled(event.detail.keyword, event.detail.selected);\r\n    });\r\n\r\n    document.addEventListener('mealPlanMealAdded', () => {\r\n      console.log('🔄 Meal plan meal added, refreshing data for user:', this._getCurrentUserId());\r\n      this._refreshDailyData();\r\n    });\r\n\r\n    document.addEventListener('mealAdded', (event) => {\r\n      console.log('🔄 Meal added from', event.detail.source, ', refreshing data for user:', this._getCurrentUserId());\r\n      setTimeout(() => {\r\n        this._refreshDailyData();\r\n      }, 500);\r\n    });\r\n  }\r\n\r\n  async _refreshDailyData() {\r\n    try {\r\n      await this._fetchUserProfile();\r\n      await this._fetchDailyData(true);\r\n    } catch (error) {\r\n      console.error('Error refreshing daily data for user', this._getCurrentUserId(), ':', error);\r\n    }\r\n  }\r\n\r\n  _renderView() {\r\n    HomeView.render(this.container, this.data);\r\n    HomeView.afterRender(this.eventHandlers);\r\n    \r\n    const deleteMealButtons = document.querySelectorAll('.delete-meal-btn');\r\n    deleteMealButtons.forEach(button => {\r\n      const mealId = button.dataset.mealId;\r\n      console.log('🔍 Delete button found for meal ID:', mealId);\r\n    });\r\n  }\r\n\r\n  _handleAddMeal() {\r\n    window.location.hash = '#/add-meal';\r\n  }\r\n\r\n  async _handleDeleteMeal(mealId) {\r\n    try {\r\n      console.log('🗑️ Attempting to delete meal with ID:', mealId);\r\n      console.log('🗑️ Meal ID type:', typeof mealId);\r\n      \r\n      if (!mealId || mealId === 'undefined' || mealId === 'null') {\r\n        console.error('❌ Invalid meal ID provided:', mealId);\r\n        alert('Cannot delete this meal. Invalid meal ID.');\r\n        return;\r\n      }\r\n      \r\n      const mealToDelete = this.data.mealEntries.find(meal => meal.id === mealId);\r\n      console.log('🔍 Found meal to delete:', mealToDelete);\r\n      \r\n      if (mealToDelete) {\r\n        console.log('📋 Meal details:', {\r\n          id: mealToDelete.id,\r\n          user_id: mealToDelete.user_id,\r\n          is_from_search: mealToDelete.is_from_search,\r\n          is_from_recipe: mealToDelete.is_from_recipe,\r\n          food_item_id: mealToDelete.food_item_id,\r\n          recipe_id: mealToDelete.recipe_id\r\n        });\r\n        \r\n        if (mealToDelete.is_from_search && !mealToDelete.user_id) {\r\n          console.warn('⚠️ Search meal detected without user_id, this may cause delete issues');\r\n        }\r\n      }\r\n      \r\n      this.data.loading = true;\r\n      this._renderView();\r\n      \r\n      const token = localStorage.getItem('authToken');\r\n      if (!token) {\r\n        throw new Error('No authentication token found');\r\n      }\r\n      \r\n      console.log('🔗 Making DELETE request to:', `/api/meals/${mealId}`);\r\n      \r\n      const response = await fetch(`https://kalkulori.up.railway.app/api/meals/${mealId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      console.log('📡 Delete response status:', response.status);\r\n      console.log('📡 Delete response ok:', response.ok);\r\n\r\n      if (response.status === 403) {\r\n        console.error('❌ 403 Forbidden - checking if this is a search meal issue');\r\n        \r\n        if (mealToDelete && mealToDelete.is_from_search) {\r\n          console.log('🔍 This is a search meal, trying alternative approach...');\r\n          \r\n          try {\r\n            await this._handleSearchMealDelete(mealId, mealToDelete);\r\n            return;\r\n          } catch (altError) {\r\n            console.error('❌ Alternative delete method also failed:', altError);\r\n            throw new Error('Cannot delete search meals due to system limitations. Please contact support.');\r\n          }\r\n        } else {\r\n          const errorText = await response.text();\r\n          throw new Error(`Access denied: ${errorText}`);\r\n        }\r\n      }\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('❌ Delete failed with response:', errorText);\r\n        throw new Error(`HTTP error! status: ${response.status} - ${errorText}`);\r\n      }\r\n\r\n      let result;\r\n      try {\r\n        result = await response.json();\r\n        console.log('✅ Delete response JSON:', result);\r\n      } catch (parseError) {\r\n        console.log('⚠️ Could not parse response as JSON, assuming success');\r\n        result = { status: 'success' };\r\n      }\r\n      \r\n      if (result.status === 'success' || response.ok) {\r\n        console.log('✅ Meal deleted successfully');\r\n        alert('Meal removed successfully!');\r\n        await this._refreshDailyData();\r\n      } else {\r\n        throw new Error(result.message || 'Failed to delete meal');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('💥 Delete failed for user', this._getCurrentUserId(), ':', error);\r\n      alert(`Failed to delete meal: ${error.message}`);\r\n    } finally {\r\n      this.data.loading = false;\r\n      this._renderView();\r\n    }\r\n  }\r\n\r\n  async _handleSearchMealDelete(mealId, mealData) {\r\n    console.log('🔄 Removing search meal locally');\r\n    \r\n    try {\r\n      this.data.mealEntries = this.data.mealEntries.filter(meal => meal.id !== mealId);\r\n      \r\n      this.data.currentCalories = this.data.mealEntries.reduce((total, meal) => {\r\n        return total + (meal.calories || meal.calories_consumed || 0);\r\n      }, 0);\r\n      \r\n      console.log('✅ Updated calories:', this.data.currentCalories);\r\n      console.log('✅ Calorie limit:', this.data.calorieLimit);\r\n      \r\n      this._saveToSessionStorage();\r\n      this._renderView();\r\n      \r\n      alert('Meal removed successfully!');\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Local delete failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  _handleCategoryClicked(category) {\r\n    console.log(`Category clicked by user ${this._getCurrentUserId()}: ${category}`);\r\n    this.data.currentCategory = category;\r\n    \r\n    setTimeout(() => {\r\n      HomeView.showCategoryPopup(category, this.data.selectedKeywords);\r\n    }, 100);\r\n  }\r\n\r\n  _handlePopupClosed() {\r\n    console.log('Popup closed for user:', this._getCurrentUserId());\r\n    this.data.currentCategory = null;\r\n    HomeView.hideCategoryPopup();\r\n    this._renderView();\r\n  }\r\n\r\n  _handleKeywordToggled(keyword, selected) {\r\n    console.log(`User ${this._getCurrentUserId()} keyword ${keyword} ${selected ? 'selected' : 'deselected'}`);\r\n    \r\n    const validKeywords = validateKeywords([keyword]);\r\n    if (validKeywords.length === 0) {\r\n      console.warn(`Invalid keyword: ${keyword}`);\r\n      return;\r\n    }\r\n    \r\n    if (selected) {\r\n      if (this.data.selectedKeywords.length >= 6) {\r\n        alert('Maximum 6 keywords allowed! Please remove some keywords first.');\r\n        setTimeout(() => {\r\n          const keywordElement = document.querySelector(`[data-keyword=\"${keyword}\"]`);\r\n          if (keywordElement) {\r\n            keywordElement.classList.remove('selected');\r\n          }\r\n        }, 100);\r\n        return;\r\n      }\r\n      \r\n      if (!this.data.selectedKeywords.includes(keyword)) {\r\n        this.data.selectedKeywords.push(keyword);\r\n      }\r\n    } else {\r\n      this.data.selectedKeywords = this.data.selectedKeywords.filter(k => k !== keyword);\r\n    }\r\n    \r\n    this._saveToSessionStorage();\r\n    \r\n    const categoryCounts = countSelectedKeywordsByCategory(this.data.selectedKeywords);\r\n    console.log('Selected keywords by category for user', this._getCurrentUserId(), ':', categoryCounts);\r\n    console.log('Total selected keywords for user', this._getCurrentUserId(), ':', this.data.selectedKeywords);\r\n  }\r\n\r\n  async _handleFindMeals() {\r\n    console.log('Finding meals with keywords for user', this._getCurrentUserId(), ':', this.data.selectedKeywords);\r\n    \r\n    if (this.data.selectedKeywords.length === 0) {\r\n      alert('Please select some preferences first!');\r\n      return;\r\n    }\r\n\r\n    if (this.data.selectedKeywords.length > 6) {\r\n      alert('Maximum 6 keywords allowed! Please remove some keywords first.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.data.mealSuggestions.loading = true;\r\n      this.data.mealSuggestions.error = null;\r\n      this.data.mealSuggestions.isFromAPI = true;\r\n      this._renderView();\r\n\r\n      console.log('🔍 Fetching meal suggestions from API for user:', this._getCurrentUserId());\r\n      console.log('Keywords:', this.data.selectedKeywords);\r\n\r\n      const suggestionsData = await mealApiService.getMealSuggestions(this.data.selectedKeywords);\r\n      console.log('✅ Meal suggestions received for user', this._getCurrentUserId(), ':', suggestionsData);\r\n\r\n      if (suggestionsData && suggestionsData.suggestions && suggestionsData.suggestions.length > 0) {\r\n        const formattedSuggestions = suggestionsData.suggestions.map(suggestion => ({\r\n          id: suggestion.recipe_id,\r\n          name: suggestion.name,\r\n          calories: suggestion.calories,\r\n          image: suggestion.image_url || 'https://images.unsplash.com/photo-1546554137-f86b9593a222?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80',\r\n          serving_size: suggestion.serving_size || 1,\r\n          serving_unit: suggestion.serving_unit || 'serving',\r\n          protein: suggestion.protein,\r\n          carbohydrate: suggestion.carbohydrate,\r\n          fat: suggestion.fat\r\n        }));\r\n\r\n        this.data.mealSuggestions.data = formattedSuggestions;\r\n        this.data.suggestedMeals = formattedSuggestions.slice(0, 8);\r\n        this.data.mealSuggestions.loading = false;\r\n        this.data.mealSuggestions.error = null;\r\n        this.data.mealSuggestions.isFromAPI = true;\r\n        \r\n        this._saveToSessionStorage();\r\n        \r\n        console.log('✅ Meal suggestions formatted successfully for user:', this._getCurrentUserId());\r\n        console.log('Total suggestions:', formattedSuggestions.length);\r\n        \r\n        alert(`Found ${formattedSuggestions.length} meal suggestions based on your preferences!`);\r\n      } else {\r\n        console.log('⚠️ No suggestions found for user', this._getCurrentUserId(), ', using fallback');\r\n        this._useFallbackSuggestions();\r\n        alert('No specific suggestions found for your keywords. Showing general recommendations.');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('💥 Error fetching meal suggestions for user', this._getCurrentUserId(), ':', error);\r\n      \r\n      let errorMessage = 'Failed to get meal suggestions';\r\n      \r\n      if (error.message.includes('Profile not found') || error.message.includes('404')) {\r\n        errorMessage = 'Please complete your profile first to get personalized suggestions.';\r\n      } else if (error.message.includes('Daily calorie target') || error.message.includes('400')) {\r\n        errorMessage = 'Please set your daily calorie target in profile to get suggestions.';\r\n      } else if (error.message.includes('503') || error.message.includes('service')) {\r\n        errorMessage = 'Meal suggestion service is temporarily unavailable. Using default suggestions.';\r\n      } else if (error.message.includes('504') || error.message.includes('timeout')) {\r\n        errorMessage = 'Request timeout. Using default suggestions.';\r\n      } else if (error.message.includes('Network error')) {\r\n        errorMessage = 'Network error. Please check your connection.';\r\n      }\r\n      \r\n      this.data.mealSuggestions.error = errorMessage;\r\n      this._useFallbackSuggestions();\r\n      alert(errorMessage);\r\n      \r\n    } finally {\r\n      this.data.mealSuggestions.loading = false;\r\n      this._saveToSessionStorage();\r\n      this._renderView();\r\n    }\r\n  }\r\n\r\n  _useFallbackSuggestions() {\r\n    this.data.mealSuggestions.data = [\r\n      {\r\n        id: \"default_1\",\r\n        name: 'Chicken Soto',\r\n        image: './public/image/meals/chicken-soto.jpg',\r\n        calories: 312,\r\n        serving_size: 1,\r\n        serving_unit: 'serving'\r\n      },\r\n      {\r\n        id: \"default_2\",\r\n        name: 'Fried Noodles',\r\n        image: './public/image/meals/fried-noodles.jpg',\r\n        calories: 280,\r\n        serving_size: 1,\r\n        serving_unit: 'serving'\r\n      },\r\n      {\r\n        id: \"default_3\",\r\n        name: 'Meatballs Soup',\r\n        image: './public/image/meals/meatballs-soup.jpg',\r\n        calories: 283,\r\n        serving_size: 1,\r\n        serving_unit: 'serving'\r\n      },\r\n      {\r\n        id: \"default_4\",\r\n        name: 'Noodles Soup',\r\n        image: './public/image/meals/noodles-soup.jpg',\r\n        calories: 137,\r\n        serving_size: 1,\r\n        serving_unit: 'serving'\r\n      }\r\n    ];\r\n    \r\n    this.data.suggestedMeals = this.data.mealSuggestions.data;\r\n    this.data.mealSuggestions.loading = false;\r\n    this.data.mealSuggestions.error = null;\r\n    this.data.mealSuggestions.isFromAPI = false;\r\n    this._saveToSessionStorage();\r\n  }\r\n\r\n  _handleClearAll() {\r\n    console.log('Clearing all selected keywords for user:', this._getCurrentUserId());\r\n    this.data.selectedKeywords = [];\r\n    \r\n    this._useFallbackSuggestions();\r\n    this.data.mealSuggestions.loading = false;\r\n    this.data.mealSuggestions.error = null;\r\n    this.data.mealSuggestions.isFromAPI = false;\r\n    \r\n    this._saveToSessionStorage();\r\n    this._renderView();\r\n  }\r\n\r\n  _handleKeywordRemoved(keyword) {\r\n    console.log(`User ${this._getCurrentUserId()} removing keyword: ${keyword}`);\r\n    this.data.selectedKeywords = this.data.selectedKeywords.filter(k => k !== keyword);\r\n    \r\n    this._saveToSessionStorage();\r\n    \r\n    const categoryCounts = countSelectedKeywordsByCategory(this.data.selectedKeywords);\r\n    console.log('Updated keywords by category for user', this._getCurrentUserId(), ':', categoryCounts);\r\n    \r\n    this._renderView();\r\n  }\r\n\r\n  async _handleGenerateMealPlan() {\r\n    await this._fetchMealPlan(true);\r\n  }\r\n\r\n  _handleMealPlanItemClicked(mealData) {\r\n    console.log('Meal plan item clicked by user', this._getCurrentUserId(), ':', mealData);\r\n    \r\n    if (window.FoodCard && window.FoodCard.showAddMealPopup) {\r\n      window.FoodCard.showAddMealPopup({\r\n        id: mealData.id,\r\n        name: mealData.name,\r\n        calories: mealData.calories,\r\n        serving_size: mealData.serving_size,\r\n        serving_unit: mealData.serving_unit\r\n      });\r\n    }\r\n  }\r\n\r\n  _handleCompleteProfile() {\r\n    console.log('Complete profile clicked by user:', this._getCurrentUserId());\r\n    window.location.hash = '#/profile';\r\n  }\r\n\r\n  _handleSuggestedMealClicked(mealData) {\r\n    console.log('Suggested meal clicked for adding by user', this._getCurrentUserId(), ':', mealData);\r\n    \r\n    this._showSuggestionMealPopup({\r\n      id: mealData.id,\r\n      name: mealData.name,\r\n      calories: mealData.calories,\r\n      serving_size: mealData.serving_size || 1,\r\n      serving_unit: mealData.serving_unit || 'serving'\r\n    });\r\n  }\r\n\r\n  _showSuggestionMealPopup(foodData) {\r\n    console.log('Showing suggestion meal popup for user', this._getCurrentUserId(), ':', foodData);\r\n    \r\n    const existingPopup = document.getElementById('suggestion-meal-popup-overlay');\r\n    if (existingPopup) {\r\n      existingPopup.remove();\r\n    }\r\n    \r\n    const popupHTML = `\r\n      <div class=\"meal-popup-overlay\" id=\"suggestion-meal-popup-overlay\">\r\n        <div class=\"meal-popup\">\r\n          <div class=\"meal-popup-header\">\r\n            <h3>Add ${foodData.name}</h3>\r\n            <button class=\"popup-close\" id=\"suggestion-popup-close\">&times;</button>\r\n          </div>\r\n          <div class=\"meal-popup-content\">\r\n            <div class=\"form-group\">\r\n              <label for=\"suggestion-meal-type\">Meal Type:</label>\r\n              <select id=\"suggestion-meal-type\" required>\r\n                <option value=\"\">Select meal type</option>\r\n                <option value=\"breakfast\">Breakfast</option>\r\n                <option value=\"lunch\">Lunch</option>\r\n                <option value=\"dinner\">Dinner</option>\r\n                <option value=\"snack\">Snack</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"suggestion-servings\">Servings:</label>\r\n              <input type=\"number\" id=\"suggestion-servings\" min=\"1\" step=\"1\" value=\"1\" required>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"suggestion-log-date\">Date:</label>\r\n              <input type=\"date\" id=\"suggestion-log-date\" value=\"${this._getTodayString()}\" required>\r\n            </div>\r\n            <div class=\"form-actions\">\r\n              <button class=\"btn-cancel\" id=\"suggestion-btn-cancel\">Cancel</button>\r\n              <button class=\"btn-add\" id=\"suggestion-btn-add\">Add</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n    \r\n    document.body.insertAdjacentHTML('beforeend', popupHTML);\r\n    \r\n    const overlay = document.getElementById('suggestion-meal-popup-overlay');\r\n    const closeBtn = document.getElementById('suggestion-popup-close');\r\n    const cancelBtn = document.getElementById('suggestion-btn-cancel');\r\n    const addBtn = document.getElementById('suggestion-btn-add');\r\n    \r\n    function closePopup() {\r\n      if (overlay && overlay.parentNode) {\r\n        overlay.parentNode.removeChild(overlay);\r\n      }\r\n    }\r\n    \r\n    if (closeBtn) {\r\n      closeBtn.addEventListener('click', closePopup);\r\n    }\r\n    \r\n    if (cancelBtn) {\r\n      cancelBtn.addEventListener('click', closePopup);\r\n    }\r\n    \r\n    if (overlay) {\r\n      overlay.addEventListener('click', function(e) {\r\n        if (e.target === overlay) closePopup();\r\n      });\r\n    }\r\n    \r\n    if (addBtn) {\r\n      addBtn.addEventListener('click', async () => {\r\n        const mealType = document.getElementById('suggestion-meal-type')?.value;\r\n        const servings = parseFloat(document.getElementById('suggestion-servings')?.value);\r\n        const logDate = document.getElementById('suggestion-log-date')?.value;\r\n        \r\n        if (!mealType || !servings || !logDate) {\r\n          alert('Please fill all fields');\r\n          return;\r\n        }\r\n        \r\n        try {\r\n          addBtn.disabled = true;\r\n          addBtn.textContent = 'Adding...';\r\n          \r\n          if (foodData.id && !foodData.id.startsWith('default_')) {\r\n            const mealEntryData = {\r\n              recipe_id: foodData.id,\r\n              meal_type: mealType,\r\n              servings: servings,\r\n              log_date: logDate\r\n            };\r\n            \r\n            await mealApiService.addMealFromSuggestion(mealEntryData);\r\n            \r\n            alert('Meal added successfully!');\r\n            closePopup();\r\n            \r\n            await this._refreshDailyData();\r\n            \r\n          } else {\r\n            console.log(`Demo: Added ${foodData.name} - ${mealType} - ${servings} servings on ${logDate} for user ${this._getCurrentUserId()}`);\r\n            alert('This is a default meal. Please select suggestions from \"Find Meals\" for full functionality.');\r\n            closePopup();\r\n          }\r\n        } catch (error) {\r\n          console.error('Error adding meal from suggestion for user', this._getCurrentUserId(), ':', error);\r\n          alert('Failed to add meal. Please try again.');\r\n          addBtn.disabled = false;\r\n          addBtn.textContent = 'Add';\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async _handleSuggestedMealDetailsClicked(mealData) {\r\n    console.log('Suggested meal details clicked by user', this._getCurrentUserId(), ':', mealData);\r\n    \r\n    if (!mealData.id || mealData.id.startsWith('default_')) {\r\n      this._showMealDetailsPopup({\r\n        name: mealData.name,\r\n        calories: mealData.calories,\r\n        image: mealData.image,\r\n        serving_size: mealData.serving_size || 1,\r\n        serving_unit: mealData.serving_unit || 'serving',\r\n        protein: mealData.protein || 0,\r\n        carbohydrate: mealData.carbohydrate || 0,\r\n        fat: mealData.fat || 0,\r\n        isDefault: true\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('🔍 Fetching meal details from API for user:', this._getCurrentUserId());\r\n      \r\n      this._showMealDetailsPopup({\r\n        name: mealData.name,\r\n        loading: true\r\n      });\r\n\r\n      const mealDetails = await mealApiService.getMealDetails(mealData.id);\r\n      console.log('✅ Meal details received for user', this._getCurrentUserId(), ':', mealDetails);\r\n\r\n      if (mealDetails && mealDetails.meal) {\r\n        const meal = mealDetails.meal;\r\n        this._showMealDetailsPopup({\r\n          name: meal.food_name,\r\n          calories: meal.calories_per_serving,\r\n          image: meal.image_url,\r\n          serving_size: meal.serving_size,\r\n          serving_unit: meal.serving_unit,\r\n          protein: meal.protein_per_serving,\r\n          carbohydrate: meal.carbs_per_serving,\r\n          fat: meal.fat_per_serving,\r\n          cookTime: meal.recipe_metadata?.cook_time,\r\n          prepTime: meal.recipe_metadata?.prep_time,\r\n          totalTime: meal.recipe_metadata?.total_time,\r\n          ingredients: meal.recipe_metadata?.ingredients,\r\n          nutrition: meal.recipe_metadata?.total_nutrition,\r\n          isDefault: false\r\n        });\r\n      } else {\r\n        throw new Error('No meal details found');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('💥 Error fetching meal details for user', this._getCurrentUserId(), ':', error);\r\n      \r\n      this._showMealDetailsPopup({\r\n        name: mealData.name,\r\n        error: 'Failed to load meal details. Please try again.',\r\n        calories: mealData.calories,\r\n        image: mealData.image\r\n      });\r\n    }\r\n  }\r\n\r\n  _showMealDetailsPopup(mealDetails) {\r\n    const existingPopup = document.getElementById('meal-details-popup-overlay');\r\n    if (existingPopup) {\r\n      existingPopup.remove();\r\n    }\r\n\r\n    let popupContent = '';\r\n    \r\n    if (mealDetails.loading) {\r\n      popupContent = `\r\n        <div class=\"meal-details-loading\">\r\n          <div class=\"loading-spinner\"></div>\r\n          <p>Loading meal details...</p>\r\n        </div>\r\n      `;\r\n    } else if (mealDetails.error) {\r\n      popupContent = `\r\n        <div class=\"meal-details-error\">\r\n          <h4>Error</h4>\r\n          <p>${mealDetails.error}</p>\r\n          <div class=\"basic-meal-info\">\r\n            <img src=\"${mealDetails.image || 'https://images.unsplash.com/photo-1546554137-f86b9593a222'}\" alt=\"${mealDetails.name}\">\r\n            <h3>${mealDetails.name}</h3>\r\n            <p>${mealDetails.calories || 0} kcal per serving</p>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else {\r\n      popupContent = `\r\n        <div class=\"meal-details-content\">\r\n          <div class=\"meal-details-header\">\r\n            <img src=\"${mealDetails.image || 'https://images.unsplash.com/photo-1546554137-f86b9593a222'}\" alt=\"${mealDetails.name}\">\r\n            <div class=\"meal-basic-info\">\r\n              <h3>${mealDetails.name}</h3>\r\n              <p class=\"meal-calories\">${mealDetails.calories} kcal per ${mealDetails.serving_unit || 'serving'}</p>\r\n              ${mealDetails.totalTime ? `<p class=\"meal-time\">⏱️ ${mealDetails.totalTime} minutes</p>` : ''}\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"meal-nutrition\">\r\n            <h4>Nutrition per serving:</h4>\r\n            <div class=\"nutrition-grid\">\r\n              <div class=\"nutrition-item\">\r\n                <span class=\"nutrition-label\">Protein</span>\r\n                <span class=\"nutrition-value\">${Math.round(mealDetails.protein || 0)}g</span>\r\n              </div>\r\n              <div class=\"nutrition-item\">\r\n                <span class=\"nutrition-label\">Carbs</span>\r\n                <span class=\"nutrition-value\">${Math.round(mealDetails.carbohydrate || 0)}g</span>\r\n              </div>\r\n              <div class=\"nutrition-item\">\r\n                <span class=\"nutrition-label\">Fat</span>\r\n                <span class=\"nutrition-value\">${Math.round(mealDetails.fat || 0)}g</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          ${mealDetails.ingredients && mealDetails.ingredients.length > 0 ? `\r\n            <div class=\"meal-ingredients\">\r\n              <h4>Ingredients:</h4>\r\n              <ul>\r\n                ${mealDetails.ingredients.slice(0, 10).map(ingredient => `<li>${ingredient}</li>`).join('')}\r\n                ${mealDetails.ingredients.length > 10 ? `<li><em>... and ${mealDetails.ingredients.length - 10} more ingredients</em></li>` : ''}\r\n              </ul>\r\n            </div>\r\n          ` : ''}\r\n\r\n          ${mealDetails.nutrition ? `\r\n            <div class=\"detailed-nutrition\">\r\n              <h4>Detailed Nutrition:</h4>\r\n              <div class=\"nutrition-details-grid\">\r\n                ${mealDetails.nutrition.fiber ? `<div>Fiber: ${Math.round(mealDetails.nutrition.fiber)}g</div>` : ''}\r\n                ${mealDetails.nutrition.sugar ? `<div>Sugar: ${Math.round(mealDetails.nutrition.sugar)}g</div>` : ''}\r\n                ${mealDetails.nutrition.sodium ? `<div>Sodium: ${Math.round(mealDetails.nutrition.sodium)}mg</div>` : ''}\r\n                ${mealDetails.nutrition.cholesterol ? `<div>Cholesterol: ${Math.round(mealDetails.nutrition.cholesterol)}mg</div>` : ''}\r\n              </div>\r\n            </div>\r\n          ` : ''}\r\n        </div>\r\n      `;\r\n    }\r\n\r\n    const popupHTML = `\r\n      <div class=\"meal-details-popup-overlay\" id=\"meal-details-popup-overlay\">\r\n        <div class=\"meal-details-popup\">\r\n          <div class=\"meal-details-popup-header\">\r\n            <h2>Meal Details</h2>\r\n            <button class=\"popup-close\" id=\"meal-details-close\">&times;</button>\r\n          </div>\r\n          <div class=\"meal-details-popup-body\">\r\n            ${popupContent}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    document.body.insertAdjacentHTML('beforeend', popupHTML);\r\n\r\n    const overlay = document.getElementById('meal-details-popup-overlay');\r\n    const closeBtn = document.getElementById('meal-details-close');\r\n\r\n    const closePopup = () => {\r\n      if (overlay && overlay.parentNode) {\r\n        overlay.parentNode.removeChild(overlay);\r\n      }\r\n    };\r\n\r\n    if (closeBtn) {\r\n      closeBtn.addEventListener('click', closePopup);\r\n    }\r\n\r\n    if (overlay) {\r\n      overlay.addEventListener('click', (e) => {\r\n        if (e.target === overlay) closePopup();\r\n      });\r\n    }\r\n\r\n    const handleEscape = (e) => {\r\n      if (e.key === 'Escape') {\r\n        closePopup();\r\n        document.removeEventListener('keydown', handleEscape);\r\n      }\r\n    };\r\n    document.addEventListener('keydown', handleEscape);\r\n  }\r\n}\r\n\r\nexport default HomePresenter;"],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","toPrimitive","String","Number","_toPrimitive","HomePresenter","_ref","container","_classCallCheck","this","lastFetchDate","data","currentCalories","calorieLimit","selectedKeywords","dailyLog","mealEntries","loading","error","currentCategory","mealPlan","plans","totalCalories","targetCalories","suggestedMeals","image","calories","mealSuggestions","isFromAPI","eventHandlers","onAddMealClicked","_handleAddMeal","bind","onDeleteMealClicked","_handleDeleteMeal","onCategoryClicked","_handleCategoryClicked","onPopupClosed","_handlePopupClosed","onFindMealsClicked","_handleFindMeals","onClearAllClicked","_handleClearAll","onKeywordRemoved","_handleKeywordRemoved","onGenerateMealPlan","_handleGenerateMealPlan","onMealPlanItemClicked","_handleMealPlanItemClicked","onCompleteProfileClicked","_handleCompleteProfile","onSuggestedMealClicked","_handleSuggestedMealClicked","onSuggestedMealDetailsClicked","_handleSuggestedMealDetailsClicked","_bindCustomEvents","_startDayChangeMonitor","_init","_callee","_context","window","mealApiService","_checkAndResetForNewDay","_renderView","console","log","_fetchUserProfile","_loadFromSessionStorage","_fetchDailyData","_fetchMealPlan","t0","localStorage","getItem","_this","setInterval","today","_getTodayString","userId","_getCurrentUserId","lastDateKey","concat","setItem","sessionStorage","removeItem","innerHTML","now","Date","year","getFullYear","month","getMonth","padStart","day","getDate","mealSuggestionsData","date","JSON","stringify","dailyLogsData","mealPlanData","mealSuggestionsStored","_sessionData$mealSugg","_sessionData$mealSugg2","sessionData","parse","dailyLogsStored","dailyData","mealPlanStored","planData","_fetchUserProfile2","_callee2","token","response","result","profile","_context2","fetch","headers","status","ok","json","daily_calorie_target","_fetchDailyData2","_callee3","forceRefresh","_args3","_context3","undefined","daily_log","total_calories_consumed","total_protein_consumed","total_carbs_consumed","total_fat_consumed","remaining_calories","meal_entries","message","meal","index","id","food_item_id","food_name","is_from_search","is_from_recipe","recipe_id","meal_type","servings","calories_consumed","_enrichMealEntries","_saveToSessionStorage","_enrichMealEntries2","_callee4","enrichedEntries","_iterator","_step","_enrichedMeal$food_de","enrichedMeal","originalMealId","mealDetails","recipeData","caloriesPerServing","proteinPerServing","carbsPerServing","fatPerServing","_mealDetails","_recipeData","_caloriesPerServing","_proteinPerServing","_carbsPerServing","_fatPerServing","_caloriesPerServing2","_proteinPerServing2","_carbsPerServing2","_fatPerServing2","_context4","_createForOfIteratorHelper","_objectSpread","protein","protein_consumed","carbs","carbs_consumed","fat","fat_consumed","getMealDetails","food_details","calories_per_serving","protein_per_serving","carbs_per_serving","fat_per_serving","serving_size","serving_unit","image_url","warn","Math","round","parseFloat","toFixed","is_recipe","t1","_debug_info","original_id","user_id","t2","_x","_fetchMealPlan2","_callee5","_mealPlanData$user_in","hasCachedPlan","formattedPlans","errorMessage","_args5","_context5","generateMealPlan","formatMealPlanData","Array","isArray","calculateTotalCalories","user_info","includes","getDefaultMealPlan","_this2","document","addEventListener","event","_handleKeywordToggled","detail","keyword","selected","_refreshDailyData","source","setTimeout","_refreshDailyData2","_callee6","_context6","HomeView","render","afterRender","querySelectorAll","button","mealId","dataset","location","hash","_handleDeleteMeal2","_callee7","mealToDelete","errorText","_errorText","_context7","alert","find","_handleSearchMealDelete","text","_x2","_handleSearchMealDelete2","_callee8","mealData","_context8","filter","reduce","total","_x3","_x4","category","_this3","showCategoryPopup","hideCategoryPopup","validateKeywords","keywordElement","querySelector","classList","remove","k","categoryCounts","countSelectedKeywordsByCategory","_handleFindMeals2","_callee9","suggestionsData","formattedSuggestions","_context9","getMealSuggestions","suggestions","map","suggestion","carbohydrate","_useFallbackSuggestions","_handleGenerateMealPlan2","_callee0","_context0","FoodCard","showAddMealPopup","_showSuggestionMealPopup","foodData","_this4","existingPopup","getElementById","popupHTML","body","insertAdjacentHTML","overlay","closeBtn","cancelBtn","addBtn","closePopup","parentNode","removeChild","target","_callee1","_document$getElementB","_document$getElementB2","_document$getElementB3","mealType","logDate","mealEntryData","_context1","disabled","textContent","startsWith","log_date","addMealFromSuggestion","_handleSuggestedMealDetailsClicked2","_callee10","_meal$recipe_metadata","_meal$recipe_metadata2","_meal$recipe_metadata3","_meal$recipe_metadata4","_meal$recipe_metadata5","_context10","_showMealDetailsPopup","isDefault","cookTime","recipe_metadata","cook_time","prepTime","prep_time","totalTime","total_time","ingredients","nutrition","total_nutrition","_x5","popupContent","ingredient","join","fiber","sugar","sodium","cholesterol","handleEscape","removeEventListener"],"sourceRoot":""}